module Sandwich.Implementation.Openssl3_impl.Tunnel.Verify_callback
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

let x509_store_context_get_error
      (store_ctx: Core.Ptr.Non_null.t_NonNull Openssl3.t_x509_store_ctx_st)
     =
  Rust_primitives.Hax.failure "(RefMut) Fatal error: something we considered as impossible occurred! \027[1mPlease report this by submitting an issue on GitHub!\027[0m\nDetails: expected an arrow type here"
    "rust_primitives::hax::failure(\n        \"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\n        \"openssl3::foreign_mod_2256::v_X509_STORE_CTX_get_error\",\n    )(\n        rust_primitives::hax::failure(\n            \"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\n            \"rust_primitives::hax::failure(\\n        \\\"(AST import) Fatal error: something we considered as impossible occurred! \\\\027[1mPlease report this by submitting an issue on GitHub!\\\\027[0m\\\\nDetails: Pointer, with [cast] being Types.MutToConstPointer\\\",\\n        \\\"{ Types.attributes = [];\\\\n  contents =\\\\n  Types.PointerCoercion {cast = Types.MutToConstPointer;\\\\n    source =\\\\n    { Types.attributes = [];\\\\n      contents =\\\\n      Types.Call {\\\\n        args =\\\\n        [{ Types.attributes = [];\\\\n           contents =\\\\n           Types.VarRef {\\\\n             id =\\\\n             { Types.id =\\\\n               { Types.local_id = \\\\\\\"2\\\\\\\";\\\\n                 owner =\\\\n                 { Types.index = (0, 466); is_local = true;\\\\n                   krate = \\\\\\\"sandwich\\\\\\\";\\\\n                   path =\\\\n                   [{ Types.data = (Types.TypeNs \\\\\\\"implementation\\\\\\\");\\\\n                      disambiguator = 0 };\\\\n                     { Types.data = (Types.TypeNs \\\\\\\"openssl3_impl\\\\\\\");\\\\n                       disambiguator = 0 };\\\\n                     { Types.data = (Types.TypeNs \\\\\\\"tunnel\\\\\\\");\\\\n                       disambiguator = 0 };\\\\n                     { Types.data = (Types.TypeNs \\\\\\\"verify_callback\\\\\\\");\\\\n                       disambiguator = 0 };\\\\n                     { Types.data =\\\\n                       (Types.ValueNs \\\\\\\"x509_store_context_get_error\\\\\\\");\\\\n                       disambiguator = 0 }\\\\n                     ]\\\\n                   }\\\\n                 };\\\\n               name = \\\\\\\"store_ctx\\\\\\\" }};\\\\n           hir_id = (Some (\\\\\\\"466\\\\\\\", \\\\\\\"10\\\\\\\"));\\\\n           span =\\\\n           { Types.filename =\\\\n             (Types.Real\\\\n                (Types.LocalPath\\\\n                   \\\\\\\"rust/implementation/openssl3_impl/tunnel/verify_callback.rs\\\\\\\"));\\\\n             hi = { Types.col = \\\\\\\"57\\\\\\\"; line = \\\\\\\"28\\\\\\\" };\\\\n             lo = { Types.col = \\\\\\\"48\\\\\\\"; line = \\\\\\\"28\\\\\\\" } };\\\\n           ty =\\\\n           { Types.kind =\\\\n             Types.Adt {\\\\n               def_id =\\\\n               { Types.index = (2, 2358); is_local = false; krate = \\\\\\\"core\\\\\\\";\\\\n                 path =\\\\n                 [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\"); disambiguator = 0 };\\\\n                   { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                     disambiguator = 0 };\\\\n                   { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\"); disambiguator = 0\\\\n                     }\\\\n                   ]\\\\n                 };\\\\n               generic_args =\\\\n               [(Types.Type\\\\n                   { Types.kind =\\\\n                     Types.Adt {\\\\n                       def_id =\\\\n                       { Types.index = (27, 21286); is_local = false;\\\\n                         krate = \\\\\\\"openssl3\\\\\\\";\\\\n                         path =\\\\n                         [{ Types.data = (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                            disambiguator = 0 }\\\\n                           ]\\\\n                         };\\\\n                       generic_args = []; trait_refs = []}\\\\n                     })\\\\n                 ];\\\\n               trait_refs = []}\\\\n             }\\\\n           }\\\\n          ];\\\\n        bounds_impls = [];\\\\n        fn_span =\\\\n        { Types.filename =\\\\n          (Types.Real\\\\n             (Types.LocalPath\\\\n                \\\\\\\"rust/implementation/openssl3_impl/tunnel/verify_callback.rs\\\\\\\"));\\\\n          hi = { Types.col = \\\\\\\"66\\\\\\\"; line = \\\\\\\"28\\\\\\\" };\\\\n          lo = { Types.col = \\\\\\\"58\\\\\\\"; line = \\\\\\\"28\\\\\\\" } };\\\\n        from_hir_call = true;\\\\n        fun' =\\\\n        { Types.attributes = [];\\\\n          contents =\\\\n          Types.GlobalName {\\\\n            id =\\\\n            { Types.index = (2, 2381); is_local = false; krate = \\\\\\\"core\\\\\\\";\\\\n              path =\\\\n              [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\"); disambiguator = 0 };\\\\n                { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\"); disambiguator = 0 };\\\\n                { Types.data = Types.Impl; disambiguator = 3 };\\\\n                { Types.data = (Types.ValueNs \\\\\\\"as_ptr\\\\\\\"); disambiguator = 0 }]\\\\n              }};\\\\n          hir_id = None;\\\\n          span =\\\\n          { Types.filename =\\\\n            (Types.Real\\\\n               (Types.LocalPath\\\\n                  \\\\\\\"rust/implementation/openssl3_impl/tunnel/verify_callback.rs\\\\\\\"));\\\\n            hi = { Types.col = \\\\\\\"64\\\\\\\"; line = \\\\\\\"28\\\\\\\" };\\\\n            lo = { Types.col = \\\\\\\"58\\\\\\\"; line = \\\\\\\"28\\\\\\\" } };\\\\n          ty =\\\\n          { Types.kind =\\\\n            (Types.Arrow\\\\n               { Types.bound_vars = [];\\\\n                 value =\\\\n                 { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"}; c_variadic = false;\\\\n                   inputs =\\\\n                   [{ Types.kind =\\\\n                      Types.Adt {\\\\n                        def_id =\\\\n                        { Types.index = (2, 2358); is_local = false;\\\\n                          krate = \\\\\\\"core\\\\\\\";\\\\n                          path =\\\\n                          [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                             disambiguator = 0 };\\\\n                            { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                              disambiguator = 0 };\\\\n                            { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                              disambiguator = 0 }\\\\n                            ]\\\\n                          };\\\\n                        generic_args =\\\\n                        [(Types.Type\\\\n                            { Types.kind =\\\\n                              Types.Adt {\\\\n                                def_id =\\\\n                                { Types.index = (27, 21286);\\\\n                                  is_local = false; krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                  path =\\\\n                                  [{ Types.data =\\\\n                                     (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                     disambiguator = 0 }\\\\n                                    ]\\\\n                                  };\\\\n                                generic_args = []; trait_refs = []}\\\\n                              })\\\\n                          ];\\\\n                        trait_refs = []}\\\\n                      }\\\\n                     ];\\\\n                   output =\\\\n                   { Types.kind =\\\\n                     (Types.RawPtr\\\\n                        ({ Types.kind =\\\\n                           Types.Adt {\\\\n                             def_id =\\\\n                             { Types.index = (27, 21286); is_local = false;\\\\n                               krate = \\\\\\\"openssl3\\\\\\\";\\\\n                               path =\\\\n                               [{ Types.data =\\\\n                                  (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                  disambiguator = 0 }\\\\n                                 ]\\\\n                               };\\\\n                             generic_args = []; trait_refs = []}\\\\n                           },\\\\n                         true))\\\\n                     };\\\\n                   safety = Types.Safe }\\\\n                 })\\\\n            }\\\\n          };\\\\n        generic_args =\\\\n        [(Types.Type\\\\n            { Types.kind =\\\\n              Types.Adt {\\\\n                def_id =\\\\n                { Types.index = (27, 21286); is_local = false;\\\\n                  krate = \\\\\\\"openssl3\\\\\\\";\\\\n                  path =\\\\n                  [{ Types.data = (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                     disambiguator = 0 }\\\\n                    ]\\\\n                  };\\\\n                generic_args = []; trait_refs = []}\\\\n              })\\\\n          ];\\\\n        trait = None;\\\\n        ty =\\\\n        { Types.kind =\\\\n          (Types.Arrow\\\\n             { Types.bound_vars = [];\\\\n               value =\\\\n               { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"}; c_variadic = false;\\\\n                 inputs =\\\\n                 [{ Types.kind =\\\\n                    Types.Adt {\\\\n                      def_id =\\\\n                      { Types.index = (2, 2358); is_local = false;\\\\n                        krate = \\\\\\\"core\\\\\\\";\\\\n                        path =\\\\n                        [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                           disambiguator = 0 };\\\\n                          { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                            disambiguator = 0 };\\\\n                          { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                            disambiguator = 0 }\\\\n                          ]\\\\n                        };\\\\n                      generic_args =\\\\n                      [(Types.Type\\\\n                          { Types.kind =\\\\n                            Types.Adt {\\\\n                              def_id =\\\\n                              { Types.index = (27, 21286); is_local = false;\\\\n                                krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                path =\\\\n                                [{ Types.data =\\\\n                                   (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                   disambiguator = 0 }\\\\n                                  ]\\\\n                                };\\\\n                              generic_args = []; trait_refs = []}\\\\n                            })\\\\n                        ];\\\\n                      trait_refs = []}\\\\n                    }\\\\n                   ];\\\\n                 output =\\\\n                 { Types.kind =\\\\n                   (Types.RawPtr\\\\n                      ({ Types.kind =\\\\n                         Types.Adt {\\\\n                           def_id =\\\\n                           { Types.index = (27, 21286); is_local = false;\\\\n                             krate = \\\\\\\"openssl3\\\\\\\";\\\\n                             path =\\\\n                             [{ Types.data =\\\\n                                (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                disambiguator = 0 }\\\\n                               ]\\\\n                             };\\\\n                           generic_args = []; trait_refs = []}\\\\n                         },\\\\n                       true))\\\\n                   };\\\\n                 safety = Types.Safe }\\\\n               })\\\\n          }};\\\\n      hir_id = None;\\\\n      span =\\\\n      { Types.filename =\\\\n        (Types.Real\\\\n           (Types.LocalPath\\\\n              \\\\\\\"rust/implementation/openssl3_impl/tunnel/verify_callback.rs\\\\\\\"));\\\\n        hi = { Types.col = \\\\\\\"66\\\\\\\"; line = \\\\\\\"28\\\\\\\" };\\\\n        lo = { Types.col = \\\\\\\"48\\\\\\\"; line = \\\\\\\"28\\\\\\\" } };\\\\n      ty =\\\\n      { Types.kind =\\\\n        (Types.RawPtr\\\\n           ({ Types.kind =\\\\n              Types.Adt {\\\\n                def_id =\\\\n                { Types.index = (27, 21286); is_local = false;\\\\n                  krate = \\\\\\\"openssl3\\\\\\\";\\\\n                  path =\\\\n                  [{ Types.data = (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                     disambiguator = 0 }\\\\n                    ]\\\\n                  };\\\\n                generic_args = []; trait_refs = []}\\\\n              },\\\\n            true))\\\\n        }\\\\n      }};\\\\n  hir_id = (Some (\\\\\\\"466\\\\\\\", \\\\\\\"8\\\\\\\"));\\\\n  span =\\\\n  { Types.filename =\\\\n    (Types.Real\\\\n       (Types.LocalPath\\\\n          \\\\\\\"rust/implementation/openssl3_impl/tunnel/verify_callback.rs\\\\\\\"));\\\\n    hi = { Types.col = \\\\\\\"66\\\\\\\"; line = \\\\\\\"28\\\\\\\" };\\\\n    lo = { Types.col = \\\\\\\"48\\\\\\\"; line = \\\\\\\"28\\\\\\\" } };\\\\n  ty =\\\\n  { Types.kind =\\\\n    (Types.RawPtr\\\\n       ({ Types.kind =\\\\n          Types.Adt {\\\\n            def_id =\\\\n            { Types.index = (27, 21286); is_local = false;\\\\n              krate = \\\\\\\"openssl3\\\\\\\";\\\\n              path =\\\\n              [{ Types.data = (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                 disambiguator = 0 }\\\\n                ]\\\\n              };\\\\n            generic_args = []; trait_refs = []}\\\\n          },\\\\n        false))\\\\n    }\\\\n  }\\\",\\n    )\",\n        ),\n    )"

let x509_store_context_get_ssl (store_ctx: Core.Ptr.Non_null.t_NonNull Openssl3.t_x509_store_ctx_st) =
  let ssl_index:i32 = Openssl3.Foreign_mod_3466.v_SSL_get_ex_data_X509_STORE_CTX_idx () in
  if ssl_index <. 0l
  then
    Core.Option.Option_None <: Core.Option.t_Option (Core.Ptr.Non_null.t_NonNull Openssl3.t_ssl_st)
  else
    Rust_primitives.Hax.failure "(RefMut) Fatal error: something we considered as impossible occurred! \027[1mPlease report this by submitting an issue on GitHub!\027[0m\nDetails: expected an arrow type here"
      "rust_primitives::hax::failure(\"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\"core::ptr::non_null::impl_3__new\")::<openssl3::t_ssl_st>(rust_primitives::hax::failure(\"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\"core::ptr::mut_ptr::impl__cast::<\\n        core::ffi::t_c_void,\\n        openssl3::t_ssl_st,\\n    >(unsafe {\\n        openssl3::foreign_mod_2255::v_X509_STORE_CTX_get_ex_data(\\n            rust_primitives::hax::failure(\\n                \\\"(AST import) Fatal error: something we considered as impossible occurred! \\\\027[1mPlease report this by submitting an issue on GitHub!\\\\027[0m\\\\nDetails: Pointer, with [cast] being Types.MutToConstPointer\\\",\\n                \\\"{ Types.attributes = [];\\\\n  contents =\\\\n  Types.PointerCoercion {cast = Types.MutToConstPointer;\\\\n    source =\\\\n    { Types.attributes = [];\\\\n      contents =\\\\n      Types.Call {\\\\n        args =\\\\n        [{ Types.attributes = [];\\\\n           contents =\\\\n           Types.VarRef {\\\\n             id =\\\\n             { Types.id =\\\\n               { Types.local_id = \\\\\\\"2\\\\\\\";\\\\n                 owner =\\\\n                 { Types.index = (0, 465); is_local = true;\\\\n                   krate = \\\\\\\"sandwich\\\\\\\";\\\\n                   path =\\\\n                   [{ Types.data = (Types.TypeNs \\\\\\\"implementation\\\\\\\");\\\\n                      disambiguator = 0 };\\\\n                     { Types.data = (Types.TypeNs \\\\\\\"openssl3_impl\\\\\\\");\\\\n                       disambiguator = 0 };\\\\n                     { Types.data = (Types.TypeNs \\\\\\\"tunnel\\\\\\\");\\\\n                       disambiguator = 0 };\\\\n                     { Types.data = (Types.TypeNs \\\\\\\"verify_callback\\\\\\\");\\\\n                       disambiguator = 0 };\\\\n                     { Types.data =\\\\n                       (Types.ValueNs \\\\\\\"x509_store_context_get_ssl\\\\\\\");\\\\n                       disambiguator = 0 }\\\\n                     ]\\\\n                   }\\\\n                 };\\\\n               name = \\\\\\\"store_ctx\\\\\\\" }};\\\\n           hir_id = (Some (\\\\\\\"465\\\\\\\", \\\\\\\"39\\\\\\\"));\\\\n           span =\\\\n           { Types.filename =\\\\n             (Types.Real\\\\n                (Types.LocalPath\\\\n                   \\\\\\\"rust/implementation/openssl3_impl/tunnel/verify_callback.rs\\\\\\\"));\\\\n             hi = { Types.col = \\\\\\\"63\\\\\\\"; line = \\\\\\\"22\\\\\\\" };\\\\n             lo = { Types.col = \\\\\\\"54\\\\\\\"; line = \\\\\\\"22\\\\\\\" } };\\\\n           ty =\\\\n           { Types.kind =\\\\n             Types.Adt {\\\\n               def_id =\\\\n               { Types.index = (2, 2358); is_local = false; krate = \\\\\\\"core\\\\\\\";\\\\n                 path =\\\\n                 [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\"); disambiguator = 0 };\\\\n                   { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                     disambiguator = 0 };\\\\n                   { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\"); disambiguator = 0\\\\n                     }\\\\n                   ]\\\\n                 };\\\\n               generic_args =\\\\n               [(Types.Type\\\\n                   { Types.kind =\\\\n                     Types.Adt {\\\\n                       def_id =\\\\n                       { Types.index = (27, 21286); is_local = false;\\\\n                         krate = \\\\\\\"openssl3\\\\\\\";\\\\n                         path =\\\\n                         [{ Types.data = (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                            disambiguator = 0 }\\\\n                           ]\\\\n                         };\\\\n                       generic_args = []; trait_refs = []}\\\\n                     })\\\\n                 ];\\\\n               trait_refs = []}\\\\n             }\\\\n           }\\\\n          ];\\\\n        bounds_impls = [];\\\\n        fn_span =\\\\n        { Types.filename =\\\\n          (Types.Real\\\\n             (Types.LocalPath\\\\n                \\\\\\\"rust/implementation/openssl3_impl/tunnel/verify_callback.rs\\\\\\\"));\\\\n          hi = { Types.col = \\\\\\\"72\\\\\\\"; line = \\\\\\\"22\\\\\\\" };\\\\n          lo = { Types.col = \\\\\\\"64\\\\\\\"; line = \\\\\\\"22\\\\\\\" } };\\\\n        from_hir_call = true;\\\\n        fun' =\\\\n        { Types.attributes = [];\\\\n          contents =\\\\n          Types.GlobalName {\\\\n            id =\\\\n            { Types.index = (2, 2381); is_local = false; krate = \\\\\\\"core\\\\\\\";\\\\n              path =\\\\n              [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\"); disambiguator = 0 };\\\\n                { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\"); disambiguator = 0 };\\\\n                { Types.data = Types.Impl; disambiguator = 3 };\\\\n                { Types.data = (Types.ValueNs \\\\\\\"as_ptr\\\\\\\"); disambiguator = 0 }]\\\\n              }};\\\\n          hir_id = None;\\\\n          span =\\\\n          { Types.filename =\\\\n            (Types.Real\\\\n               (Types.LocalPath\\\\n                  \\\\\\\"rust/implementation/openssl3_impl/tunnel/verify_callback.rs\\\\\\\"));\\\\n            hi = { Types.col = \\\\\\\"70\\\\\\\"; line = \\\\\\\"22\\\\\\\" };\\\\n            lo = { Types.col = \\\\\\\"64\\\\\\\"; line = \\\\\\\"22\\\\\\\" } };\\\\n          ty =\\\\n          { Types.kind =\\\\n            (Types.Arrow\\\\n               { Types.bound_vars = [];\\\\n                 value =\\\\n                 { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"}; c_variadic = false;\\\\n                   inputs =\\\\n                   [{ Types.kind =\\\\n                      Types.Adt {\\\\n                        def_id =\\\\n                        { Types.index = (2, 2358); is_local = false;\\\\n                          krate = \\\\\\\"core\\\\\\\";\\\\n                          path =\\\\n                          [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                             disambiguator = 0 };\\\\n                            { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                              disambiguator = 0 };\\\\n                            { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                              disambiguator = 0 }\\\\n                            ]\\\\n                          };\\\\n                        generic_args =\\\\n                        [(Types.Type\\\\n                            { Types.kind =\\\\n                              Types.Adt {\\\\n                                def_id =\\\\n                                { Types.index = (27, 21286);\\\\n                                  is_local = false; krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                  path =\\\\n                                  [{ Types.data =\\\\n                                     (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                     disambiguator = 0 }\\\\n                                    ]\\\\n                                  };\\\\n                                generic_args = []; trait_refs = []}\\\\n                              })\\\\n                          ];\\\\n                        trait_refs = []}\\\\n                      }\\\\n                     ];\\\\n                   output =\\\\n                   { Types.kind =\\\\n                     (Types.RawPtr\\\\n                        ({ Types.kind =\\\\n                           Types.Adt {\\\\n                             def_id =\\\\n                             { Types.index = (27, 21286); is_local = false;\\\\n                               krate = \\\\\\\"openssl3\\\\\\\";\\\\n                               path =\\\\n                               [{ Types.data =\\\\n                                  (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                  disambiguator = 0 }\\\\n                                 ]\\\\n                               };\\\\n                             generic_args = []; trait_refs = []}\\\\n                           },\\\\n                         true))\\\\n                     };\\\\n                   safety = Types.Safe }\\\\n                 })\\\\n            }\\\\n          };\\\\n        generic_args =\\\\n        [(Types.Type\\\\n            { Types.kind =\\\\n              Types.Adt {\\\\n                def_id =\\\\n                { Types.index = (27, 21286); is_local = false;\\\\n                  krate = \\\\\\\"openssl3\\\\\\\";\\\\n                  path =\\\\n                  [{ Types.data = (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                     disambiguator = 0 }\\\\n                    ]\\\\n                  };\\\\n                generic_args = []; trait_refs = []}\\\\n              })\\\\n          ];\\\\n        trait = None;\\\\n        ty =\\\\n        { Types.kind =\\\\n          (Types.Arrow\\\\n             { Types.bound_vars = [];\\\\n               value =\\\\n               { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"}; c_variadic = false;\\\\n                 inputs =\\\\n                 [{ Types.kind =\\\\n                    Types.Adt {\\\\n                      def_id =\\\\n                      { Types.index = (2, 2358); is_local = false;\\\\n                        krate = \\\\\\\"core\\\\\\\";\\\\n                        path =\\\\n                        [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                           disambiguator = 0 };\\\\n                          { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                            disambiguator = 0 };\\\\n                          { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                            disambiguator = 0 }\\\\n                          ]\\\\n                        };\\\\n                      generic_args =\\\\n                      [(Types.Type\\\\n                          { Types.kind =\\\\n                            Types.Adt {\\\\n                              def_id =\\\\n                              { Types.index = (27, 21286); is_local = false;\\\\n                                krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                path =\\\\n                                [{ Types.data =\\\\n                                   (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                   disambiguator = 0 }\\\\n                                  ]\\\\n                                };\\\\n                              generic_args = []; trait_refs = []}\\\\n                            })\\\\n                        ];\\\\n                      trait_refs = []}\\\\n                    }\\\\n                   ];\\\\n                 output =\\\\n                 { Types.kind =\\\\n                   (Types.RawPtr\\\\n                      ({ Types.kind =\\\\n                         Types.Adt {\\\\n                           def_id =\\\\n                           { Types.index = (27, 21286); is_local = false;\\\\n                             krate = \\\\\\\"openssl3\\\\\\\";\\\\n                             path =\\\\n                             [{ Types.data =\\\\n                                (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                disambiguator = 0 }\\\\n                               ]\\\\n                             };\\\\n                           generic_args = []; trait_refs = []}\\\\n                         },\\\\n                       true))\\\\n                   };\\\\n                 safety = Types.Safe }\\\\n               })\\\\n          }};\\\\n      hir_id = None;\\\\n      span =\\\\n      { Types.filename =\\\\n        (Types.Real\\\\n           (Types.LocalPath\\\\n              \\\\\\\"rust/implementation/openssl3_impl/tunnel/verify_callback.rs\\\\\\\"));\\\\n        hi = { Types.col = \\\\\\\"72\\\\\\\"; line = \\\\\\\"22\\\\\\\" };\\\\n        lo = { Types.col = \\\\\\\"54\\\\\\\"; line = \\\\\\\"22\\\\\\\" } };\\\\n      ty =\\\\n      { Types.kind =\\\\n        (Types.RawPtr\\\\n           ({ Types.kind =\\\\n              Types.Adt {\\\\n                def_id =\\\\n                { Types.index = (27, 21286); is_local = false;\\\\n                  krate = \\\\\\\"openssl3\\\\\\\";\\\\n                  path =\\\\n                  [{ Types.data = (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                     disambiguator = 0 }\\\\n                    ]\\\\n                  };\\\\n                generic_args = []; trait_refs = []}\\\\n              },\\\\n            true))\\\\n        }\\\\n      }};\\\\n  hir_id = (Some (\\\\\\\"465\\\\\\\", \\\\\\\"37\\\\\\\"));\\\\n  span =\\\\n  { Types.filename =\\\\n    (Types.Real\\\\n       (Types.LocalPath\\\\n          \\\\\\\"rust/implementation/openssl3_impl/tunnel/verify_callback.rs\\\\\\\"));\\\\n    hi = { Types.col = \\\\\\\"72\\\\\\\"; line = \\\\\\\"22\\\\\\\" };\\\\n    lo = { Types.col = \\\\\\\"54\\\\\\\"; line = \\\\\\\"22\\\\\\\" } };\\\\n  ty =\\\\n  { Types.kind =\\\\n    (Types.RawPtr\\\\n       ({ Types.kind =\\\\n          Types.Adt {\\\\n            def_id =\\\\n            { Types.index = (27, 21286); is_local = false;\\\\n              krate = \\\\\\\"openssl3\\\\\\\";\\\\n              path =\\\\n              [{ Types.data = (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                 disambiguator = 0 }\\\\n                ]\\\\n              };\\\\n            generic_args = []; trait_refs = []}\\\\n          },\\\\n        false))\\\\n    }\\\\n  }\\\",\\n            ),\\n            ssl_index,\\n        )\\n    })\"))"

let x509_store_context_record_error
      (#impl_765196419_: Type0)
      (#[FStar.Tactics.Typeclasses.tcresolve ()] i1: Core.Convert.t_Into impl_765196419_ i32)
      (store_ctx: Core.Ptr.Non_null.t_NonNull Openssl3.t_x509_store_ctx_st)
      (error: impl_765196419_)
     =
  let _:Prims.unit =
    Rust_primitives.Hax.failure "(RefMut) Fatal error: something we considered as impossible occurred! \027[1mPlease report this by submitting an issue on GitHub!\027[0m\nDetails: expected an arrow type here"
      "rust_primitives::hax::failure(\n        \"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\n        \"openssl3::foreign_mod_2257::v_X509_STORE_CTX_set_error\",\n    )(\n        rust_primitives::hax::failure(\n            \"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\n            \"core::ptr::non_null::impl_3__as_ptr::<openssl3::t_x509_store_ctx_st>(store_ctx)\",\n        ),\n        core::convert::f_into(error),\n    )"

  in
  ()

(* item error backend: (reject_RawOrMutPointer) ExplicitRejection { reason: "a node of kind [Raw_pointer] have been found in the AST" }
Last available AST for this item:

/// The verify callback to be used.
/// This callback is passed to `SSL_set_verify`.
#[cfg(feature = "tunnel")]
#[cfg(feature = "openssl3")]
#[deny(bare_trait_objects)]
#[feature(register_tool)]
#[register_tool(_hax)]
fn verify_callback(mut verify_code: int, store_ctx: raw_pointer!()) -> int {
    {
        let _: tuple0 = {
            (if core::cmp::PartialEq::eq(verify_code, 1) {
                rust_primitives::hax::never_to_any({ (return verify_code) })
            })
        };
        (match (core::ptr::non_null::impl_3__new::<
            openssl3::t_x509_store_ctx_st,
        >(store_ctx)) {
            core::option::Option_Some(store_ctx) => {
                (match (sandwich::implementation::openssl3_impl::tunnel::verify_callback::x509_store_context_get_ssl(
                    store_ctx,
                )) {
                    core::option::Option_Some(ssl) => {
                        let ssl_wrapped: sandwich::implementation::openssl3_impl::tunnel::ssl::t_Ssl = {
                            core::convert::f_from(ssl)
                        };
                        (match (sandwich::implementation::openssl3_impl::tunnel::ssl::impl__Ssl__get_tunnel_security_requirements::<
                            lifetime!(something),
                        >(&(ssl_wrapped))) {
                            core::option::Option_Some(security_requirements) => {
                                let current_error: int = {
                                    sandwich::implementation::openssl3_impl::tunnel::verify_callback::x509_store_context_get_error(
                                        store_ctx,
                                    )
                                };
                                {
                                    let _: tuple0 = {
                                        (if sandwich::tunnel::tls::impl__TunnelSecurityRequirements__openssl3_assess_x509_store_error(
                                            &(deref(security_requirements)),
                                            current_error,
                                        ) {
                                            {
                                                let _: tuple0 = { (verify_code = 1) };
                                                {
                                                    let _: tuple0 = {
                                                        sandwich::implementation::openssl3_impl::tunnel::verify_callback::x509_store_context_record_error::<
                                                            int,
                                                        >(store_ctx, cast(openssl3::v_X509_V_OK))
                                                    };
                                                    Tuple0
                                                }
                                            }
                                        })
                                    };
                                    { verify_code }
                                }
                            }
                            _ => {
                                let _: rust_primitives::hax::t_Never = { (return 0) };
                                Tuple0
                            }
                        })
                    }
                    _ => {
                        let _: rust_primitives::hax::t_Never = { (return 0) };
                        Tuple0
                    }
                })
            }
            _ => {
                let _: rust_primitives::hax::t_Never = { (return 0) };
                Tuple0
            }
        })
    }
}


Last AST:
/** print_rust: pitem: not implemented  (item: { Concrete_ident.T.def_id =
  { Concrete_ident.Imported.krate = "sandwich";
    path =
    [{ Concrete_ident.Imported.data =
       (Concrete_ident.Imported.TypeNs "implementation"); disambiguator = 0 };
      { Concrete_ident.Imported.data =
        (Concrete_ident.Imported.TypeNs "openssl3_impl"); disambiguator = 0 };
      { Concrete_ident.Imported.data =
        (Concrete_ident.Imported.TypeNs "tunnel"); disambiguator = 0 };
      { Concrete_ident.Imported.data =
        (Concrete_ident.Imported.TypeNs "verify_callback"); disambiguator = 0
        };
      { Concrete_ident.Imported.data =
        (Concrete_ident.Imported.ValueNs "verify_callback");
        disambiguator = 0 }
      ]
    };
  kind = Concrete_ident.Kind.Value }) */
const _: () = ();
 *)
