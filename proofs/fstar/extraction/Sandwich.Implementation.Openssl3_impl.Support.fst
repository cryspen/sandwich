module Sandwich.Implementation.Openssl3_impl.Support
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

let _ =
  (* This module has implicit dependencies, here we make them explicit. *)
  (* The implicit dependencies arise from typeclasses instances. *)
  let open Sandwich.Error in
  let open Sandwich.Error.Code in
  ()

let cipher_name
      (#impl_488124255_: Type0)
      (#[FStar.Tactics.Typeclasses.tcresolve ()] i1: Core.Convert.t_AsRef impl_488124255_ string)
      (name: impl_488124255_)
     =
  match
    Core.Result.impl__ok #Alloc.Ffi.C_str.t_CString
      #Alloc.Ffi.C_str.t_NulError
      (Alloc.Ffi.C_str.impl__CString__new #Alloc.String.t_String
          (Alloc.String.f_to_string #string
              #FStar.Tactics.Typeclasses.solve
              (Core.Convert.f_as_ref #impl_488124255_ #string #FStar.Tactics.Typeclasses.solve name
                <:
                string)
            <:
            Alloc.String.t_String)
        <:
        Core.Result.t_Result Alloc.Ffi.C_str.t_CString Alloc.Ffi.C_str.t_NulError)
  with
  | Core.Option.Option_Some cstr ->
    Core.Option.impl__and_then #(Core.Ptr.Non_null.t_NonNull i8)
      #string
      (Rust_primitives.Hax.failure "(RefMut) Fatal error: something we considered as impossible occurred! \027[1mPlease report this by submitting an issue on GitHub!\027[0m\nDetails: expected an arrow type here"
          "rust_primitives::hax::failure(\"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\"core::ptr::non_null::impl_3__new\")::<int>(rust_primitives::hax::failure(\"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\"core::ptr::const_ptr::impl__cast_mut::<\\n        int,\\n    >(\\n        rust_primitives::hax::failure(\\n            \\\"(AST import) Unsafe blocks are not allowed.\\\",\\n            \\\"{ Types.attributes = [];\\\\n  contents =\\\\n  Types.Block {\\\\n    expr =\\\\n    (Some { Types.attributes = [];\\\\n            contents =\\\\n            Types.Call {\\\\n              args =\\\\n              [{ Types.attributes = [];\\\\n                 contents =\\\\n                 Types.Call {\\\\n                   args =\\\\n                   [{ Types.attributes = [];\\\\n                      contents =\\\\n                      Types.Borrow {\\\\n                        arg =\\\\n                        { Types.attributes = [];\\\\n                          contents =\\\\n                          Types.Deref {\\\\n                            arg =\\\\n                            { Types.attributes = [];\\\\n                              contents =\\\\n                              Types.Call {\\\\n                                args =\\\\n                                [{ Types.attributes = [];\\\\n                                   contents =\\\\n                                   Types.Borrow {\\\\n                                     arg =\\\\n                                     { Types.attributes = [];\\\\n                                       contents =\\\\n                                       Types.VarRef {\\\\n                                         id =\\\\n                                         { Types.id =\\\\n                                           { Types.local_id = \\\\\\\"36\\\\\\\";\\\\n                                             owner =\\\\n                                             { Types.index = (0, 193);\\\\n                                               krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                               path =\\\\n                                               [{ Types.data =\\\\n                                                  (Types.TypeNs\\\\n                                                     \\\\\\\"implementation\\\\\\\");\\\\n                                                  disambiguator = 0 };\\\\n                                                 { Types.data =\\\\n                                                   (Types.TypeNs\\\\n                                                      \\\\\\\"openssl3_impl\\\\\\\");\\\\n                                                   disambiguator = 0 };\\\\n                                                 { Types.data =\\\\n                                                   (Types.TypeNs \\\\\\\"support\\\\\\\");\\\\n                                                   disambiguator = 0 };\\\\n                                                 { Types.data =\\\\n                                                   (Types.ValueNs\\\\n                                                      \\\\\\\"cipher_name\\\\\\\");\\\\n                                                   disambiguator = 0 }\\\\n                                                 ]\\\\n                                               }\\\\n                                             };\\\\n                                           name = \\\\\\\"cstr\\\\\\\" }};\\\\n                                       hir_id = None;\\\\n                                       span =\\\\n                                       { Types.filename =\\\\n                                         (Types.Real\\\\n                                            (Types.LocalPath\\\\n                                               \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                                         hi =\\\\n                                         { Types.col = \\\\\\\"60\\\\\\\"; line = \\\\\\\"254\\\\\\\" };\\\\n                                         lo =\\\\n                                         { Types.col = \\\\\\\"56\\\\\\\"; line = \\\\\\\"254\\\\\\\" } };\\\\n                                       ty =\\\\n                                       Types.Adt {\\\\n                                         def_id =\\\\n                                         { Types.index = (5, 7722);\\\\n                                           krate = \\\\\\\"alloc\\\\\\\";\\\\n                                           path =\\\\n                                           [{ Types.data =\\\\n                                              (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                              disambiguator = 0 };\\\\n                                             { Types.data =\\\\n                                               (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                                               disambiguator = 0 };\\\\n                                             { Types.data =\\\\n                                               (Types.TypeNs \\\\\\\"CString\\\\\\\");\\\\n                                               disambiguator = 0 }\\\\n                                             ]\\\\n                                           };\\\\n                                         generic_args = []; trait_refs = []}\\\\n                                       };\\\\n                                     borrow_kind = Types.Shared};\\\\n                                   hir_id = None;\\\\n                                   span =\\\\n                                   { Types.filename =\\\\n                                     (Types.Real\\\\n                                        (Types.LocalPath\\\\n                                           \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                                     hi = { Types.col = \\\\\\\"60\\\\\\\"; line = \\\\\\\"254\\\\\\\" };\\\\n                                     lo = { Types.col = \\\\\\\"56\\\\\\\"; line = \\\\\\\"254\\\\\\\" }\\\\n                                     };\\\\n                                   ty =\\\\n                                   (Types.Ref\\\\n                                      ({ Types.kind = Types.ReErased },\\\\n                                       Types.Adt {\\\\n                                         def_id =\\\\n                                         { Types.index = (5, 7722);\\\\n                                           krate = \\\\\\\"alloc\\\\\\\";\\\\n                                           path =\\\\n                                           [{ Types.data =\\\\n                                              (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                              disambiguator = 0 };\\\\n                                             { Types.data =\\\\n                                               (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                                               disambiguator = 0 };\\\\n                                             { Types.data =\\\\n                                               (Types.TypeNs \\\\\\\"CString\\\\\\\");\\\\n                                               disambiguator = 0 }\\\\n                                             ]\\\\n                                           };\\\\n                                         generic_args = []; trait_refs = []},\\\\n                                       false))\\\\n                                   }\\\\n                                  ];\\\\n                                bounds_impls = [];\\\\n                                fn_span =\\\\n                                { Types.filename =\\\\n                                  (Types.Real\\\\n                                     (Types.LocalPath\\\\n                                        \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                                  hi = { Types.col = \\\\\\\"69\\\\\\\"; line = \\\\\\\"254\\\\\\\" };\\\\n                                  lo = { Types.col = \\\\\\\"56\\\\\\\"; line = \\\\\\\"254\\\\\\\" } };\\\\n                                from_hir_call = false;\\\\n                                fun' =\\\\n                                { Types.attributes = [];\\\\n                                  contents =\\\\n                                  Types.GlobalName {\\\\n                                    id =\\\\n                                    { Types.index = (2, 3455);\\\\n                                      krate = \\\\\\\"core\\\\\\\";\\\\n                                      path =\\\\n                                      [{ Types.data = (Types.TypeNs \\\\\\\"ops\\\\\\\");\\\\n                                         disambiguator = 0 };\\\\n                                        { Types.data = (Types.TypeNs \\\\\\\"deref\\\\\\\");\\\\n                                          disambiguator = 0 };\\\\n                                        { Types.data = (Types.TypeNs \\\\\\\"Deref\\\\\\\");\\\\n                                          disambiguator = 0 };\\\\n                                        { Types.data =\\\\n                                          (Types.ValueNs \\\\\\\"deref\\\\\\\");\\\\n                                          disambiguator = 0 }\\\\n                                        ]\\\\n                                      }};\\\\n                                  hir_id = None;\\\\n                                  span =\\\\n                                  { Types.filename =\\\\n                                    (Types.Real\\\\n                                       (Types.LocalPath\\\\n                                          \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                                    hi = { Types.col = \\\\\\\"69\\\\\\\"; line = \\\\\\\"254\\\\\\\" };\\\\n                                    lo = { Types.col = \\\\\\\"56\\\\\\\"; line = \\\\\\\"254\\\\\\\" } };\\\\n                                  ty =\\\\n                                  (Types.Arrow\\\\n                                     { Types.bound_vars =\\\\n                                       [(Types.Region\\\\n                                           (Types.BrNamed\\\\n                                              ({ Types.index = (2, 55519);\\\\n                                                 krate = \\\\\\\"core\\\\\\\";\\\\n                                                 path =\\\\n                                                 [{ Types.data =\\\\n                                                    (Types.TypeNs \\\\\\\"ops\\\\\\\");\\\\n                                                    disambiguator = 0 };\\\\n                                                   { Types.data =\\\\n                                                     (Types.TypeNs \\\\\\\"deref\\\\\\\");\\\\n                                                     disambiguator = 0 };\\\\n                                                   { Types.data =\\\\n                                                     (Types.TypeNs \\\\\\\"Deref\\\\\\\");\\\\n                                                     disambiguator = 0 };\\\\n                                                   { Types.data =\\\\n                                                     (Types.ValueNs \\\\\\\"deref\\\\\\\");\\\\n                                                     disambiguator = 0 };\\\\n                                                   { Types.data =\\\\n                                                     (Types.LifetimeNs \\\\\\\"'_\\\\\\\");\\\\n                                                     disambiguator = 0 }\\\\n                                                   ]\\\\n                                                 },\\\\n                                               \\\\\\\"'_\\\\\\\")))\\\\n                                         ];\\\\n                                       value =\\\\n                                       { Types.abi =\\\\n                                         Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                                         c_variadic = false;\\\\n                                         inputs =\\\\n                                         [(Types.Ref\\\\n                                             ({ Types.kind =\\\\n                                                (Types.ReBound\\\\n                                                   (\\\\\\\"0\\\\\\\",\\\\n                                                    { Types.kind =\\\\n                                                      (Types.BrNamed\\\\n                                                         ({ Types.index =\\\\n                                                            (2, 55519);\\\\n                                                            krate = \\\\\\\"core\\\\\\\";\\\\n                                                            path =\\\\n                                                            [{ Types.data =\\\\n                                                               (Types.TypeNs\\\\n                                                                  \\\\\\\"ops\\\\\\\");\\\\n                                                               disambiguator =\\\\n                                                               0 };\\\\n                                                              { Types.data =\\\\n                                                                (Types.TypeNs\\\\n                                                                   \\\\\\\"deref\\\\\\\");\\\\n                                                                disambiguator =\\\\n                                                                0 };\\\\n                                                              { Types.data =\\\\n                                                                (Types.TypeNs\\\\n                                                                   \\\\\\\"Deref\\\\\\\");\\\\n                                                                disambiguator =\\\\n                                                                0 };\\\\n                                                              { Types.data =\\\\n                                                                (Types.ValueNs\\\\n                                                                   \\\\\\\"deref\\\\\\\");\\\\n                                                                disambiguator =\\\\n                                                                0 };\\\\n                                                              { Types.data =\\\\n                                                                (Types.LifetimeNs\\\\n                                                                   \\\\\\\"'_\\\\\\\");\\\\n                                                                disambiguator =\\\\n                                                                0 }\\\\n                                                              ]\\\\n                                                            },\\\\n                                                          \\\\\\\"'_\\\\\\\"));\\\\n                                                      var = \\\\\\\"0\\\\\\\" }))\\\\n                                                },\\\\n                                              Types.Adt {\\\\n                                                def_id =\\\\n                                                { Types.index = (5, 7722);\\\\n                                                  krate = \\\\\\\"alloc\\\\\\\";\\\\n                                                  path =\\\\n                                                  [{ Types.data =\\\\n                                                     (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                                     disambiguator = 0 };\\\\n                                                    { Types.data =\\\\n                                                      (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                                                      disambiguator = 0 };\\\\n                                                    { Types.data =\\\\n                                                      (Types.TypeNs \\\\\\\"CString\\\\\\\");\\\\n                                                      disambiguator = 0 }\\\\n                                                    ]\\\\n                                                  };\\\\n                                                generic_args = [];\\\\n                                                trait_refs = []},\\\\n                                              false))\\\\n                                           ];\\\\n                                         output =\\\\n                                         (Types.Ref\\\\n                                            ({ Types.kind =\\\\n                                               (Types.ReBound\\\\n                                                  (\\\\\\\"0\\\\\\\",\\\\n                                                   { Types.kind =\\\\n                                                     (Types.BrNamed\\\\n                                                        ({ Types.index =\\\\n                                                           (2, 55519);\\\\n                                                           krate = \\\\\\\"core\\\\\\\";\\\\n                                                           path =\\\\n                                                           [{ Types.data =\\\\n                                                              (Types.TypeNs\\\\n                                                                 \\\\\\\"ops\\\\\\\");\\\\n                                                              disambiguator =\\\\n                                                              0 };\\\\n                                                             { Types.data =\\\\n                                                               (Types.TypeNs\\\\n                                                                  \\\\\\\"deref\\\\\\\");\\\\n                                                               disambiguator =\\\\n                                                               0 };\\\\n                                                             { Types.data =\\\\n                                                               (Types.TypeNs\\\\n                                                                  \\\\\\\"Deref\\\\\\\");\\\\n                                                               disambiguator =\\\\n                                                               0 };\\\\n                                                             { Types.data =\\\\n                                                               (Types.ValueNs\\\\n                                                                  \\\\\\\"deref\\\\\\\");\\\\n                                                               disambiguator =\\\\n                                                               0 };\\\\n                                                             { Types.data =\\\\n                                                               (Types.LifetimeNs\\\\n                                                                  \\\\\\\"'_\\\\\\\");\\\\n                                                               disambiguator =\\\\n                                                               0 }\\\\n                                                             ]\\\\n                                                           },\\\\n                                                         \\\\\\\"'_\\\\\\\"));\\\\n                                                     var = \\\\\\\"0\\\\\\\" }))\\\\n                                               },\\\\n                                             (Types.Alias\\\\n                                                { Types.args =\\\\n                                                  [(Types.Type\\\\n                                                      Types.Adt {\\\\n                                                        def_id =\\\\n                                                        { Types.index =\\\\n                                                          (5, 7722);\\\\n                                                          krate = \\\\\\\"alloc\\\\\\\";\\\\n                                                          path =\\\\n                                                          [{ Types.data =\\\\n                                                             (Types.TypeNs\\\\n                                                                \\\\\\\"ffi\\\\\\\");\\\\n                                                             disambiguator =\\\\n                                                             0 };\\\\n                                                            { Types.data =\\\\n                                                              (Types.TypeNs\\\\n                                                                 \\\\\\\"c_str\\\\\\\");\\\\n                                                              disambiguator =\\\\n                                                              0 };\\\\n                                                            { Types.data =\\\\n                                                              (Types.TypeNs\\\\n                                                                 \\\\\\\"CString\\\\\\\");\\\\n                                                              disambiguator =\\\\n                                                              0 }\\\\n                                                            ]\\\\n                                                          };\\\\n                                                        generic_args = [];\\\\n                                                        trait_refs = []})\\\\n                                                    ];\\\\n                                                  def_id =\\\\n                                                  { Types.index = (2, 3454);\\\\n                                                    krate = \\\\\\\"core\\\\\\\";\\\\n                                                    path =\\\\n                                                    [{ Types.data =\\\\n                                                       (Types.TypeNs \\\\\\\"ops\\\\\\\");\\\\n                                                       disambiguator = 0 };\\\\n                                                      { Types.data =\\\\n                                                        (Types.TypeNs \\\\\\\"deref\\\\\\\");\\\\n                                                        disambiguator = 0 };\\\\n                                                      { Types.data =\\\\n                                                        (Types.TypeNs \\\\\\\"Deref\\\\\\\");\\\\n                                                        disambiguator = 0 };\\\\n                                                      { Types.data =\\\\n                                                        (Types.TypeNs\\\\n                                                           \\\\\\\"Target\\\\\\\");\\\\n                                                        disambiguator = 0 }\\\\n                                                      ]\\\\n                                                    };\\\\n                                                  kind =\\\\n                                                  Types.Projection {\\\\n                                                    assoc_item =\\\\n                                                    { Types.container =\\\\n                                                      Types.TraitContainer;\\\\n                                                      def_id =\\\\n                                                      { Types.index =\\\\n                                                        (2, 3454);\\\\n                                                        krate = \\\\\\\"core\\\\\\\";\\\\n                                                        path =\\\\n                                                        [{ Types.data =\\\\n                                                           (Types.TypeNs\\\\n                                                              \\\\\\\"ops\\\\\\\");\\\\n                                                           disambiguator = 0\\\\n                                                           };\\\\n                                                          { Types.data =\\\\n                                                            (Types.TypeNs\\\\n                                                               \\\\\\\"deref\\\\\\\");\\\\n                                                            disambiguator = 0\\\\n                                                            };\\\\n                                                          { Types.data =\\\\n                                                            (Types.TypeNs\\\\n                                                               \\\\\\\"Deref\\\\\\\");\\\\n                                                            disambiguator = 0\\\\n                                                            };\\\\n                                                          { Types.data =\\\\n                                                            (Types.TypeNs\\\\n                                                               \\\\\\\"Target\\\\\\\");\\\\n                                                            disambiguator = 0\\\\n                                                            }\\\\n                                                          ]\\\\n                                                        };\\\\n                                                      fn_has_self_parameter =\\\\n                                                      false;\\\\n                                                      kind = Types.Type;\\\\n                                                      name = \\\\\\\"Target\\\\\\\";\\\\n                                                      opt_rpitit_info = None;\\\\n                                                      trait_item_def_id =\\\\n                                                      None };\\\\n                                                    impl_expr =\\\\n                                                    { Types.args = [];\\\\n                                                      impl =\\\\n                                                      Types.Concrete {\\\\n                                                        generics = [];\\\\n                                                        id =\\\\n                                                        { Types.index =\\\\n                                                          (5, 4829);\\\\n                                                          krate = \\\\\\\"alloc\\\\\\\";\\\\n                                                          path =\\\\n                                                          [{ Types.data =\\\\n                                                             (Types.TypeNs\\\\n                                                                \\\\\\\"ffi\\\\\\\");\\\\n                                                             disambiguator =\\\\n                                                             0 };\\\\n                                                            { Types.data =\\\\n                                                              (Types.TypeNs\\\\n                                                                 \\\\\\\"c_str\\\\\\\");\\\\n                                                              disambiguator =\\\\n                                                              0 };\\\\n                                                            { Types.data =\\\\n                                                              Types.Impl;\\\\n                                                              disambiguator =\\\\n                                                              3 }\\\\n                                                            ]\\\\n                                                          }};\\\\n                                                      trait =\\\\n                                                      { Types.def_id =\\\\n                                                        { Types.index =\\\\n                                                          (2, 3453);\\\\n                                                          krate = \\\\\\\"core\\\\\\\";\\\\n                                                          path =\\\\n                                                          [{ Types.data =\\\\n                                                             (Types.TypeNs\\\\n                                                                \\\\\\\"ops\\\\\\\");\\\\n                                                             disambiguator =\\\\n                                                             0 };\\\\n                                                            { Types.data =\\\\n                                                              (Types.TypeNs\\\\n                                                                 \\\\\\\"deref\\\\\\\");\\\\n                                                              disambiguator =\\\\n                                                              0 };\\\\n                                                            { Types.data =\\\\n                                                              (Types.TypeNs\\\\n                                                                 \\\\\\\"Deref\\\\\\\");\\\\n                                                              disambiguator =\\\\n                                                              0 }\\\\n                                                            ]\\\\n                                                          };\\\\n                                                        generic_args =\\\\n                                                        [(Types.Type\\\\n                                                            Types.Adt {\\\\n                                                              def_id =\\\\n                                                              { Types.index =\\\\n                                                                (5, 7722);\\\\n                                                                krate =\\\\n                                                                \\\\\\\"alloc\\\\\\\";\\\\n                                                                path =\\\\n                                                                [{ Types.data =\\\\n                                                                   (Types.TypeNs\\\\n                                                                    \\\\\\\"ffi\\\\\\\");\\\\n                                                                   disambiguator =\\\\n                                                                   0 };\\\\n                                                                  { Types.data =\\\\n                                                                    (\\\\n                                                                    Types.TypeNs\\\\n                                                                    \\\\\\\"c_str\\\\\\\");\\\\n                                                                    disambiguator =\\\\n                                                                    0 };\\\\n                                                                  { Types.data =\\\\n                                                                    (\\\\n                                                                    Types.TypeNs\\\\n                                                                    \\\\\\\"CString\\\\\\\");\\\\n                                                                    disambiguator =\\\\n                                                                    0 }\\\\n                                                                  ]\\\\n                                                                };\\\\n                                                              generic_args =\\\\n                                                              [];\\\\n                                                              trait_refs = []})\\\\n                                                          ]\\\\n                                                        }\\\\n                                                      }}\\\\n                                                  }),\\\\n                                             false));\\\\n                                         safety = Types.Safe }\\\\n                                       })\\\\n                                  };\\\\n                                generic_args = [];\\\\n                                trait =\\\\n                                (Some ({ Types.args = [];\\\\n                                         impl =\\\\n                                         Types.Concrete {generics = [];\\\\n                                           id =\\\\n                                           { Types.index = (5, 4829);\\\\n                                             krate = \\\\\\\"alloc\\\\\\\";\\\\n                                             path =\\\\n                                             [{ Types.data =\\\\n                                                (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                                disambiguator = 0 };\\\\n                                               { Types.data =\\\\n                                                 (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                                                 disambiguator = 0 };\\\\n                                               { Types.data = Types.Impl;\\\\n                                                 disambiguator = 3 }\\\\n                                               ]\\\\n                                             }};\\\\n                                         trait =\\\\n                                         { Types.def_id =\\\\n                                           { Types.index = (2, 3453);\\\\n                                             krate = \\\\\\\"core\\\\\\\";\\\\n                                             path =\\\\n                                             [{ Types.data =\\\\n                                                (Types.TypeNs \\\\\\\"ops\\\\\\\");\\\\n                                                disambiguator = 0 };\\\\n                                               { Types.data =\\\\n                                                 (Types.TypeNs \\\\\\\"deref\\\\\\\");\\\\n                                                 disambiguator = 0 };\\\\n                                               { Types.data =\\\\n                                                 (Types.TypeNs \\\\\\\"Deref\\\\\\\");\\\\n                                                 disambiguator = 0 }\\\\n                                               ]\\\\n                                             };\\\\n                                           generic_args =\\\\n                                           [(Types.Type\\\\n                                               Types.Adt {\\\\n                                                 def_id =\\\\n                                                 { Types.index = (5, 7722);\\\\n                                                   krate = \\\\\\\"alloc\\\\\\\";\\\\n                                                   path =\\\\n                                                   [{ Types.data =\\\\n                                                      (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                                      disambiguator = 0 };\\\\n                                                     { Types.data =\\\\n                                                       (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                                                       disambiguator = 0 };\\\\n                                                     { Types.data =\\\\n                                                       (Types.TypeNs\\\\n                                                          \\\\\\\"CString\\\\\\\");\\\\n                                                       disambiguator = 0 }\\\\n                                                     ]\\\\n                                                   };\\\\n                                                 generic_args = [];\\\\n                                                 trait_refs = []})\\\\n                                             ]\\\\n                                           }\\\\n                                         },\\\\n                                       [(Types.Type\\\\n                                           Types.Adt {\\\\n                                             def_id =\\\\n                                             { Types.index = (5, 7722);\\\\n                                               krate = \\\\\\\"alloc\\\\\\\";\\\\n                                               path =\\\\n                                               [{ Types.data =\\\\n                                                  (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                                  disambiguator = 0 };\\\\n                                                 { Types.data =\\\\n                                                   (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                                                   disambiguator = 0 };\\\\n                                                 { Types.data =\\\\n                                                   (Types.TypeNs \\\\\\\"CString\\\\\\\");\\\\n                                                   disambiguator = 0 }\\\\n                                                 ]\\\\n                                               };\\\\n                                             generic_args = [];\\\\n                                             trait_refs = []})\\\\n                                         ]));\\\\n                                ty =\\\\n                                (Types.Arrow\\\\n                                   { Types.bound_vars =\\\\n                                     [(Types.Region\\\\n                                         (Types.BrNamed\\\\n                                            ({ Types.index = (2, 55519);\\\\n                                               krate = \\\\\\\"core\\\\\\\";\\\\n                                               path =\\\\n                                               [{ Types.data =\\\\n                                                  (Types.TypeNs \\\\\\\"ops\\\\\\\");\\\\n                                                  disambiguator = 0 };\\\\n                                                 { Types.data =\\\\n                                                   (Types.TypeNs \\\\\\\"deref\\\\\\\");\\\\n                                                   disambiguator = 0 };\\\\n                                                 { Types.data =\\\\n                                                   (Types.TypeNs \\\\\\\"Deref\\\\\\\");\\\\n                                                   disambiguator = 0 };\\\\n                                                 { Types.data =\\\\n                                                   (Types.ValueNs \\\\\\\"deref\\\\\\\");\\\\n                                                   disambiguator = 0 };\\\\n                                                 { Types.data =\\\\n                                                   (Types.LifetimeNs \\\\\\\"'_\\\\\\\");\\\\n                                                   disambiguator = 0 }\\\\n                                                 ]\\\\n                                               },\\\\n                                             \\\\\\\"'_\\\\\\\")))\\\\n                                       ];\\\\n                                     value =\\\\n                                     { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                                       c_variadic = false;\\\\n                                       inputs =\\\\n                                       [(Types.Ref\\\\n                                           ({ Types.kind =\\\\n                                              (Types.ReBound\\\\n                                                 (\\\\\\\"0\\\\\\\",\\\\n                                                  { Types.kind =\\\\n                                                    (Types.BrNamed\\\\n                                                       ({ Types.index =\\\\n                                                          (2, 55519);\\\\n                                                          krate = \\\\\\\"core\\\\\\\";\\\\n                                                          path =\\\\n                                                          [{ Types.data =\\\\n                                                             (Types.TypeNs\\\\n                                                                \\\\\\\"ops\\\\\\\");\\\\n                                                             disambiguator =\\\\n                                                             0 };\\\\n                                                            { Types.data =\\\\n                                                              (Types.TypeNs\\\\n                                                                 \\\\\\\"deref\\\\\\\");\\\\n                                                              disambiguator =\\\\n                                                              0 };\\\\n                                                            { Types.data =\\\\n                                                              (Types.TypeNs\\\\n                                                                 \\\\\\\"Deref\\\\\\\");\\\\n                                                              disambiguator =\\\\n                                                              0 };\\\\n                                                            { Types.data =\\\\n                                                              (Types.ValueNs\\\\n                                                                 \\\\\\\"deref\\\\\\\");\\\\n                                                              disambiguator =\\\\n                                                              0 };\\\\n                                                            { Types.data =\\\\n                                                              (Types.LifetimeNs\\\\n                                                                 \\\\\\\"'_\\\\\\\");\\\\n                                                              disambiguator =\\\\n                                                              0 }\\\\n                                                            ]\\\\n                                                          },\\\\n                                                        \\\\\\\"'_\\\\\\\"));\\\\n                                                    var = \\\\\\\"0\\\\\\\" }))\\\\n                                              },\\\\n                                            Types.Adt {\\\\n                                              def_id =\\\\n                                              { Types.index = (5, 7722);\\\\n                                                krate = \\\\\\\"alloc\\\\\\\";\\\\n                                                path =\\\\n                                                [{ Types.data =\\\\n                                                   (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                                   disambiguator = 0 };\\\\n                                                  { Types.data =\\\\n                                                    (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                                                    disambiguator = 0 };\\\\n                                                  { Types.data =\\\\n                                                    (Types.TypeNs \\\\\\\"CString\\\\\\\");\\\\n                                                    disambiguator = 0 }\\\\n                                                  ]\\\\n                                                };\\\\n                                              generic_args = [];\\\\n                                              trait_refs = []},\\\\n                                            false))\\\\n                                         ];\\\\n                                       output =\\\\n                                       (Types.Ref\\\\n                                          ({ Types.kind =\\\\n                                             (Types.ReBound\\\\n                                                (\\\\\\\"0\\\\\\\",\\\\n                                                 { Types.kind =\\\\n                                                   (Types.BrNamed\\\\n                                                      ({ Types.index =\\\\n                                                         (2, 55519);\\\\n                                                         krate = \\\\\\\"core\\\\\\\";\\\\n                                                         path =\\\\n                                                         [{ Types.data =\\\\n                                                            (Types.TypeNs\\\\n                                                               \\\\\\\"ops\\\\\\\");\\\\n                                                            disambiguator = 0\\\\n                                                            };\\\\n                                                           { Types.data =\\\\n                                                             (Types.TypeNs\\\\n                                                                \\\\\\\"deref\\\\\\\");\\\\n                                                             disambiguator =\\\\n                                                             0 };\\\\n                                                           { Types.data =\\\\n                                                             (Types.TypeNs\\\\n                                                                \\\\\\\"Deref\\\\\\\");\\\\n                                                             disambiguator =\\\\n                                                             0 };\\\\n                                                           { Types.data =\\\\n                                                             (Types.ValueNs\\\\n                                                                \\\\\\\"deref\\\\\\\");\\\\n                                                             disambiguator =\\\\n                                                             0 };\\\\n                                                           { Types.data =\\\\n                                                             (Types.LifetimeNs\\\\n                                                                \\\\\\\"'_\\\\\\\");\\\\n                                                             disambiguator =\\\\n                                                             0 }\\\\n                                                           ]\\\\n                                                         },\\\\n                                                       \\\\\\\"'_\\\\\\\"));\\\\n                                                   var = \\\\\\\"0\\\\\\\" }))\\\\n                                             },\\\\n                                           (Types.Alias\\\\n                                              { Types.args =\\\\n                                                [(Types.Type\\\\n                                                    Types.Adt {\\\\n                                                      def_id =\\\\n                                                      { Types.index =\\\\n                                                        (5, 7722);\\\\n                                                        krate = \\\\\\\"alloc\\\\\\\";\\\\n                                                        path =\\\\n                                                        [{ Types.data =\\\\n                                                           (Types.TypeNs\\\\n                                                              \\\\\\\"ffi\\\\\\\");\\\\n                                                           disambiguator = 0\\\\n                                                           };\\\\n                                                          { Types.data =\\\\n                                                            (Types.TypeNs\\\\n                                                               \\\\\\\"c_str\\\\\\\");\\\\n                                                            disambiguator = 0\\\\n                                                            };\\\\n                                                          { Types.data =\\\\n                                                            (Types.TypeNs\\\\n                                                               \\\\\\\"CString\\\\\\\");\\\\n                                                            disambiguator = 0\\\\n                                                            }\\\\n                                                          ]\\\\n                                                        };\\\\n                                                      generic_args = [];\\\\n                                                      trait_refs = []})\\\\n                                                  ];\\\\n                                                def_id =\\\\n                                                { Types.index = (2, 3454);\\\\n                                                  krate = \\\\\\\"core\\\\\\\";\\\\n                                                  path =\\\\n                                                  [{ Types.data =\\\\n                                                     (Types.TypeNs \\\\\\\"ops\\\\\\\");\\\\n                                                     disambiguator = 0 };\\\\n                                                    { Types.data =\\\\n                                                      (Types.TypeNs \\\\\\\"deref\\\\\\\");\\\\n                                                      disambiguator = 0 };\\\\n                                                    { Types.data =\\\\n                                                      (Types.TypeNs \\\\\\\"Deref\\\\\\\");\\\\n                                                      disambiguator = 0 };\\\\n                                                    { Types.data =\\\\n                                                      (Types.TypeNs \\\\\\\"Target\\\\\\\");\\\\n                                                      disambiguator = 0 }\\\\n                                                    ]\\\\n                                                  };\\\\n                                                kind =\\\\n                                                Types.Projection {\\\\n                                                  assoc_item =\\\\n                                                  { Types.container =\\\\n                                                    Types.TraitContainer;\\\\n                                                    def_id =\\\\n                                                    { Types.index = (2, 3454);\\\\n                                                      krate = \\\\\\\"core\\\\\\\";\\\\n                                                      path =\\\\n                                                      [{ Types.data =\\\\n                                                         (Types.TypeNs \\\\\\\"ops\\\\\\\");\\\\n                                                         disambiguator = 0 };\\\\n                                                        { Types.data =\\\\n                                                          (Types.TypeNs\\\\n                                                             \\\\\\\"deref\\\\\\\");\\\\n                                                          disambiguator = 0 };\\\\n                                                        { Types.data =\\\\n                                                          (Types.TypeNs\\\\n                                                             \\\\\\\"Deref\\\\\\\");\\\\n                                                          disambiguator = 0 };\\\\n                                                        { Types.data =\\\\n                                                          (Types.TypeNs\\\\n                                                             \\\\\\\"Target\\\\\\\");\\\\n                                                          disambiguator = 0 }\\\\n                                                        ]\\\\n                                                      };\\\\n                                                    fn_has_self_parameter =\\\\n                                                    false; kind = Types.Type;\\\\n                                                    name = \\\\\\\"Target\\\\\\\";\\\\n                                                    opt_rpitit_info = None;\\\\n                                                    trait_item_def_id = None\\\\n                                                    };\\\\n                                                  impl_expr =\\\\n                                                  { Types.args = [];\\\\n                                                    impl =\\\\n                                                    Types.Concrete {\\\\n                                                      generics = [];\\\\n                                                      id =\\\\n                                                      { Types.index =\\\\n                                                        (5, 4829);\\\\n                                                        krate = \\\\\\\"alloc\\\\\\\";\\\\n                                                        path =\\\\n                                                        [{ Types.data =\\\\n                                                           (Types.TypeNs\\\\n                                                              \\\\\\\"ffi\\\\\\\");\\\\n                                                           disambiguator = 0\\\\n                                                           };\\\\n                                                          { Types.data =\\\\n                                                            (Types.TypeNs\\\\n                                                               \\\\\\\"c_str\\\\\\\");\\\\n                                                            disambiguator = 0\\\\n                                                            };\\\\n                                                          { Types.data =\\\\n                                                            Types.Impl;\\\\n                                                            disambiguator = 3\\\\n                                                            }\\\\n                                                          ]\\\\n                                                        }};\\\\n                                                    trait =\\\\n                                                    { Types.def_id =\\\\n                                                      { Types.index =\\\\n                                                        (2, 3453);\\\\n                                                        krate = \\\\\\\"core\\\\\\\";\\\\n                                                        path =\\\\n                                                        [{ Types.data =\\\\n                                                           (Types.TypeNs\\\\n                                                              \\\\\\\"ops\\\\\\\");\\\\n                                                           disambiguator = 0\\\\n                                                           };\\\\n                                                          { Types.data =\\\\n                                                            (Types.TypeNs\\\\n                                                               \\\\\\\"deref\\\\\\\");\\\\n                                                            disambiguator = 0\\\\n                                                            };\\\\n                                                          { Types.data =\\\\n                                                            (Types.TypeNs\\\\n                                                               \\\\\\\"Deref\\\\\\\");\\\\n                                                            disambiguator = 0\\\\n                                                            }\\\\n                                                          ]\\\\n                                                        };\\\\n                                                      generic_args =\\\\n                                                      [(Types.Type\\\\n                                                          Types.Adt {\\\\n                                                            def_id =\\\\n                                                            { Types.index =\\\\n                                                              (5, 7722);\\\\n                                                              krate = \\\\\\\"alloc\\\\\\\";\\\\n                                                              path =\\\\n                                                              [{ Types.data =\\\\n                                                                 (Types.TypeNs\\\\n                                                                    \\\\\\\"ffi\\\\\\\");\\\\n                                                                 disambiguator =\\\\n                                                                 0 };\\\\n                                                                { Types.data =\\\\n                                                                  (Types.TypeNs\\\\n                                                                    \\\\\\\"c_str\\\\\\\");\\\\n                                                                  disambiguator =\\\\n                                                                  0 };\\\\n                                                                { Types.data =\\\\n                                                                  (Types.TypeNs\\\\n                                                                    \\\\\\\"CString\\\\\\\");\\\\n                                                                  disambiguator =\\\\n                                                                  0 }\\\\n                                                                ]\\\\n                                                              };\\\\n                                                            generic_args = [];\\\\n                                                            trait_refs = []})\\\\n                                                        ]\\\\n                                                      }\\\\n                                                    }}\\\\n                                                }),\\\\n                                           false));\\\\n                                       safety = Types.Safe }\\\\n                                     })};\\\\n                              hir_id = None;\\\\n                              span =\\\\n                              { Types.filename =\\\\n                                (Types.Real\\\\n                                   (Types.LocalPath\\\\n                                      \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                                hi = { Types.col = \\\\\\\"69\\\\\\\"; line = \\\\\\\"254\\\\\\\" };\\\\n                                lo = { Types.col = \\\\\\\"56\\\\\\\"; line = \\\\\\\"254\\\\\\\" } };\\\\n                              ty =\\\\n                              (Types.Ref\\\\n                                 ({ Types.kind = Types.ReErased },\\\\n                                  Types.Adt {\\\\n                                    def_id =\\\\n                                    { Types.index = (2, 34717);\\\\n                                      krate = \\\\\\\"core\\\\\\\";\\\\n                                      path =\\\\n                                      [{ Types.data = (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                         disambiguator = 0 };\\\\n                                        { Types.data = (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                                          disambiguator = 0 };\\\\n                                        { Types.data = (Types.TypeNs \\\\\\\"CStr\\\\\\\");\\\\n                                          disambiguator = 0 }\\\\n                                        ]\\\\n                                      };\\\\n                                    generic_args = []; trait_refs = []},\\\\n                                  false))\\\\n                              }};\\\\n                          hir_id = None;\\\\n                          span =\\\\n                          { Types.filename =\\\\n                            (Types.Real\\\\n                               (Types.LocalPath\\\\n                                  \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                            hi = { Types.col = \\\\\\\"60\\\\\\\"; line = \\\\\\\"254\\\\\\\" };\\\\n                            lo = { Types.col = \\\\\\\"56\\\\\\\"; line = \\\\\\\"254\\\\\\\" } };\\\\n                          ty =\\\\n                          Types.Adt {\\\\n                            def_id =\\\\n                            { Types.index = (2, 34717); krate = \\\\\\\"core\\\\\\\";\\\\n                              path =\\\\n                              [{ Types.data = (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                 disambiguator = 0 };\\\\n                                { Types.data = (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                                  disambiguator = 0 };\\\\n                                { Types.data = (Types.TypeNs \\\\\\\"CStr\\\\\\\");\\\\n                                  disambiguator = 0 }\\\\n                                ]\\\\n                              };\\\\n                            generic_args = []; trait_refs = []}\\\\n                          };\\\\n                        borrow_kind = Types.Shared};\\\\n                      hir_id = (Some (\\\\\\\"193\\\\\\\", \\\\\\\"53\\\\\\\"));\\\\n                      span =\\\\n                      { Types.filename =\\\\n                        (Types.Real\\\\n                           (Types.LocalPath\\\\n                              \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                        hi = { Types.col = \\\\\\\"60\\\\\\\"; line = \\\\\\\"254\\\\\\\" };\\\\n                        lo = { Types.col = \\\\\\\"56\\\\\\\"; line = \\\\\\\"254\\\\\\\" } };\\\\n                      ty =\\\\n                      (Types.Ref\\\\n                         ({ Types.kind = Types.ReErased },\\\\n                          Types.Adt {\\\\n                            def_id =\\\\n                            { Types.index = (2, 34717); krate = \\\\\\\"core\\\\\\\";\\\\n                              path =\\\\n                              [{ Types.data = (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                 disambiguator = 0 };\\\\n                                { Types.data = (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                                  disambiguator = 0 };\\\\n                                { Types.data = (Types.TypeNs \\\\\\\"CStr\\\\\\\");\\\\n                                  disambiguator = 0 }\\\\n                                ]\\\\n                              };\\\\n                            generic_args = []; trait_refs = []},\\\\n                          false))\\\\n                      }\\\\n                     ];\\\\n                   bounds_impls = [];\\\\n                   fn_span =\\\\n                   { Types.filename =\\\\n                     (Types.Real\\\\n                        (Types.LocalPath\\\\n                           \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                     hi = { Types.col = \\\\\\\"69\\\\\\\"; line = \\\\\\\"254\\\\\\\" };\\\\n                     lo = { Types.col = \\\\\\\"61\\\\\\\"; line = \\\\\\\"254\\\\\\\" } };\\\\n                   from_hir_call = true;\\\\n                   fun' =\\\\n                   { Types.attributes = [];\\\\n                     contents =\\\\n                     Types.GlobalName {\\\\n                       id =\\\\n                       { Types.index = (2, 5266); krate = \\\\\\\"core\\\\\\\";\\\\n                         path =\\\\n                         [{ Types.data = (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                            disambiguator = 0 };\\\\n                           { Types.data = (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                             disambiguator = 0 };\\\\n                           { Types.data = Types.Impl; disambiguator = 6 };\\\\n                           { Types.data = (Types.ValueNs \\\\\\\"as_ptr\\\\\\\");\\\\n                             disambiguator = 0 }\\\\n                           ]\\\\n                         }};\\\\n                     hir_id = None;\\\\n                     span =\\\\n                     { Types.filename =\\\\n                       (Types.Real\\\\n                          (Types.LocalPath\\\\n                             \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                       hi = { Types.col = \\\\\\\"67\\\\\\\"; line = \\\\\\\"254\\\\\\\" };\\\\n                       lo = { Types.col = \\\\\\\"61\\\\\\\"; line = \\\\\\\"254\\\\\\\" } };\\\\n                     ty =\\\\n                     (Types.Arrow\\\\n                        { Types.bound_vars =\\\\n                          [(Types.Region\\\\n                              (Types.BrNamed\\\\n                                 ({ Types.index = (2, 56097); krate = \\\\\\\"core\\\\\\\";\\\\n                                    path =\\\\n                                    [{ Types.data = (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                       disambiguator = 0 };\\\\n                                      { Types.data = (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                                        disambiguator = 0 };\\\\n                                      { Types.data = Types.Impl;\\\\n                                        disambiguator = 6 };\\\\n                                      { Types.data = (Types.ValueNs \\\\\\\"as_ptr\\\\\\\");\\\\n                                        disambiguator = 0 };\\\\n                                      { Types.data = (Types.LifetimeNs \\\\\\\"'_\\\\\\\");\\\\n                                        disambiguator = 0 }\\\\n                                      ]\\\\n                                    },\\\\n                                  \\\\\\\"'_\\\\\\\")))\\\\n                            ];\\\\n                          value =\\\\n                          { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                            c_variadic = false;\\\\n                            inputs =\\\\n                            [(Types.Ref\\\\n                                ({ Types.kind =\\\\n                                   (Types.ReBound\\\\n                                      (\\\\\\\"0\\\\\\\",\\\\n                                       { Types.kind =\\\\n                                         (Types.BrNamed\\\\n                                            ({ Types.index = (2, 56097);\\\\n                                               krate = \\\\\\\"core\\\\\\\";\\\\n                                               path =\\\\n                                               [{ Types.data =\\\\n                                                  (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                                  disambiguator = 0 };\\\\n                                                 { Types.data =\\\\n                                                   (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                                                   disambiguator = 0 };\\\\n                                                 { Types.data = Types.Impl;\\\\n                                                   disambiguator = 6 };\\\\n                                                 { Types.data =\\\\n                                                   (Types.ValueNs \\\\\\\"as_ptr\\\\\\\");\\\\n                                                   disambiguator = 0 };\\\\n                                                 { Types.data =\\\\n                                                   (Types.LifetimeNs \\\\\\\"'_\\\\\\\");\\\\n                                                   disambiguator = 0 }\\\\n                                                 ]\\\\n                                               },\\\\n                                             \\\\\\\"'_\\\\\\\"));\\\\n                                         var = \\\\\\\"0\\\\\\\" }))\\\\n                                   },\\\\n                                 Types.Adt {\\\\n                                   def_id =\\\\n                                   { Types.index = (2, 34717);\\\\n                                     krate = \\\\\\\"core\\\\\\\";\\\\n                                     path =\\\\n                                     [{ Types.data = (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                        disambiguator = 0 };\\\\n                                       { Types.data = (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                                         disambiguator = 0 };\\\\n                                       { Types.data = (Types.TypeNs \\\\\\\"CStr\\\\\\\");\\\\n                                         disambiguator = 0 }\\\\n                                       ]\\\\n                                     };\\\\n                                   generic_args = []; trait_refs = []},\\\\n                                 false))\\\\n                              ];\\\\n                            output =\\\\n                            (Types.RawPtr ((Types.Int Types.I8), false));\\\\n                            safety = Types.Safe }\\\\n                          })\\\\n                     };\\\\n                   generic_args = []; trait = None;\\\\n                   ty =\\\\n                   (Types.Arrow\\\\n                      { Types.bound_vars =\\\\n                        [(Types.Region\\\\n                            (Types.BrNamed\\\\n                               ({ Types.index = (2, 56097); krate = \\\\\\\"core\\\\\\\";\\\\n                                  path =\\\\n                                  [{ Types.data = (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                     disambiguator = 0 };\\\\n                                    { Types.data = (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                                      disambiguator = 0 };\\\\n                                    { Types.data = Types.Impl;\\\\n                                      disambiguator = 6 };\\\\n                                    { Types.data = (Types.ValueNs \\\\\\\"as_ptr\\\\\\\");\\\\n                                      disambiguator = 0 };\\\\n                                    { Types.data = (Types.LifetimeNs \\\\\\\"'_\\\\\\\");\\\\n                                      disambiguator = 0 }\\\\n                                    ]\\\\n                                  },\\\\n                                \\\\\\\"'_\\\\\\\")))\\\\n                          ];\\\\n                        value =\\\\n                        { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                          c_variadic = false;\\\\n                          inputs =\\\\n                          [(Types.Ref\\\\n                              ({ Types.kind =\\\\n                                 (Types.ReBound\\\\n                                    (\\\\\\\"0\\\\\\\",\\\\n                                     { Types.kind =\\\\n                                       (Types.BrNamed\\\\n                                          ({ Types.index = (2, 56097);\\\\n                                             krate = \\\\\\\"core\\\\\\\";\\\\n                                             path =\\\\n                                             [{ Types.data =\\\\n                                                (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                                disambiguator = 0 };\\\\n                                               { Types.data =\\\\n                                                 (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                                                 disambiguator = 0 };\\\\n                                               { Types.data = Types.Impl;\\\\n                                                 disambiguator = 6 };\\\\n                                               { Types.data =\\\\n                                                 (Types.ValueNs \\\\\\\"as_ptr\\\\\\\");\\\\n                                                 disambiguator = 0 };\\\\n                                               { Types.data =\\\\n                                                 (Types.LifetimeNs \\\\\\\"'_\\\\\\\");\\\\n                                                 disambiguator = 0 }\\\\n                                               ]\\\\n                                             },\\\\n                                           \\\\\\\"'_\\\\\\\"));\\\\n                                       var = \\\\\\\"0\\\\\\\" }))\\\\n                                 },\\\\n                               Types.Adt {\\\\n                                 def_id =\\\\n                                 { Types.index = (2, 34717); krate = \\\\\\\"core\\\\\\\";\\\\n                                   path =\\\\n                                   [{ Types.data = (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                      disambiguator = 0 };\\\\n                                     { Types.data = (Types.TypeNs \\\\\\\"c_str\\\\\\\");\\\\n                                       disambiguator = 0 };\\\\n                                     { Types.data = (Types.TypeNs \\\\\\\"CStr\\\\\\\");\\\\n                                       disambiguator = 0 }\\\\n                                     ]\\\\n                                   };\\\\n                                 generic_args = []; trait_refs = []},\\\\n                               false))\\\\n                            ];\\\\n                          output =\\\\n                          (Types.RawPtr ((Types.Int Types.I8), false));\\\\n                          safety = Types.Safe }\\\\n                        })};\\\\n                 hir_id = (Some (\\\\\\\"193\\\\\\\", \\\\\\\"51\\\\\\\"));\\\\n                 span =\\\\n                 { Types.filename =\\\\n                   (Types.Real\\\\n                      (Types.LocalPath\\\\n                         \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                   hi = { Types.col = \\\\\\\"69\\\\\\\"; line = \\\\\\\"254\\\\\\\" };\\\\n                   lo = { Types.col = \\\\\\\"56\\\\\\\"; line = \\\\\\\"254\\\\\\\" } };\\\\n                 ty = (Types.RawPtr ((Types.Int Types.I8), false)) }\\\\n                ];\\\\n              bounds_impls = [];\\\\n              fn_span =\\\\n              { Types.filename =\\\\n                (Types.Real\\\\n                   (Types.LocalPath\\\\n                      \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                hi = { Types.col = \\\\\\\"70\\\\\\\"; line = \\\\\\\"254\\\\\\\" };\\\\n                lo = { Types.col = \\\\\\\"26\\\\\\\"; line = \\\\\\\"254\\\\\\\" } };\\\\n              from_hir_call = true;\\\\n              fun' =\\\\n              { Types.attributes = [];\\\\n                contents =\\\\n                Types.GlobalName {\\\\n                  id =\\\\n                  { Types.index = (27, 18176); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                    path =\\\\n                    [{ Types.data = Types.ForeignMod; disambiguator = 3188 };\\\\n                      { Types.data = (Types.ValueNs \\\\\\\"OPENSSL_cipher_name\\\\\\\");\\\\n                        disambiguator = 0 }\\\\n                      ]\\\\n                    }};\\\\n                hir_id = None;\\\\n                span =\\\\n                { Types.filename =\\\\n                  (Types.Real\\\\n                     (Types.LocalPath\\\\n                        \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                  hi = { Types.col = \\\\\\\"55\\\\\\\"; line = \\\\\\\"254\\\\\\\" };\\\\n                  lo = { Types.col = \\\\\\\"26\\\\\\\"; line = \\\\\\\"254\\\\\\\" } };\\\\n                ty =\\\\n                (Types.Arrow\\\\n                   { Types.bound_vars = [];\\\\n                     value =\\\\n                     { Types.abi = Types.Abi {todo = \\\\\\\"C { unwind: false }\\\\\\\"};\\\\n                       c_variadic = false;\\\\n                       inputs =\\\\n                       [(Types.RawPtr ((Types.Int Types.I8), false))];\\\\n                       output = (Types.RawPtr ((Types.Int Types.I8), false));\\\\n                       safety = Types.Unsafe }\\\\n                     })\\\\n                };\\\\n              generic_args = []; trait = None;\\\\n              ty =\\\\n              (Types.Arrow\\\\n                 { Types.bound_vars = [];\\\\n                   value =\\\\n                   { Types.abi = Types.Abi {todo = \\\\\\\"C { unwind: false }\\\\\\\"};\\\\n                     c_variadic = false;\\\\n                     inputs = [(Types.RawPtr ((Types.Int Types.I8), false))];\\\\n                     output = (Types.RawPtr ((Types.Int Types.I8), false));\\\\n                     safety = Types.Unsafe }\\\\n                   })};\\\\n            hir_id = (Some (\\\\\\\"193\\\\\\\", \\\\\\\"47\\\\\\\"));\\\\n            span =\\\\n            { Types.filename =\\\\n              (Types.Real\\\\n                 (Types.LocalPath\\\\n                    \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n              hi = { Types.col = \\\\\\\"70\\\\\\\"; line = \\\\\\\"254\\\\\\\" };\\\\n              lo = { Types.col = \\\\\\\"26\\\\\\\"; line = \\\\\\\"254\\\\\\\" } };\\\\n            ty = (Types.RawPtr ((Types.Int Types.I8), false)) });\\\\n    region_scope = { Types.data = Types.Node; id = \\\\\\\"55\\\\\\\" };\\\\n    safety_mode = Types.ExplicitUnsafe;\\\\n    span =\\\\n    { Types.filename =\\\\n      (Types.Real\\\\n         (Types.LocalPath \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n      hi = { Types.col = \\\\\\\"72\\\\\\\"; line = \\\\\\\"254\\\\\\\" };\\\\n      lo = { Types.col = \\\\\\\"17\\\\\\\"; line = \\\\\\\"254\\\\\\\" } };\\\\n    stmts = []; targeted_by_break = false};\\\\n  hir_id = (Some (\\\\\\\"193\\\\\\\", \\\\\\\"46\\\\\\\"));\\\\n  span =\\\\n  { Types.filename =\\\\n    (Types.Real\\\\n       (Types.LocalPath \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n    hi = { Types.col = \\\\\\\"72\\\\\\\"; line = \\\\\\\"254\\\\\\\" };\\\\n    lo = { Types.col = \\\\\\\"17\\\\\\\"; line = \\\\\\\"254\\\\\\\" } };\\\\n  ty = (Types.RawPtr ((Types.Int Types.I8), false)) }\\\",\\n        ),\\n    )\"))"

        <:
        Core.Option.t_Option (Core.Ptr.Non_null.t_NonNull i8))
      (fun nn ->
          let nn:Core.Ptr.Non_null.t_NonNull i8 = nn in
          Core.Result.impl__ok #string
            #Core.Str.Error.t_Utf8Error
            (Core.Ffi.C_str.impl__CStr__to_str (Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
                    "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.PointerCoercion {cast = Types.MutToConstPointer;\n                   source =\n                   { Types.attributes = [];\n                     contents =\n                     Types.Call {\n                       args =\n                       [{ Types.attributes = [];\n                          contents =\n                          Types.VarRef {\n                            id =\n                            { Types.id =\n                              { Types.local_id = \"58\";\n                                owner =\n                                { Types.index = (0, 193); krate = \"sandwich\";\n                                  path =\n                                  [{ Types.data =\n                                     (Types.TypeNs \"implementation\");\n                                     disambiguator = 0 };\n                                    { Types.data =\n                                      (Types.TypeNs \"openssl3_impl\");\n                                      disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"support\");\n                                      disambiguator = 0 };\n                                    { Types.data =\n                                      (Types.ValueNs \"cipher_name\");\n                                      disambiguator = 0 }\n                                    ]\n                                  }\n                                };\n                              name = \"nn\" }};\n                          hir_id = (Some (\"193\", \"71\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3_impl/support.rs\"));\n                            hi = { Types.col = \"49\"; line = \"255\" };\n                            lo = { Types.col = \"47\"; line = \"255\" } };\n                          ty =\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (2, 2222); krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"ptr\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"non_null\");\n                                  disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"NonNull\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Type (Types.Int Types.I8))];\n                            trait_refs = []}\n                          }\n                         ];\n                       bounds_impls = [];\n                       fn_span =\n                       { Types.filename =\n                         (Types.Real\n                            (Types.LocalPath\n                               \"rust/implementation/openssl3_impl/support.rs\"));\n                         hi = { Types.col = \"58\"; line = \"255\" };\n                         lo = { Types.col = \"50\"; line = \"255\" } };\n                       from_hir_call = true;\n                       fun' =\n                       { Types.attributes = [];\n                         contents =\n                         Types.GlobalName {\n                           id =\n                           { Types.index = (2, 2245); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"ptr\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"non_null\");\n                                 disambiguator = 0 };\n                               { Types.data = Types.Impl; disambiguator = 3 };\n                               { Types.data = (Types.ValueNs \"as_ptr\");\n                                 disambiguator = 0 }\n                               ]\n                             }};\n                         hir_id = None;\n                         span =\n                         { Types.filename =\n                           (Types.Real\n                              (Types.LocalPath\n                                 \"rust/implementation/openssl3_impl/support.rs\"));\n                           hi = { Types.col = \"56\"; line = \"255\" };\n                           lo = { Types.col = \"50\"; line = \"255\" } };\n                         ty =\n                         (Types.Arrow\n                            { Types.bound_vars = [];\n                              value =\n                              { Types.abi = Types.Abi {todo = \"Rust\"};\n                                c_variadic = false;\n                                inputs =\n                                [Types.Adt {\n                                   def_id =\n                                   { Types.index = (2, 2222); krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"ptr\");\n                                        disambiguator = 0 };\n                                       { Types.data =\n                                         (Types.TypeNs \"non_null\");\n                                         disambiguator = 0 };\n                                       { Types.data =\n                                         (Types.TypeNs \"NonNull\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args =\n                                   [(Types.Type (Types.Int Types.I8))];\n                                   trait_refs = []}\n                                  ];\n                                output =\n                                (Types.RawPtr ((Types.Int Types.I8), true));\n                                safety = Types.Safe }\n                              })\n                         };\n                       generic_args = [(Types.Type (Types.Int Types.I8))];\n                       trait = None;\n                       ty =\n                       (Types.Arrow\n                          { Types.bound_vars = [];\n                            value =\n                            { Types.abi = Types.Abi {todo = \"Rust\"};\n                              c_variadic = false;\n                              inputs =\n                              [Types.Adt {\n                                 def_id =\n                                 { Types.index = (2, 2222); krate = \"core\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"ptr\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"non_null\");\n                                       disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"NonNull\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args =\n                                 [(Types.Type (Types.Int Types.I8))];\n                                 trait_refs = []}\n                                ];\n                              output =\n                              (Types.RawPtr ((Types.Int Types.I8), true));\n                              safety = Types.Safe }\n                            })};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3_impl/support.rs\"));\n                       hi = { Types.col = \"58\"; line = \"255\" };\n                       lo = { Types.col = \"47\"; line = \"255\" } };\n                     ty = (Types.RawPtr ((Types.Int Types.I8), true)) }};\n                 hir_id = (Some (\"193\", \"69\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      (Types.LocalPath\n                         \"rust/implementation/openssl3_impl/support.rs\"));\n                   hi = { Types.col = \"58\"; line = \"255\" };\n                   lo = { Types.col = \"47\"; line = \"255\" } };\n                 ty = (Types.RawPtr ((Types.Int Types.I8), false)) }\n                ];\n              bounds_impls = [];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath\n                      \"rust/implementation/openssl3_impl/support.rs\"));\n                hi = { Types.col = \"59\"; line = \"255\" };\n                lo = { Types.col = \"32\"; line = \"255\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (2, 5259); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"ffi\"); disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"c_str\");\n                        disambiguator = 0 };\n                      { Types.data = Types.Impl; disambiguator = 6 };\n                      { Types.data = (Types.ValueNs \"from_ptr\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath\n                        \"rust/implementation/openssl3_impl/support.rs\"));\n                  hi = { Types.col = \"46\"; line = \"255\" };\n                  lo = { Types.col = \"32\"; line = \"255\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"Rust\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr ((Types.Int Types.I8), false))];\n                       output =\n                       (Types.Ref\n                          ({ Types.kind = Types.ReErased },\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (2, 34717); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ffi\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"c_str\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"CStr\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []},\n                           false));\n                       safety = Types.Unsafe }\n                     })\n                };\n              generic_args =\n              [(Types.Lifetime { Types.kind = Types.ReErased })];\n              trait = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false;\n                     inputs = [(Types.RawPtr ((Types.Int Types.I8), false))];\n                     output =\n                     (Types.Ref\n                        ({ Types.kind = Types.ReErased },\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (2, 34717); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"ffi\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"c_str\");\n                                 disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"CStr\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []; trait_refs = []},\n                         false));\n                     safety = Types.Unsafe }\n                   })};\n            hir_id = (Some (\"193\", \"64\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 (Types.LocalPath\n                    \"rust/implementation/openssl3_impl/support.rs\"));\n              hi = { Types.col = \"59\"; line = \"255\" };\n              lo = { Types.col = \"32\"; line = \"255\" } };\n            ty =\n            (Types.Ref\n               ({ Types.kind = Types.ReErased },\n                Types.Adt {\n                  def_id =\n                  { Types.index = (2, 34717); krate = \"core\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"ffi\"); disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"c_str\");\n                        disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"CStr\"); disambiguator = 0\n                        }\n                      ]\n                    };\n                  generic_args = []; trait_refs = []},\n                false))\n            });\n    region_scope = { Types.data = Types.Node; id = \"73\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         (Types.LocalPath \"rust/implementation/openssl3_impl/support.rs\"));\n      hi = { Types.col = \"61\"; line = \"255\" };\n      lo = { Types.col = \"23\"; line = \"255\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = None;\n  span =\n  { Types.filename =\n    (Types.Real\n       (Types.LocalPath \"rust/implementation/openssl3_impl/support.rs\"));\n    hi = { Types.col = \"59\"; line = \"255\" };\n    lo = { Types.col = \"32\"; line = \"255\" } };\n  ty =\n  (Types.Ref\n     ({ Types.kind = Types.ReErased },\n      Types.Adt {\n        def_id =\n        { Types.index = (2, 34717); krate = \"core\";\n          path =\n          [{ Types.data = (Types.TypeNs \"ffi\"); disambiguator = 0 };\n            { Types.data = (Types.TypeNs \"c_str\"); disambiguator = 0 };\n            { Types.data = (Types.TypeNs \"CStr\"); disambiguator = 0 }]\n          };\n        generic_args = []; trait_refs = []},\n      false))\n  }"

                  <:
                  Core.Ffi.C_str.t_CStr)
              <:
              Core.Result.t_Result string Core.Str.Error.t_Utf8Error)
          <:
          Core.Option.t_Option string)
  | Core.Option.Option_None  -> Core.Option.Option_None <: Core.Option.t_Option string

let err_get_lib (err: u64) =
  cast ((err >>! Openssl3.v_ERR_LIB_OFFSET <: u64) &. (cast (Openssl3.v_ERR_LIB_MASK <: u32) <: u64)
      <:
      u64)
  <:
  i32

let err_get_reason (err: u64) =
  cast (err &. (cast (Openssl3.v_ERR_REASON_MASK <: u32) <: u64) <: u64) <: i32

let is_BIO_eof (bio: Core.Ptr.Non_null.t_NonNull Openssl3.t_bio_st) =
  (Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
      "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.VarRef {\n                        id =\n                        { Types.id =\n                          { Types.local_id = \"2\";\n                            owner =\n                            { Types.index = (0, 192); krate = \"sandwich\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"implementation\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"openssl3_impl\");\n                                  disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"support\");\n                                  disambiguator = 0 };\n                                { Types.data = (Types.ValueNs \"is_BIO_eof\");\n                                  disambiguator = 0 }\n                                ]\n                              }\n                            };\n                          name = \"bio\" }};\n                      hir_id = (Some (\"192\", \"11\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/support.rs\"));\n                        hi = { Types.col = \"15\"; line = \"243\" };\n                        lo = { Types.col = \"12\"; line = \"243\" } };\n                      ty =\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (2, 2222); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ptr\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"non_null\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"NonNull\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (27, 20890);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"bio_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []})\n                          ];\n                        trait_refs = []}\n                      }\n                     ];\n                   bounds_impls = [];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real\n                        (Types.LocalPath\n                           \"rust/implementation/openssl3_impl/support.rs\"));\n                     hi = { Types.col = \"24\"; line = \"243\" };\n                     lo = { Types.col = \"16\"; line = \"243\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (2, 2245); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"ptr\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"non_null\");\n                             disambiguator = 0 };\n                           { Types.data = Types.Impl; disambiguator = 3 };\n                           { Types.data = (Types.ValueNs \"as_ptr\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3_impl/support.rs\"));\n                       hi = { Types.col = \"22\"; line = \"243\" };\n                       lo = { Types.col = \"16\"; line = \"243\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs =\n                            [Types.Adt {\n                               def_id =\n                               { Types.index = (2, 2222); krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"ptr\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"non_null\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"NonNull\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (27, 20890);\n                                       krate = \"openssl3\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"bio_st\");\n                                          disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []})\n                                 ];\n                               trait_refs = []}\n                              ];\n                            output =\n                            (Types.RawPtr\n                               (Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 20890);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"bio_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                true));\n                            safety = Types.Safe }\n                          })\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (27, 20890); krate = \"openssl3\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"bio_st\");\n                              disambiguator = 0 }\n                             ]\n                           };\n                         generic_args = []; trait_refs = []})\n                     ];\n                   trait = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [Types.Adt {\n                             def_id =\n                             { Types.index = (2, 2222); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ptr\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"non_null\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"NonNull\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Type\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.index = (27, 20890);\n                                     krate = \"openssl3\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"bio_st\");\n                                        disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []; trait_refs = []})\n                               ];\n                             trait_refs = []}\n                            ];\n                          output =\n                          (Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 20890);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"bio_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true));\n                          safety = Types.Safe }\n                        })};\n                 hir_id = (Some (\"192\", \"9\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      (Types.LocalPath\n                         \"rust/implementation/openssl3_impl/support.rs\"));\n                   hi = { Types.col = \"24\"; line = \"243\" };\n                   lo = { Types.col = \"12\"; line = \"243\" } };\n                 ty =\n                 (Types.RawPtr\n                    (Types.Adt {\n                       def_id =\n                       { Types.index = (27, 20890); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"bio_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []},\n                     true))\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.Cast {\n                    source =\n                    { Types.attributes = [];\n                      contents =\n                      Types.NamedConst {args = [];\n                        def_id =\n                        { Types.index = (27, 1346); krate = \"openssl3\";\n                          path =\n                          [{ Types.data = (Types.ValueNs \"BIO_CTRL_EOF\");\n                             disambiguator = 0 }\n                            ]\n                          };\n                        impl = None; user_ty = None};\n                      hir_id = (Some (\"192\", \"14\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/support.rs\"));\n                        hi = { Types.col = \"34\"; line = \"244\" };\n                        lo = { Types.col = \"12\"; line = \"244\" } };\n                      ty = (Types.Uint Types.U32) }};\n                  hir_id = (Some (\"192\", \"13\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath\n                          \"rust/implementation/openssl3_impl/support.rs\"));\n                    hi = { Types.col = \"43\"; line = \"244\" };\n                    lo = { Types.col = \"12\"; line = \"244\" } };\n                  ty = (Types.Int Types.I32) };\n                { Types.attributes = [];\n                  contents =\n                  Types.Literal {\n                    lit =\n                    { Types.node = (Types.Int (\"0\", Types.Unsuffixed));\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/support.rs\"));\n                        hi = { Types.col = \"13\"; line = \"245\" };\n                        lo = { Types.col = \"12\"; line = \"245\" } }\n                      };\n                    neg = false};\n                  hir_id = (Some (\"192\", \"19\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath\n                          \"rust/implementation/openssl3_impl/support.rs\"));\n                    hi = { Types.col = \"13\"; line = \"245\" };\n                    lo = { Types.col = \"12\"; line = \"245\" } };\n                  ty = (Types.Int Types.I64) };\n                { Types.attributes = [];\n                  contents =\n                  Types.Call {args = [];\n                    bounds_impls =\n                    [{ Types.args = [];\n                       impl =\n                       Types.Builtin {\n                         trait =\n                         { Types.def_id =\n                           { Types.index = (2, 2148); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"ptr\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"metadata\");\n                                 disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Thin\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Type\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (2, 5307); krate = \"core\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"ffi\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"c_void\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []; trait_refs = []})\n                             ]\n                           }};\n                       trait =\n                       { Types.def_id =\n                         { Types.index = (2, 2148); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"ptr\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"metadata\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Thin\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (2, 5307); krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"ffi\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"c_void\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args = []; trait_refs = []})\n                           ]\n                         }\n                       }\n                      ];\n                    fn_span =\n                    { Types.filename =\n                      (Types.Real\n                         (Types.LocalPath\n                            \"rust/implementation/openssl3_impl/support.rs\"));\n                      hi = { Types.col = \"27\"; line = \"246\" };\n                      lo = { Types.col = \"12\"; line = \"246\" } };\n                    from_hir_call = true;\n                    fun' =\n                    { Types.attributes = [];\n                      contents =\n                      Types.GlobalName {\n                        id =\n                        { Types.index = (2, 2600); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ptr\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.ValueNs \"null_mut\");\n                              disambiguator = 0 }\n                            ]\n                          }};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/support.rs\"));\n                        hi = { Types.col = \"25\"; line = \"246\" };\n                        lo = { Types.col = \"12\"; line = \"246\" } };\n                      ty =\n                      (Types.Arrow\n                         { Types.bound_vars = [];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false; inputs = [];\n                             output =\n                             (Types.RawPtr\n                                (Types.Adt {\n                                   def_id =\n                                   { Types.index = (2, 5307); krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"ffi\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"c_void\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []; trait_refs = []},\n                                 true));\n                             safety = Types.Safe }\n                           })\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (2, 5307); krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"ffi\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"c_void\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args = []; trait_refs = []})\n                      ];\n                    trait = None;\n                    ty =\n                    (Types.Arrow\n                       { Types.bound_vars = [];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false; inputs = [];\n                           output =\n                           (Types.RawPtr\n                              (Types.Adt {\n                                 def_id =\n                                 { Types.index = (2, 5307); krate = \"core\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"ffi\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"c_void\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []; trait_refs = []},\n                               true));\n                           safety = Types.Safe }\n                         })};\n                  hir_id = (Some (\"192\", \"20\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath\n                          \"rust/implementation/openssl3_impl/support.rs\"));\n                    hi = { Types.col = \"27\"; line = \"246\" };\n                    lo = { Types.col = \"12\"; line = \"246\" } };\n                  ty =\n                  (Types.RawPtr\n                     (Types.Adt {\n                        def_id =\n                        { Types.index = (2, 5307); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ffi\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"c_void\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args = []; trait_refs = []},\n                      true))\n                  }\n                ];\n              bounds_impls = [];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath\n                      \"rust/implementation/openssl3_impl/support.rs\"));\n                hi = { Types.col = \"9\"; line = \"247\" };\n                lo = { Types.col = \"8\"; line = \"242\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (27, 12372); krate = \"openssl3\";\n                    path =\n                    [{ Types.data = Types.ForeignMod; disambiguator = 550 };\n                      { Types.data = (Types.ValueNs \"BIO_ctrl\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath\n                        \"rust/implementation/openssl3_impl/support.rs\"));\n                  hi = { Types.col = \"26\"; line = \"242\" };\n                  lo = { Types.col = \"8\"; line = \"242\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           (Types.Adt {\n                              def_id =\n                              { Types.index = (27, 20890);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"bio_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []},\n                            true));\n                         (Types.Int Types.I32); (Types.Int Types.I64);\n                         (Types.RawPtr\n                            (Types.Adt {\n                               def_id =\n                               { Types.index = (2, 5307); krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"ffi\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"c_void\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args = []; trait_refs = []},\n                             true))\n                         ];\n                       output = (Types.Int Types.I64); safety = Types.Unsafe\n                       }\n                     })\n                };\n              generic_args = []; trait = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         (Types.Adt {\n                            def_id =\n                            { Types.index = (27, 20890); krate = \"openssl3\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"bio_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []},\n                          true));\n                       (Types.Int Types.I32); (Types.Int Types.I64);\n                       (Types.RawPtr\n                          (Types.Adt {\n                             def_id =\n                             { Types.index = (2, 5307); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ffi\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"c_void\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []},\n                           true))\n                       ];\n                     output = (Types.Int Types.I64); safety = Types.Unsafe }\n                   })};\n            hir_id = (Some (\"192\", \"5\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 (Types.LocalPath\n                    \"rust/implementation/openssl3_impl/support.rs\"));\n              hi = { Types.col = \"9\"; line = \"247\" };\n              lo = { Types.col = \"8\"; line = \"242\" } };\n            ty = (Types.Int Types.I64) });\n    region_scope = { Types.data = Types.Node; id = \"24\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         (Types.LocalPath \"rust/implementation/openssl3_impl/support.rs\"));\n      hi = { Types.col = \"5\"; line = \"248\" };\n      lo = { Types.col = \"5\"; line = \"241\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"192\", \"4\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       (Types.LocalPath \"rust/implementation/openssl3_impl/support.rs\"));\n    hi = { Types.col = \"6\"; line = \"248\" };\n    lo = { Types.col = \"4\"; line = \"241\" } };\n  ty = (Types.Int Types.I64) }"

    <:
    i64) =.
  1L

let peek_last_error (_: Prims.unit) =
  Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
    "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {args = []; bounds_impls = [];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath\n                      \"rust/implementation/openssl3_impl/support.rs\"));\n                hi = { Types.col = \"44\"; line = \"22\" };\n                lo = { Types.col = \"13\"; line = \"22\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (27, 12593); krate = \"openssl3\";\n                    path =\n                    [{ Types.data = Types.ForeignMod; disambiguator = 652 };\n                      { Types.data = (Types.ValueNs \"ERR_peek_last_error\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath\n                        \"rust/implementation/openssl3_impl/support.rs\"));\n                  hi = { Types.col = \"42\"; line = \"22\" };\n                  lo = { Types.col = \"13\"; line = \"22\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                       c_variadic = false; inputs = [];\n                       output = (Types.Uint Types.U64); safety = Types.Unsafe\n                       }\n                     })\n                };\n              generic_args = []; trait = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                     c_variadic = false; inputs = [];\n                     output = (Types.Uint Types.U64); safety = Types.Unsafe }\n                   })};\n            hir_id = (Some (\"165\", \"2\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 (Types.LocalPath\n                    \"rust/implementation/openssl3_impl/support.rs\"));\n              hi = { Types.col = \"44\"; line = \"22\" };\n              lo = { Types.col = \"13\"; line = \"22\" } };\n            ty = (Types.Uint Types.U64) });\n    region_scope = { Types.data = Types.Node; id = \"6\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         (Types.LocalPath \"rust/implementation/openssl3_impl/support.rs\"));\n      hi = { Types.col = \"46\"; line = \"22\" };\n      lo = { Types.col = \"4\"; line = \"22\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"165\", \"1\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       (Types.LocalPath \"rust/implementation/openssl3_impl/support.rs\"));\n    hi = { Types.col = \"46\"; line = \"22\" };\n    lo = { Types.col = \"4\"; line = \"22\" } };\n  ty = (Types.Uint Types.U64) }"

let errstr (_: Prims.unit) =
  Rust_primitives.Hax.Control_flow_monad.Mexception.run (match
        Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
          "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.Call {args = []; bounds_impls = [];\n                        fn_span =\n                        { Types.filename =\n                          (Types.Real\n                             (Types.LocalPath\n                                \"rust/implementation/openssl3_impl/support.rs\"));\n                          hi = { Types.col = \"58\"; line = \"48\" };\n                          lo = { Types.col = \"37\"; line = \"48\" } };\n                        from_hir_call = true;\n                        fun' =\n                        { Types.attributes = [];\n                          contents =\n                          Types.GlobalName {\n                            id =\n                            { Types.index = (27, 12408); krate = \"openssl3\";\n                              path =\n                              [{ Types.data = Types.ForeignMod;\n                                 disambiguator = 568 };\n                                { Types.data = (Types.ValueNs \"BIO_s_mem\");\n                                  disambiguator = 0 }\n                                ]\n                              }};\n                          hir_id = None;\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3_impl/support.rs\"));\n                            hi = { Types.col = \"56\"; line = \"48\" };\n                            lo = { Types.col = \"37\"; line = \"48\" } };\n                          ty =\n                          (Types.Arrow\n                             { Types.bound_vars = [];\n                               value =\n                               { Types.abi =\n                                 Types.Abi {todo = \"C { unwind: false }\"};\n                                 c_variadic = false; inputs = [];\n                                 output =\n                                 (Types.RawPtr\n                                    (Types.Adt {\n                                       def_id =\n                                       { Types.index = (27, 23380);\n                                         krate = \"openssl3\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"bio_method_st\");\n                                            disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []; trait_refs = []},\n                                     false));\n                                 safety = Types.Unsafe }\n                               })\n                          };\n                        generic_args = []; trait = None;\n                        ty =\n                        (Types.Arrow\n                           { Types.bound_vars = [];\n                             value =\n                             { Types.abi =\n                               Types.Abi {todo = \"C { unwind: false }\"};\n                               c_variadic = false; inputs = [];\n                               output =\n                               (Types.RawPtr\n                                  (Types.Adt {\n                                     def_id =\n                                     { Types.index = (27, 23380);\n                                       krate = \"openssl3\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"bio_method_st\");\n                                          disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []},\n                                   false));\n                               safety = Types.Unsafe }\n                             })};\n                      hir_id = (Some (\"168\", \"14\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/support.rs\"));\n                        hi = { Types.col = \"58\"; line = \"48\" };\n                        lo = { Types.col = \"37\"; line = \"48\" } };\n                      ty =\n                      (Types.RawPtr\n                         (Types.Adt {\n                            def_id =\n                            { Types.index = (27, 23380); krate = \"openssl3\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"bio_method_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []},\n                          false))\n                      }\n                     ];\n                   bounds_impls = [];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real\n                        (Types.LocalPath\n                           \"rust/implementation/openssl3_impl/support.rs\"));\n                     hi = { Types.col = \"59\"; line = \"48\" };\n                     lo = { Types.col = \"19\"; line = \"48\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (27, 12328); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = Types.ForeignMod;\n                            disambiguator = 528 };\n                           { Types.data = (Types.ValueNs \"BIO_new\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3_impl/support.rs\"));\n                       hi = { Types.col = \"36\"; line = \"48\" };\n                       lo = { Types.col = \"19\"; line = \"48\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi =\n                            Types.Abi {todo = \"C { unwind: false }\"};\n                            c_variadic = false;\n                            inputs =\n                            [(Types.RawPtr\n                                (Types.Adt {\n                                   def_id =\n                                   { Types.index = (27, 23380);\n                                     krate = \"openssl3\";\n                                     path =\n                                     [{ Types.data =\n                                        (Types.TypeNs \"bio_method_st\");\n                                        disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []; trait_refs = []},\n                                 false))\n                              ];\n                            output =\n                            (Types.RawPtr\n                               (Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 20890);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"bio_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                true));\n                            safety = Types.Unsafe }\n                          })\n                     };\n                   generic_args = []; trait = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi =\n                          Types.Abi {todo = \"C { unwind: false }\"};\n                          c_variadic = false;\n                          inputs =\n                          [(Types.RawPtr\n                              (Types.Adt {\n                                 def_id =\n                                 { Types.index = (27, 23380);\n                                   krate = \"openssl3\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"bio_method_st\");\n                                      disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []; trait_refs = []},\n                               false))\n                            ];\n                          output =\n                          (Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 20890);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"bio_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true));\n                          safety = Types.Unsafe }\n                        })};\n                 hir_id = (Some (\"168\", \"10\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      (Types.LocalPath\n                         \"rust/implementation/openssl3_impl/support.rs\"));\n                   hi = { Types.col = \"59\"; line = \"48\" };\n                   lo = { Types.col = \"19\"; line = \"48\" } };\n                 ty =\n                 (Types.RawPtr\n                    (Types.Adt {\n                       def_id =\n                       { Types.index = (27, 20890); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"bio_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []},\n                     true))\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.PointerCoercion {\n                    cast = (Types.ClosureFnPointer Types.Safe);\n                    source =\n                    { Types.attributes = [];\n                      contents =\n                      Types.Closure {\n                        body =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Block {\n                            expr =\n                            (Some { Types.attributes = [];\n                                    contents =\n                                    Types.Call {\n                                      args =\n                                      [{ Types.attributes = [];\n                                         contents =\n                                         Types.VarRef {\n                                           id =\n                                           { Types.id =\n                                             { Types.local_id = \"20\";\n                                               owner =\n                                               { Types.index = (0, 168);\n                                                 krate = \"sandwich\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs\n                                                       \"implementation\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs\n                                                        \"openssl3_impl\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"support\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.ValueNs \"errstr\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 }\n                                               };\n                                             name = \"x\" }};\n                                         hir_id = (Some (\"168\", \"26\"));\n                                         span =\n                                         { Types.filename =\n                                           (Types.Real\n                                              (Types.LocalPath\n                                                 \"rust/implementation/openssl3_impl/support.rs\"));\n                                           hi =\n                                           { Types.col = \"36\"; line = \"49\" };\n                                           lo =\n                                           { Types.col = \"35\"; line = \"49\" }\n                                           };\n                                         ty =\n                                         (Types.RawPtr\n                                            (Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 20890);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"bio_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []},\n                                             true))\n                                         }\n                                        ];\n                                      bounds_impls = [];\n                                      fn_span =\n                                      { Types.filename =\n                                        (Types.Real\n                                           (Types.LocalPath\n                                              \"rust/implementation/openssl3_impl/support.rs\"));\n                                        hi =\n                                        { Types.col = \"37\"; line = \"49\" };\n                                        lo =\n                                        { Types.col = \"12\"; line = \"49\" } };\n                                      from_hir_call = true;\n                                      fun' =\n                                      { Types.attributes = [];\n                                        contents =\n                                        Types.GlobalName {\n                                          id =\n                                          { Types.index = (27, 12384);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data = Types.ForeignMod;\n                                               disambiguator = 556 };\n                                              { Types.data =\n                                                (Types.ValueNs \"BIO_free_all\");\n                                                disambiguator = 0 }\n                                              ]\n                                            }};\n                                        hir_id = None;\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath\n                                                \"rust/implementation/openssl3_impl/support.rs\"));\n                                          hi =\n                                          { Types.col = \"34\"; line = \"49\" };\n                                          lo =\n                                          { Types.col = \"12\"; line = \"49\" } };\n                                        ty =\n                                        (Types.Arrow\n                                           { Types.bound_vars = [];\n                                             value =\n                                             { Types.abi =\n                                               Types.Abi {\n                                                 todo = \"C { unwind: false }\"};\n                                               c_variadic = false;\n                                               inputs =\n                                               [(Types.RawPtr\n                                                   (Types.Adt {\n                                                      def_id =\n                                                      { Types.index =\n                                                        (27, 20890);\n                                                        krate = \"openssl3\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"bio_st\");\n                                                           disambiguator = 0\n                                                           }\n                                                          ]\n                                                        };\n                                                      generic_args = [];\n                                                      trait_refs = []},\n                                                    true))\n                                                 ];\n                                               output = (Types.Tuple []);\n                                               safety = Types.Unsafe }\n                                             })\n                                        };\n                                      generic_args = []; trait = None;\n                                      ty =\n                                      (Types.Arrow\n                                         { Types.bound_vars = [];\n                                           value =\n                                           { Types.abi =\n                                             Types.Abi {\n                                               todo = \"C { unwind: false }\"};\n                                             c_variadic = false;\n                                             inputs =\n                                             [(Types.RawPtr\n                                                 (Types.Adt {\n                                                    def_id =\n                                                    { Types.index =\n                                                      (27, 20890);\n                                                      krate = \"openssl3\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"bio_st\");\n                                                         disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args = [];\n                                                    trait_refs = []},\n                                                  true))\n                                               ];\n                                             output = (Types.Tuple []);\n                                             safety = Types.Unsafe }\n                                           })};\n                                    hir_id = (Some (\"168\", \"22\"));\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath\n                                            \"rust/implementation/openssl3_impl/support.rs\"));\n                                      hi = { Types.col = \"37\"; line = \"49\" };\n                                      lo = { Types.col = \"12\"; line = \"49\" }\n                                      };\n                                    ty = (Types.Tuple []) });\n                            region_scope =\n                            { Types.data = Types.Node; id = \"28\" };\n                            safety_mode = Types.Safe;\n                            span =\n                            { Types.filename =\n                              (Types.Real\n                                 (Types.LocalPath\n                                    \"rust/implementation/openssl3_impl/support.rs\"));\n                              hi = { Types.col = \"9\"; line = \"50\" };\n                              lo = { Types.col = \"65\"; line = \"48\" } };\n                            stmts = []; targeted_by_break = false};\n                          hir_id = (Some (\"168\", \"21\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3_impl/support.rs\"));\n                            hi = { Types.col = \"9\"; line = \"50\" };\n                            lo = { Types.col = \"65\"; line = \"48\" } };\n                          ty = (Types.Tuple []) };\n                        movability = None;\n                        params =\n                        [{ Types.attributes = []; hir_id = None; pat = None;\n                           self_kind = None;\n                           ty =\n                           (Types.Ref\n                              ({ Types.kind = Types.ReErased },\n                               (Types.Arrow\n                                  { Types.bound_vars = [];\n                                    value =\n                                    { Types.abi = Types.Abi {todo = \"Rust\"};\n                                      c_variadic = false;\n                                      inputs =\n                                      [(Types.RawPtr\n                                          (Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 20890);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"bio_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []},\n                                           true))\n                                        ];\n                                      output = (Types.Tuple []);\n                                      safety = Types.Safe }\n                                    }),\n                               false));\n                           ty_span = None };\n                          { Types.attributes = [];\n                            hir_id =\n                            (Some { Types.local_id = \"19\";\n                                    owner =\n                                    { Types.index = (0, 168);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"implementation\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"openssl3_impl\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"support\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.ValueNs \"errstr\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    });\n                            pat =\n                            (Some { Types.attributes = [];\n                                    contents =\n                                    Types.Binding {is_primary = true;\n                                      mode =\n                                      { Types.by_ref = Types.No;\n                                        mutability = false };\n                                      subpattern = None;\n                                      ty =\n                                      (Types.RawPtr\n                                         (Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 20890);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"bio_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []},\n                                          true));\n                                      var =\n                                      { Types.id =\n                                        { Types.local_id = \"20\";\n                                          owner =\n                                          { Types.index = (0, 168);\n                                            krate = \"sandwich\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"implementation\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"openssl3_impl\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"support\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.ValueNs \"errstr\");\n                                                disambiguator = 0 }\n                                              ]\n                                            }\n                                          };\n                                        name = \"x\" }};\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath\n                                            \"rust/implementation/openssl3_impl/support.rs\"));\n                                      hi = { Types.col = \"63\"; line = \"48\" };\n                                      lo = { Types.col = \"62\"; line = \"48\" }\n                                      };\n                                    ty =\n                                    (Types.RawPtr\n                                       (Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 20890);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"bio_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []},\n                                        true))\n                                    });\n                            self_kind = None;\n                            ty =\n                            (Types.RawPtr\n                               (Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 20890);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"bio_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                true));\n                            ty_span = None }\n                          ];\n                        upvars = []};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/support.rs\"));\n                        hi = { Types.col = \"9\"; line = \"50\" };\n                        lo = { Types.col = \"61\"; line = \"48\" } };\n                      ty =\n                      (Types.Arrow\n                         { Types.bound_vars = [];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [(Types.RawPtr\n                                 (Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 20890);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"bio_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []},\n                                  true))\n                               ];\n                             output = (Types.Tuple []); safety = Types.Safe }\n                           })\n                      }};\n                  hir_id = (Some (\"168\", \"18\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath\n                          \"rust/implementation/openssl3_impl/support.rs\"));\n                    hi = { Types.col = \"9\"; line = \"50\" };\n                    lo = { Types.col = \"61\"; line = \"48\" } };\n                  ty =\n                  (Types.Arrow\n                     { Types.bound_vars = [];\n                       value =\n                       { Types.abi = Types.Abi {todo = \"Rust\"};\n                         c_variadic = false;\n                         inputs =\n                         [(Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 20890);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"bio_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true))\n                           ];\n                         output = (Types.Tuple []); safety = Types.Safe }\n                       })\n                  }\n                ];\n              bounds_impls = [];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath\n                      \"rust/implementation/openssl3_impl/support.rs\"));\n                hi = { Types.col = \"10\"; line = \"50\" };\n                lo = { Types.col = \"8\"; line = \"48\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (0, 642); krate = \"sandwich\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"support\");\n                       disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"pimpl\");\n                        disambiguator = 0 };\n                      { Types.data = Types.Impl; disambiguator = 2 };\n                      { Types.data = (Types.ValueNs \"new\"); disambiguator = 0\n                        }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath\n                        \"rust/implementation/openssl3_impl/support.rs\"));\n                  hi = { Types.col = \"18\"; line = \"48\" };\n                  lo = { Types.col = \"8\"; line = \"48\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"Rust\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           (Types.Adt {\n                              def_id =\n                              { Types.index = (27, 20890);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"bio_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []},\n                            true));\n                         (Types.Arrow\n                            { Types.bound_vars = [];\n                              value =\n                              { Types.abi = Types.Abi {todo = \"Rust\"};\n                                c_variadic = false;\n                                inputs =\n                                [(Types.RawPtr\n                                    (Types.Adt {\n                                       def_id =\n                                       { Types.index = (27, 20890);\n                                         krate = \"openssl3\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"bio_st\");\n                                            disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []; trait_refs = []},\n                                     true))\n                                  ];\n                                output = (Types.Tuple []);\n                                safety = Types.Safe }\n                              })\n                         ];\n                       output =\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (2, 36174); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"option\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Option\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (0, 628); krate = \"sandwich\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"support\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"pimpl\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"Pimpl\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Lifetime\n                                   { Types.kind = Types.ReErased });\n                                 (Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 20890);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"bio_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                 ];\n                               trait_refs =\n                               [{ Types.args = [];\n                                  impl =\n                                  Types.Builtin {\n                                    trait =\n                                    { Types.def_id =\n                                      { Types.index = (2, 26413);\n                                        krate = \"core\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"marker\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"Sized\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Type\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 20890);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"bio_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []})\n                                        ]\n                                      }};\n                                  trait =\n                                  { Types.def_id =\n                                    { Types.index = (2, 26413);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"marker\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Sized\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 20890);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"bio_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []})\n                                      ]\n                                    }\n                                  }\n                                 ]})\n                           ];\n                         trait_refs =\n                         [{ Types.args = [];\n                            impl =\n                            Types.Builtin {\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (0, 628);\n                                        krate = \"sandwich\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"support\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"pimpl\");\n                                            disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"Pimpl\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Lifetime\n                                          { Types.kind = Types.ReErased });\n                                        (Types.Type\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 20890);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"bio_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []})\n                                        ];\n                                      trait_refs =\n                                      [{ Types.args = [];\n                                         impl =\n                                         Types.Builtin {\n                                           trait =\n                                           { Types.def_id =\n                                             { Types.index = (2, 26413);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"marker\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"Sized\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args =\n                                             [(Types.Type\n                                                 Types.Adt {\n                                                   def_id =\n                                                   { Types.index =\n                                                     (27, 20890);\n                                                     krate = \"openssl3\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"bio_st\");\n                                                        disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = [];\n                                                   trait_refs = []})\n                                               ]\n                                             }};\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 26413);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 20890);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"bio_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ]\n                                           }\n                                         }\n                                        ]})\n                                  ]\n                                }};\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 26413); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"marker\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Sized\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 628);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"support\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"pimpl\");\n                                          disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Pimpl\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Lifetime\n                                        { Types.kind = Types.ReErased });\n                                      (Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 20890);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"bio_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []})\n                                      ];\n                                    trait_refs =\n                                    [{ Types.args = [];\n                                       impl =\n                                       Types.Builtin {\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 26413);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 20890);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"bio_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ]\n                                           }};\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 26413);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 20890);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"bio_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                           ]\n                                         }\n                                       }\n                                      ]})\n                                ]\n                              }\n                            }\n                           ]};\n                       safety = Types.Unsafe }\n                     })\n                };\n              generic_args =\n              [(Types.Lifetime { Types.kind = Types.ReErased });\n                (Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (27, 20890); krate = \"openssl3\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"bio_st\");\n                          disambiguator = 0 }\n                         ]\n                       };\n                     generic_args = []; trait_refs = []})\n                ];\n              trait = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         (Types.Adt {\n                            def_id =\n                            { Types.index = (27, 20890); krate = \"openssl3\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"bio_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []},\n                          true));\n                       (Types.Arrow\n                          { Types.bound_vars = [];\n                            value =\n                            { Types.abi = Types.Abi {todo = \"Rust\"};\n                              c_variadic = false;\n                              inputs =\n                              [(Types.RawPtr\n                                  (Types.Adt {\n                                     def_id =\n                                     { Types.index = (27, 20890);\n                                       krate = \"openssl3\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"bio_st\");\n                                          disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []},\n                                   true))\n                                ];\n                              output = (Types.Tuple []); safety = Types.Safe\n                              }\n                            })\n                       ];\n                     output =\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (2, 36174); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"option\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Option\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (0, 628); krate = \"sandwich\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"support\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"pimpl\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"Pimpl\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Lifetime { Types.kind = Types.ReErased });\n                               (Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 20890);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"bio_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []})\n                               ];\n                             trait_refs =\n                             [{ Types.args = [];\n                                impl =\n                                Types.Builtin {\n                                  trait =\n                                  { Types.def_id =\n                                    { Types.index = (2, 26413);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"marker\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Sized\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 20890);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"bio_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []})\n                                      ]\n                                    }};\n                                trait =\n                                { Types.def_id =\n                                  { Types.index = (2, 26413); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"marker\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Sized\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (27, 20890);\n                                          krate = \"openssl3\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"bio_st\");\n                                             disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []; trait_refs = []})\n                                    ]\n                                  }\n                                }\n                               ]})\n                         ];\n                       trait_refs =\n                       [{ Types.args = [];\n                          impl =\n                          Types.Builtin {\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 26413); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"marker\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Sized\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 628);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"support\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"pimpl\");\n                                          disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Pimpl\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Lifetime\n                                        { Types.kind = Types.ReErased });\n                                      (Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 20890);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"bio_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []})\n                                      ];\n                                    trait_refs =\n                                    [{ Types.args = [];\n                                       impl =\n                                       Types.Builtin {\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 26413);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 20890);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"bio_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ]\n                                           }};\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 26413);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 20890);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"bio_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                           ]\n                                         }\n                                       }\n                                      ]})\n                                ]\n                              }};\n                          trait =\n                          { Types.def_id =\n                            { Types.index = (2, 26413); krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"marker\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"Sized\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (0, 628);\n                                    krate = \"sandwich\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"support\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"pimpl\");\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Pimpl\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Lifetime\n                                      { Types.kind = Types.ReErased });\n                                    (Types.Type\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.index = (27, 20890);\n                                           krate = \"openssl3\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"bio_st\");\n                                              disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args = []; trait_refs = []})\n                                    ];\n                                  trait_refs =\n                                  [{ Types.args = [];\n                                     impl =\n                                     Types.Builtin {\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 26413);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 20890);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"bio_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                           ]\n                                         }};\n                                     trait =\n                                     { Types.def_id =\n                                       { Types.index = (2, 26413);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"marker\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"Sized\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args =\n                                       [(Types.Type\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 20890);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"bio_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []})\n                                         ]\n                                       }\n                                     }\n                                    ]})\n                              ]\n                            }\n                          }\n                         ]};\n                     safety = Types.Unsafe }\n                   })};\n            hir_id = (Some (\"168\", \"4\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 (Types.LocalPath\n                    \"rust/implementation/openssl3_impl/support.rs\"));\n              hi = { Types.col = \"10\"; line = \"50\" };\n              lo = { Types.col = \"8\"; line = \"48\" } };\n            ty =\n            Types.Adt {\n              def_id =\n              { Types.index = (2, 36174); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0 }\n                  ]\n                };\n              generic_args =\n              [(Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (0, 628); krate = \"sandwich\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"support\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"pimpl\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Pimpl\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Lifetime { Types.kind = Types.ReErased });\n                      (Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (27, 20890); krate = \"openssl3\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"bio_st\");\n                                disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []; trait_refs = []})\n                      ];\n                    trait_refs =\n                    [{ Types.args = [];\n                       impl =\n                       Types.Builtin {\n                         trait =\n                         { Types.def_id =\n                           { Types.index = (2, 26413); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"marker\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Sized\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Type\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (27, 20890);\n                                   krate = \"openssl3\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"bio_st\");\n                                      disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []; trait_refs = []})\n                             ]\n                           }};\n                       trait =\n                       { Types.def_id =\n                         { Types.index = (2, 26413); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"marker\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Sized\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (27, 20890);\n                                 krate = \"openssl3\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"bio_st\");\n                                    disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args = []; trait_refs = []})\n                           ]\n                         }\n                       }\n                      ]})\n                ];\n              trait_refs =\n              [{ Types.args = [];\n                 impl =\n                 Types.Builtin {\n                   trait =\n                   { Types.def_id =\n                     { Types.index = (2, 26413); krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"marker\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Sized\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args =\n                     [(Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (0, 628); krate = \"sandwich\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"support\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"pimpl\");\n                                 disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Pimpl\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Lifetime { Types.kind = Types.ReErased });\n                             (Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 20890);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"bio_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []})\n                             ];\n                           trait_refs =\n                           [{ Types.args = [];\n                              impl =\n                              Types.Builtin {\n                                trait =\n                                { Types.def_id =\n                                  { Types.index = (2, 26413); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"marker\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Sized\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (27, 20890);\n                                          krate = \"openssl3\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"bio_st\");\n                                             disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []; trait_refs = []})\n                                    ]\n                                  }};\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 20890);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"bio_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                  ]\n                                }\n                              }\n                             ]})\n                       ]\n                     }};\n                 trait =\n                 { Types.def_id =\n                   { Types.index = (2, 26413); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"marker\");\n                        disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"Sized\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (0, 628); krate = \"sandwich\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"support\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"pimpl\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Pimpl\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Lifetime { Types.kind = Types.ReErased });\n                           (Types.Type\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (27, 20890);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"bio_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []})\n                           ];\n                         trait_refs =\n                         [{ Types.args = [];\n                            impl =\n                            Types.Builtin {\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 20890);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"bio_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                  ]\n                                }};\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 26413); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"marker\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Sized\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 20890);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"bio_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []})\n                                ]\n                              }\n                            }\n                           ]})\n                     ]\n                   }\n                 }\n                ]}\n            });\n    region_scope = { Types.data = Types.Node; id = \"30\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         (Types.LocalPath \"rust/implementation/openssl3_impl/support.rs\"));\n      hi = { Types.col = \"5\"; line = \"51\" };\n      lo = { Types.col = \"21\"; line = \"47\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"168\", \"3\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       (Types.LocalPath \"rust/implementation/openssl3_impl/support.rs\"));\n    hi = { Types.col = \"6\"; line = \"51\" };\n    lo = { Types.col = \"20\"; line = \"47\" } };\n  ty =\n  Types.Adt {\n    def_id =\n    { Types.index = (2, 36174); krate = \"core\";\n      path =\n      [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0 };\n        { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0 }]\n      };\n    generic_args =\n    [(Types.Type\n        Types.Adt {\n          def_id =\n          { Types.index = (0, 628); krate = \"sandwich\";\n            path =\n            [{ Types.data = (Types.TypeNs \"support\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"pimpl\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"Pimpl\"); disambiguator = 0 }]\n            };\n          generic_args =\n          [(Types.Lifetime { Types.kind = Types.ReErased });\n            (Types.Type\n               Types.Adt {\n                 def_id =\n                 { Types.index = (27, 20890); krate = \"openssl3\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"bio_st\"); disambiguator = 0\n                      }\n                     ]\n                   };\n                 generic_args = []; trait_refs = []})\n            ];\n          trait_refs =\n          [{ Types.args = [];\n             impl =\n             Types.Builtin {\n               trait =\n               { Types.def_id =\n                 { Types.index = (2, 26413); krate = \"core\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0\n                      };\n                     { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0\n                       }\n                     ]\n                   };\n                 generic_args =\n                 [(Types.Type\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (27, 20890); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"bio_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []})\n                   ]\n                 }};\n             trait =\n             { Types.def_id =\n               { Types.index = (2, 26413); krate = \"core\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0 }\n                   ]\n                 };\n               generic_args =\n               [(Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (27, 20890); krate = \"openssl3\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"bio_st\");\n                          disambiguator = 0 }\n                         ]\n                       };\n                     generic_args = []; trait_refs = []})\n                 ]\n               }\n             }\n            ]})\n      ];\n    trait_refs =\n    [{ Types.args = [];\n       impl =\n       Types.Builtin {\n         trait =\n         { Types.def_id =\n           { Types.index = (2, 26413); krate = \"core\";\n             path =\n             [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0 };\n               { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0 }]\n             };\n           generic_args =\n           [(Types.Type\n               Types.Adt {\n                 def_id =\n                 { Types.index = (0, 628); krate = \"sandwich\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"support\");\n                      disambiguator = 0 };\n                     { Types.data = (Types.TypeNs \"pimpl\"); disambiguator = 0\n                       };\n                     { Types.data = (Types.TypeNs \"Pimpl\"); disambiguator = 0\n                       }\n                     ]\n                   };\n                 generic_args =\n                 [(Types.Lifetime { Types.kind = Types.ReErased });\n                   (Types.Type\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (27, 20890); krate = \"openssl3\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"bio_st\");\n                             disambiguator = 0 }\n                            ]\n                          };\n                        generic_args = []; trait_refs = []})\n                   ];\n                 trait_refs =\n                 [{ Types.args = [];\n                    impl =\n                    Types.Builtin {\n                      trait =\n                      { Types.def_id =\n                        { Types.index = (2, 26413); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"marker\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Sized\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (27, 20890);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"bio_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []})\n                          ]\n                        }};\n                    trait =\n                    { Types.def_id =\n                      { Types.index = (2, 26413); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"marker\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Sized\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (27, 20890); krate = \"openssl3\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"bio_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []})\n                        ]\n                      }\n                    }\n                   ]})\n             ]\n           }};\n       trait =\n       { Types.def_id =\n         { Types.index = (2, 26413); krate = \"core\";\n           path =\n           [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0 }]\n           };\n         generic_args =\n         [(Types.Type\n             Types.Adt {\n               def_id =\n               { Types.index = (0, 628); krate = \"sandwich\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"support\"); disambiguator = 0\n                    };\n                   { Types.data = (Types.TypeNs \"pimpl\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Pimpl\"); disambiguator = 0 }\n                   ]\n                 };\n               generic_args =\n               [(Types.Lifetime { Types.kind = Types.ReErased });\n                 (Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (27, 20890); krate = \"openssl3\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"bio_st\");\n                           disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = []; trait_refs = []})\n                 ];\n               trait_refs =\n               [{ Types.args = [];\n                  impl =\n                  Types.Builtin {\n                    trait =\n                    { Types.def_id =\n                      { Types.index = (2, 26413); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"marker\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Sized\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (27, 20890); krate = \"openssl3\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"bio_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []})\n                        ]\n                      }};\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 26413); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (27, 20890); krate = \"openssl3\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"bio_st\");\n                               disambiguator = 0 }\n                              ]\n                            };\n                          generic_args = []; trait_refs = []})\n                      ]\n                    }\n                  }\n                 ]})\n           ]\n         }\n       }\n      ]}\n  }"

        <:
        Core.Option.t_Option (Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_bio_st)
      with
      | Core.Option.Option_Some bio ->
        Core.Ops.Control_flow.ControlFlow_Continue
        (let _:Prims.unit =
            Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
              "{ Types.attributes = [];\n  contents =\n  Types.Block {expr = None;\n    region_scope = { Types.data = Types.Node; id = \"53\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         (Types.LocalPath \"rust/implementation/openssl3_impl/support.rs\"));\n      hi = { Types.col = \"5\"; line = \"57\" };\n      lo = { Types.col = \"4\"; line = \"55\" } };\n    stmts =\n    [{ Types.kind =\n       Types.Expr {\n         expr =\n         { Types.attributes = [];\n           contents =\n           Types.Call {\n             args =\n             [{ Types.attributes = [];\n                contents =\n                Types.Call {\n                  args =\n                  [{ Types.attributes = [];\n                     contents =\n                     Types.Call {\n                       args =\n                       [{ Types.attributes = [];\n                          contents =\n                          Types.Borrow {\n                            arg =\n                            { Types.attributes = [];\n                              contents =\n                              Types.VarRef {\n                                id =\n                                { Types.id =\n                                  { Types.local_id = \"33\";\n                                    owner =\n                                    { Types.index = (0, 168);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"implementation\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"openssl3_impl\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"support\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.ValueNs \"errstr\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    };\n                                  name = \"bio\" }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"rust/implementation/openssl3_impl/support.rs\"));\n                                hi = { Types.col = \"38\"; line = \"56\" };\n                                lo = { Types.col = \"35\"; line = \"56\" } };\n                              ty =\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (0, 628); krate = \"sandwich\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"support\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"pimpl\");\n                                      disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Pimpl\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Lifetime\n                                    { Types.kind = Types.ReErased });\n                                  (Types.Type\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (27, 20890);\n                                         krate = \"openssl3\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"bio_st\");\n                                            disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []; trait_refs = []})\n                                  ];\n                                trait_refs =\n                                [{ Types.args = [];\n                                   impl =\n                                   Types.Builtin {\n                                     trait =\n                                     { Types.def_id =\n                                       { Types.index = (2, 26413);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"marker\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"Sized\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args =\n                                       [(Types.Type\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 20890);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"bio_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []})\n                                         ]\n                                       }};\n                                   trait =\n                                   { Types.def_id =\n                                     { Types.index = (2, 26413);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"marker\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"Sized\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args =\n                                     [(Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 20890);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"bio_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []})\n                                       ]\n                                     }\n                                   }\n                                  ]}\n                              };\n                            borrow_kind = Types.Shared};\n                          hir_id = (Some (\"168\", \"50\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3_impl/support.rs\"));\n                            hi = { Types.col = \"38\"; line = \"56\" };\n                            lo = { Types.col = \"35\"; line = \"56\" } };\n                          ty =\n                          (Types.Ref\n                             ({ Types.kind = Types.ReErased },\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (0, 628); krate = \"sandwich\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"support\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"pimpl\");\n                                      disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Pimpl\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Lifetime\n                                    { Types.kind = Types.ReErased });\n                                  (Types.Type\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (27, 20890);\n                                         krate = \"openssl3\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"bio_st\");\n                                            disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []; trait_refs = []})\n                                  ];\n                                trait_refs =\n                                [{ Types.args = [];\n                                   impl =\n                                   Types.Builtin {\n                                     trait =\n                                     { Types.def_id =\n                                       { Types.index = (2, 26413);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"marker\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"Sized\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args =\n                                       [(Types.Type\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 20890);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"bio_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []})\n                                         ]\n                                       }};\n                                   trait =\n                                   { Types.def_id =\n                                     { Types.index = (2, 26413);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"marker\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"Sized\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args =\n                                     [(Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 20890);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"bio_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []})\n                                       ]\n                                     }\n                                   }\n                                  ]},\n                              false))\n                          }\n                         ];\n                       bounds_impls = [];\n                       fn_span =\n                       { Types.filename =\n                         (Types.Real\n                            (Types.LocalPath\n                               \"rust/implementation/openssl3_impl/support.rs\"));\n                         hi = { Types.col = \"51\"; line = \"56\" };\n                         lo = { Types.col = \"39\"; line = \"56\" } };\n                       from_hir_call = true;\n                       fun' =\n                       { Types.attributes = [];\n                         contents =\n                         Types.GlobalName {\n                           id =\n                           { Types.index = (0, 644); krate = \"sandwich\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"support\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"pimpl\");\n                                 disambiguator = 0 };\n                               { Types.data = Types.Impl; disambiguator = 2 };\n                               { Types.data = (Types.ValueNs \"as_nonnull\");\n                                 disambiguator = 0 }\n                               ]\n                             }};\n                         hir_id = None;\n                         span =\n                         { Types.filename =\n                           (Types.Real\n                              (Types.LocalPath\n                                 \"rust/implementation/openssl3_impl/support.rs\"));\n                           hi = { Types.col = \"49\"; line = \"56\" };\n                           lo = { Types.col = \"39\"; line = \"56\" } };\n                         ty =\n                         (Types.Arrow\n                            { Types.bound_vars =\n                              [(Types.Region\n                                  (Types.BrNamed\n                                     ({ Types.index = (0, 1675);\n                                        krate = \"sandwich\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"support\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"pimpl\");\n                                            disambiguator = 0 };\n                                          { Types.data = Types.Impl;\n                                            disambiguator = 2 };\n                                          { Types.data =\n                                            (Types.ValueNs \"as_nonnull\");\n                                            disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.LifetimeNs \"'_\");\n                                            disambiguator = 0 }\n                                          ]\n                                        },\n                                      \"'_\")))\n                                ];\n                              value =\n                              { Types.abi = Types.Abi {todo = \"Rust\"};\n                                c_variadic = false;\n                                inputs =\n                                [(Types.Ref\n                                    ({ Types.kind =\n                                       (Types.ReBound\n                                          (\"0\",\n                                           { Types.kind =\n                                             (Types.BrNamed\n                                                ({ Types.index = (0, 1675);\n                                                   krate = \"sandwich\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"support\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"pimpl\");\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       Types.Impl;\n                                                       disambiguator = 2 };\n                                                     { Types.data =\n                                                       (Types.ValueNs\n                                                          \"as_nonnull\");\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.LifetimeNs \"'_\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   },\n                                                 \"'_\"));\n                                             var = \"0\" }))\n                                       },\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (0, 628);\n                                         krate = \"sandwich\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"support\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"pimpl\");\n                                             disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"Pimpl\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args =\n                                       [(Types.Lifetime\n                                           { Types.kind = Types.ReErased });\n                                         (Types.Type\n                                            Types.Adt {\n                                              def_id =\n                                              { Types.index = (27, 20890);\n                                                krate = \"openssl3\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"bio_st\");\n                                                   disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = [];\n                                              trait_refs = []})\n                                         ];\n                                       trait_refs =\n                                       [{ Types.args = [];\n                                          impl =\n                                          Types.Builtin {\n                                            trait =\n                                            { Types.def_id =\n                                              { Types.index = (2, 26413);\n                                                krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"marker\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"Sized\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args =\n                                              [(Types.Type\n                                                  Types.Adt {\n                                                    def_id =\n                                                    { Types.index =\n                                                      (27, 20890);\n                                                      krate = \"openssl3\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"bio_st\");\n                                                         disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args = [];\n                                                    trait_refs = []})\n                                                ]\n                                              }};\n                                          trait =\n                                          { Types.def_id =\n                                            { Types.index = (2, 26413);\n                                              krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"marker\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Sized\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args =\n                                            [(Types.Type\n                                                Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (27, 20890);\n                                                    krate = \"openssl3\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"bio_st\");\n                                                       disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = [];\n                                                  trait_refs = []})\n                                              ]\n                                            }\n                                          }\n                                         ]},\n                                     false))\n                                  ];\n                                output =\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (2, 2222); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"ptr\");\n                                       disambiguator = 0 };\n                                      { Types.data =\n                                        (Types.TypeNs \"non_null\");\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"NonNull\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (27, 20890);\n                                          krate = \"openssl3\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"bio_st\");\n                                             disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []; trait_refs = []})\n                                    ];\n                                  trait_refs = []};\n                                safety = Types.Safe }\n                              })\n                         };\n                       generic_args =\n                       [(Types.Lifetime { Types.kind = Types.ReErased });\n                         (Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (27, 20890);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"bio_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []})\n                         ];\n                       trait = None;\n                       ty =\n                       (Types.Arrow\n                          { Types.bound_vars =\n                            [(Types.Region\n                                (Types.BrNamed\n                                   ({ Types.index = (0, 1675);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"support\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"pimpl\");\n                                          disambiguator = 0 };\n                                        { Types.data = Types.Impl;\n                                          disambiguator = 2 };\n                                        { Types.data =\n                                          (Types.ValueNs \"as_nonnull\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.LifetimeNs \"'_\");\n                                          disambiguator = 0 }\n                                        ]\n                                      },\n                                    \"'_\")))\n                              ];\n                            value =\n                            { Types.abi = Types.Abi {todo = \"Rust\"};\n                              c_variadic = false;\n                              inputs =\n                              [(Types.Ref\n                                  ({ Types.kind =\n                                     (Types.ReBound\n                                        (\"0\",\n                                         { Types.kind =\n                                           (Types.BrNamed\n                                              ({ Types.index = (0, 1675);\n                                                 krate = \"sandwich\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"support\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"pimpl\");\n                                                     disambiguator = 0 };\n                                                   { Types.data = Types.Impl;\n                                                     disambiguator = 2 };\n                                                   { Types.data =\n                                                     (Types.ValueNs\n                                                        \"as_nonnull\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.LifetimeNs \"'_\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 },\n                                               \"'_\"));\n                                           var = \"0\" }))\n                                     },\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (0, 628);\n                                       krate = \"sandwich\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"support\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"pimpl\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"Pimpl\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args =\n                                     [(Types.Lifetime\n                                         { Types.kind = Types.ReErased });\n                                       (Types.Type\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 20890);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"bio_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []})\n                                       ];\n                                     trait_refs =\n                                     [{ Types.args = [];\n                                        impl =\n                                        Types.Builtin {\n                                          trait =\n                                          { Types.def_id =\n                                            { Types.index = (2, 26413);\n                                              krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"marker\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Sized\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args =\n                                            [(Types.Type\n                                                Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (27, 20890);\n                                                    krate = \"openssl3\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"bio_st\");\n                                                       disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = [];\n                                                  trait_refs = []})\n                                              ]\n                                            }};\n                                        trait =\n                                        { Types.def_id =\n                                          { Types.index = (2, 26413);\n                                            krate = \"core\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"marker\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"Sized\");\n                                                disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args =\n                                          [(Types.Type\n                                              Types.Adt {\n                                                def_id =\n                                                { Types.index = (27, 20890);\n                                                  krate = \"openssl3\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs \"bio_st\");\n                                                     disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = [];\n                                                trait_refs = []})\n                                            ]\n                                          }\n                                        }\n                                       ]},\n                                   false))\n                                ];\n                              output =\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (2, 2222); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"ptr\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"non_null\");\n                                      disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"NonNull\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 20890);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"bio_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                  ];\n                                trait_refs = []};\n                              safety = Types.Safe }\n                            })};\n                     hir_id = (Some (\"168\", \"48\"));\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3_impl/support.rs\"));\n                       hi = { Types.col = \"51\"; line = \"56\" };\n                       lo = { Types.col = \"35\"; line = \"56\" } };\n                     ty =\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (2, 2222); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"ptr\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"non_null\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"NonNull\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (27, 20890); krate = \"openssl3\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"bio_st\");\n                                  disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []})\n                         ];\n                       trait_refs = []}\n                     }\n                    ];\n                  bounds_impls = [];\n                  fn_span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath\n                          \"rust/implementation/openssl3_impl/support.rs\"));\n                    hi = { Types.col = \"60\"; line = \"56\" };\n                    lo = { Types.col = \"52\"; line = \"56\" } };\n                  from_hir_call = true;\n                  fun' =\n                  { Types.attributes = [];\n                    contents =\n                    Types.GlobalName {\n                      id =\n                      { Types.index = (2, 2245); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"ptr\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"non_null\");\n                            disambiguator = 0 };\n                          { Types.data = Types.Impl; disambiguator = 3 };\n                          { Types.data = (Types.ValueNs \"as_ptr\");\n                            disambiguator = 0 }\n                          ]\n                        }};\n                    hir_id = None;\n                    span =\n                    { Types.filename =\n                      (Types.Real\n                         (Types.LocalPath\n                            \"rust/implementation/openssl3_impl/support.rs\"));\n                      hi = { Types.col = \"58\"; line = \"56\" };\n                      lo = { Types.col = \"52\"; line = \"56\" } };\n                    ty =\n                    (Types.Arrow\n                       { Types.bound_vars = [];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false;\n                           inputs =\n                           [Types.Adt {\n                              def_id =\n                              { Types.index = (2, 2222); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"ptr\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"non_null\");\n                                    disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"NonNull\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 20890);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"bio_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []})\n                                ];\n                              trait_refs = []}\n                             ];\n                           output =\n                           (Types.RawPtr\n                              (Types.Adt {\n                                 def_id =\n                                 { Types.index = (27, 20890);\n                                   krate = \"openssl3\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"bio_st\");\n                                      disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []; trait_refs = []},\n                               true));\n                           safety = Types.Safe }\n                         })\n                    };\n                  generic_args =\n                  [(Types.Type\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (27, 20890); krate = \"openssl3\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"bio_st\");\n                             disambiguator = 0 }\n                            ]\n                          };\n                        generic_args = []; trait_refs = []})\n                    ];\n                  trait = None;\n                  ty =\n                  (Types.Arrow\n                     { Types.bound_vars = [];\n                       value =\n                       { Types.abi = Types.Abi {todo = \"Rust\"};\n                         c_variadic = false;\n                         inputs =\n                         [Types.Adt {\n                            def_id =\n                            { Types.index = (2, 2222); krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"ptr\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"non_null\");\n                                  disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"NonNull\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 20890);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"bio_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []})\n                              ];\n                            trait_refs = []}\n                           ];\n                         output =\n                         (Types.RawPtr\n                            (Types.Adt {\n                               def_id =\n                               { Types.index = (27, 20890);\n                                 krate = \"openssl3\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"bio_st\");\n                                    disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args = []; trait_refs = []},\n                             true));\n                         safety = Types.Safe }\n                       })};\n                hir_id = (Some (\"168\", \"46\"));\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath\n                        \"rust/implementation/openssl3_impl/support.rs\"));\n                  hi = { Types.col = \"60\"; line = \"56\" };\n                  lo = { Types.col = \"35\"; line = \"56\" } };\n                ty =\n                (Types.RawPtr\n                   (Types.Adt {\n                      def_id =\n                      { Types.index = (27, 20890); krate = \"openssl3\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"bio_st\");\n                           disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = []; trait_refs = []},\n                    true))\n                }\n               ];\n             bounds_impls = [];\n             fn_span =\n             { Types.filename =\n               (Types.Real\n                  (Types.LocalPath\n                     \"rust/implementation/openssl3_impl/support.rs\"));\n               hi = { Types.col = \"61\"; line = \"56\" };\n               lo = { Types.col = \"8\"; line = \"56\" } };\n             from_hir_call = true;\n             fun' =\n             { Types.attributes = [];\n               contents =\n               Types.GlobalName {\n                 id =\n                 { Types.index = (27, 12617); krate = \"openssl3\";\n                   path =\n                   [{ Types.data = Types.ForeignMod; disambiguator = 664 };\n                     { Types.data = (Types.ValueNs \"ERR_print_errors\");\n                       disambiguator = 0 }\n                     ]\n                   }};\n               hir_id = None;\n               span =\n               { Types.filename =\n                 (Types.Real\n                    (Types.LocalPath\n                       \"rust/implementation/openssl3_impl/support.rs\"));\n                 hi = { Types.col = \"34\"; line = \"56\" };\n                 lo = { Types.col = \"8\"; line = \"56\" } };\n               ty =\n               (Types.Arrow\n                  { Types.bound_vars = [];\n                    value =\n                    { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                      c_variadic = false;\n                      inputs =\n                      [(Types.RawPtr\n                          (Types.Adt {\n                             def_id =\n                             { Types.index = (27, 20890); krate = \"openssl3\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"bio_st\");\n                                  disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []},\n                           true))\n                        ];\n                      output = (Types.Tuple []); safety = Types.Unsafe }\n                    })\n               };\n             generic_args = []; trait = None;\n             ty =\n             (Types.Arrow\n                { Types.bound_vars = [];\n                  value =\n                  { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                    c_variadic = false;\n                    inputs =\n                    [(Types.RawPtr\n                        (Types.Adt {\n                           def_id =\n                           { Types.index = (27, 20890); krate = \"openssl3\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"bio_st\");\n                                disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []; trait_refs = []},\n                         true))\n                      ];\n                    output = (Types.Tuple []); safety = Types.Unsafe }\n                  })};\n           hir_id = (Some (\"168\", \"42\"));\n           span =\n           { Types.filename =\n             (Types.Real\n                (Types.LocalPath\n                   \"rust/implementation/openssl3_impl/support.rs\"));\n             hi = { Types.col = \"61\"; line = \"56\" };\n             lo = { Types.col = \"8\"; line = \"56\" } };\n           ty = (Types.Tuple []) };\n         scope = { Types.data = Types.Node; id = \"52\" }}\n       }\n      ];\n    targeted_by_break = false};\n  hir_id = (Some (\"168\", \"41\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       (Types.LocalPath \"rust/implementation/openssl3_impl/support.rs\"));\n    hi = { Types.col = \"5\"; line = \"57\" };\n    lo = { Types.col = \"4\"; line = \"55\" } };\n  ty = (Types.Tuple []) }"

          in
          let buffer:Alloc.Vec.t_Vec u8 Alloc.Alloc.t_Global =
            Alloc.Vec.from_elem #u8 0uy errstr__DEFAULT_BUFFER_LEN
          in
          Rust_primitives.Hax.failure "(reject_RawOrMutPointer) ExplicitRejection { reason: \"a node of kind [Raw_pointer] have been found in the AST\" }"
            "{\n        let mut buffer_ptr: raw_pointer!() = {\n            alloc::vec::impl_1__as_mut_ptr::<int, alloc::alloc::t_Global>(&mut (buffer))\n        };\n        {\n            let mut size: int = { 0 };\n            {\n                let _: tuple0 = {\n                    {\n                        loop {\n                            {\n                                let mut readbytes: int = { 0 };\n                                {\n                                    let ret: int = {\n                                        rust_primitives::hax::failure(\n                                            \"(AST import) Unsafe blocks are not allowed.\",\n                                            \"{ Types.attributes = [];\\n  contents =\\n  Types.Block {\\n    expr =\\n    (Some { Types.attributes = [];\\n            contents =\\n            Types.Call {\\n              args =\\n              [{ Types.attributes = [];\\n                 contents =\\n                 Types.Call {\\n                   args =\\n                   [{ Types.attributes = [];\\n                      contents =\\n                      Types.Call {\\n                        args =\\n                        [{ Types.attributes = [];\\n                           contents =\\n                           Types.Borrow {\\n                             arg =\\n                             { Types.attributes = [];\\n                               contents =\\n                               Types.VarRef {\\n                                 id =\\n                                 { Types.id =\\n                                   { Types.local_id = \\\"33\\\";\\n                                     owner =\\n                                     { Types.index = (0, 168);\\n                                       krate = \\\"sandwich\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.TypeNs \\\"implementation\\\");\\n                                          disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"openssl3_impl\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"support\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.ValueNs \\\"errstr\\\");\\n                                           disambiguator = 0 }\\n                                         ]\\n                                       }\\n                                     };\\n                                   name = \\\"bio\\\" }};\\n                               hir_id = None;\\n                               span =\\n                               { Types.filename =\\n                                 (Types.Real\\n                                    (Types.LocalPath\\n                                       \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                                 hi = { Types.col = \\\"19\\\"; line = \\\"67\\\" };\\n                                 lo = { Types.col = \\\"16\\\"; line = \\\"67\\\" } };\\n                               ty =\\n                               Types.Adt {\\n                                 def_id =\\n                                 { Types.index = (0, 628);\\n                                   krate = \\\"sandwich\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"support\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                                       disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"Pimpl\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args =\\n                                 [(Types.Lifetime\\n                                     { Types.kind = Types.ReErased });\\n                                   (Types.Type\\n                                      Types.Adt {\\n                                        def_id =\\n                                        { Types.index = (27, 20890);\\n                                          krate = \\\"openssl3\\\";\\n                                          path =\\n                                          [{ Types.data =\\n                                             (Types.TypeNs \\\"bio_st\\\");\\n                                             disambiguator = 0 }\\n                                            ]\\n                                          };\\n                                        generic_args = []; trait_refs = []})\\n                                   ];\\n                                 trait_refs =\\n                                 [{ Types.args = [];\\n                                    impl =\\n                                    Types.Builtin {\\n                                      trait =\\n                                      { Types.def_id =\\n                                        { Types.index = (2, 26413);\\n                                          krate = \\\"core\\\";\\n                                          path =\\n                                          [{ Types.data =\\n                                             (Types.TypeNs \\\"marker\\\");\\n                                             disambiguator = 0 };\\n                                            { Types.data =\\n                                              (Types.TypeNs \\\"Sized\\\");\\n                                              disambiguator = 0 }\\n                                            ]\\n                                          };\\n                                        generic_args =\\n                                        [(Types.Type\\n                                            Types.Adt {\\n                                              def_id =\\n                                              { Types.index = (27, 20890);\\n                                                krate = \\\"openssl3\\\";\\n                                                path =\\n                                                [{ Types.data =\\n                                                   (Types.TypeNs \\\"bio_st\\\");\\n                                                   disambiguator = 0 }\\n                                                  ]\\n                                                };\\n                                              generic_args = [];\\n                                              trait_refs = []})\\n                                          ]\\n                                        }};\\n                                    trait =\\n                                    { Types.def_id =\\n                                      { Types.index = (2, 26413);\\n                                        krate = \\\"core\\\";\\n                                        path =\\n                                        [{ Types.data =\\n                                           (Types.TypeNs \\\"marker\\\");\\n                                           disambiguator = 0 };\\n                                          { Types.data =\\n                                            (Types.TypeNs \\\"Sized\\\");\\n                                            disambiguator = 0 }\\n                                          ]\\n                                        };\\n                                      generic_args =\\n                                      [(Types.Type\\n                                          Types.Adt {\\n                                            def_id =\\n                                            { Types.index = (27, 20890);\\n                                              krate = \\\"openssl3\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs \\\"bio_st\\\");\\n                                                 disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args = [];\\n                                            trait_refs = []})\\n                                        ]\\n                                      }\\n                                    }\\n                                   ]}\\n                               };\\n                             borrow_kind = Types.Shared};\\n                           hir_id = (Some (\\\"168\\\", \\\"92\\\"));\\n                           span =\\n                           { Types.filename =\\n                             (Types.Real\\n                                (Types.LocalPath\\n                                   \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                             hi = { Types.col = \\\"19\\\"; line = \\\"67\\\" };\\n                             lo = { Types.col = \\\"16\\\"; line = \\\"67\\\" } };\\n                           ty =\\n                           (Types.Ref\\n                              ({ Types.kind = Types.ReErased },\\n                               Types.Adt {\\n                                 def_id =\\n                                 { Types.index = (0, 628);\\n                                   krate = \\\"sandwich\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"support\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                                       disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"Pimpl\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args =\\n                                 [(Types.Lifetime\\n                                     { Types.kind = Types.ReErased });\\n                                   (Types.Type\\n                                      Types.Adt {\\n                                        def_id =\\n                                        { Types.index = (27, 20890);\\n                                          krate = \\\"openssl3\\\";\\n                                          path =\\n                                          [{ Types.data =\\n                                             (Types.TypeNs \\\"bio_st\\\");\\n                                             disambiguator = 0 }\\n                                            ]\\n                                          };\\n                                        generic_args = []; trait_refs = []})\\n                                   ];\\n                                 trait_refs =\\n                                 [{ Types.args = [];\\n                                    impl =\\n                                    Types.Builtin {\\n                                      trait =\\n                                      { Types.def_id =\\n                                        { Types.index = (2, 26413);\\n                                          krate = \\\"core\\\";\\n                                          path =\\n                                          [{ Types.data =\\n                                             (Types.TypeNs \\\"marker\\\");\\n                                             disambiguator = 0 };\\n                                            { Types.data =\\n                                              (Types.TypeNs \\\"Sized\\\");\\n                                              disambiguator = 0 }\\n                                            ]\\n                                          };\\n                                        generic_args =\\n                                        [(Types.Type\\n                                            Types.Adt {\\n                                              def_id =\\n                                              { Types.index = (27, 20890);\\n                                                krate = \\\"openssl3\\\";\\n                                                path =\\n                                                [{ Types.data =\\n                                                   (Types.TypeNs \\\"bio_st\\\");\\n                                                   disambiguator = 0 }\\n                                                  ]\\n                                                };\\n                                              generic_args = [];\\n                                              trait_refs = []})\\n                                          ]\\n                                        }};\\n                                    trait =\\n                                    { Types.def_id =\\n                                      { Types.index = (2, 26413);\\n                                        krate = \\\"core\\\";\\n                                        path =\\n                                        [{ Types.data =\\n                                           (Types.TypeNs \\\"marker\\\");\\n                                           disambiguator = 0 };\\n                                          { Types.data =\\n                                            (Types.TypeNs \\\"Sized\\\");\\n                                            disambiguator = 0 }\\n                                          ]\\n                                        };\\n                                      generic_args =\\n                                      [(Types.Type\\n                                          Types.Adt {\\n                                            def_id =\\n                                            { Types.index = (27, 20890);\\n                                              krate = \\\"openssl3\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs \\\"bio_st\\\");\\n                                                 disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args = [];\\n                                            trait_refs = []})\\n                                        ]\\n                                      }\\n                                    }\\n                                   ]},\\n                               false))\\n                           }\\n                          ];\\n                        bounds_impls = [];\\n                        fn_span =\\n                        { Types.filename =\\n                          (Types.Real\\n                             (Types.LocalPath\\n                                \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                          hi = { Types.col = \\\"32\\\"; line = \\\"67\\\" };\\n                          lo = { Types.col = \\\"20\\\"; line = \\\"67\\\" } };\\n                        from_hir_call = true;\\n                        fun' =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.GlobalName {\\n                            id =\\n                            { Types.index = (0, 644); krate = \\\"sandwich\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"support\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                                  disambiguator = 0 };\\n                                { Types.data = Types.Impl; disambiguator = 2\\n                                  };\\n                                { Types.data = (Types.ValueNs \\\"as_nonnull\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              }};\\n                          hir_id = None;\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath\\n                                  \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                            hi = { Types.col = \\\"30\\\"; line = \\\"67\\\" };\\n                            lo = { Types.col = \\\"20\\\"; line = \\\"67\\\" } };\\n                          ty =\\n                          (Types.Arrow\\n                             { Types.bound_vars =\\n                               [(Types.Region\\n                                   (Types.BrNamed\\n                                      ({ Types.index = (0, 1675);\\n                                         krate = \\\"sandwich\\\";\\n                                         path =\\n                                         [{ Types.data =\\n                                            (Types.TypeNs \\\"support\\\");\\n                                            disambiguator = 0 };\\n                                           { Types.data =\\n                                             (Types.TypeNs \\\"pimpl\\\");\\n                                             disambiguator = 0 };\\n                                           { Types.data = Types.Impl;\\n                                             disambiguator = 2 };\\n                                           { Types.data =\\n                                             (Types.ValueNs \\\"as_nonnull\\\");\\n                                             disambiguator = 0 };\\n                                           { Types.data =\\n                                             (Types.LifetimeNs \\\"'_\\\");\\n                                             disambiguator = 0 }\\n                                           ]\\n                                         },\\n                                       \\\"'_\\\")))\\n                                 ];\\n                               value =\\n                               { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                                 c_variadic = false;\\n                                 inputs =\\n                                 [(Types.Ref\\n                                     ({ Types.kind =\\n                                        (Types.ReBound\\n                                           (\\\"0\\\",\\n                                            { Types.kind =\\n                                              (Types.BrNamed\\n                                                 ({ Types.index = (0, 1675);\\n                                                    krate = \\\"sandwich\\\";\\n                                                    path =\\n                                                    [{ Types.data =\\n                                                       (Types.TypeNs\\n                                                          \\\"support\\\");\\n                                                       disambiguator = 0 };\\n                                                      { Types.data =\\n                                                        (Types.TypeNs \\\"pimpl\\\");\\n                                                        disambiguator = 0 };\\n                                                      { Types.data =\\n                                                        Types.Impl;\\n                                                        disambiguator = 2 };\\n                                                      { Types.data =\\n                                                        (Types.ValueNs\\n                                                           \\\"as_nonnull\\\");\\n                                                        disambiguator = 0 };\\n                                                      { Types.data =\\n                                                        (Types.LifetimeNs\\n                                                           \\\"'_\\\");\\n                                                        disambiguator = 0 }\\n                                                      ]\\n                                                    },\\n                                                  \\\"'_\\\"));\\n                                              var = \\\"0\\\" }))\\n                                        },\\n                                      Types.Adt {\\n                                        def_id =\\n                                        { Types.index = (0, 628);\\n                                          krate = \\\"sandwich\\\";\\n                                          path =\\n                                          [{ Types.data =\\n                                             (Types.TypeNs \\\"support\\\");\\n                                             disambiguator = 0 };\\n                                            { Types.data =\\n                                              (Types.TypeNs \\\"pimpl\\\");\\n                                              disambiguator = 0 };\\n                                            { Types.data =\\n                                              (Types.TypeNs \\\"Pimpl\\\");\\n                                              disambiguator = 0 }\\n                                            ]\\n                                          };\\n                                        generic_args =\\n                                        [(Types.Lifetime\\n                                            { Types.kind = Types.ReErased });\\n                                          (Types.Type\\n                                             Types.Adt {\\n                                               def_id =\\n                                               { Types.index = (27, 20890);\\n                                                 krate = \\\"openssl3\\\";\\n                                                 path =\\n                                                 [{ Types.data =\\n                                                    (Types.TypeNs \\\"bio_st\\\");\\n                                                    disambiguator = 0 }\\n                                                   ]\\n                                                 };\\n                                               generic_args = [];\\n                                               trait_refs = []})\\n                                          ];\\n                                        trait_refs =\\n                                        [{ Types.args = [];\\n                                           impl =\\n                                           Types.Builtin {\\n                                             trait =\\n                                             { Types.def_id =\\n                                               { Types.index = (2, 26413);\\n                                                 krate = \\\"core\\\";\\n                                                 path =\\n                                                 [{ Types.data =\\n                                                    (Types.TypeNs \\\"marker\\\");\\n                                                    disambiguator = 0 };\\n                                                   { Types.data =\\n                                                     (Types.TypeNs \\\"Sized\\\");\\n                                                     disambiguator = 0 }\\n                                                   ]\\n                                                 };\\n                                               generic_args =\\n                                               [(Types.Type\\n                                                   Types.Adt {\\n                                                     def_id =\\n                                                     { Types.index =\\n                                                       (27, 20890);\\n                                                       krate = \\\"openssl3\\\";\\n                                                       path =\\n                                                       [{ Types.data =\\n                                                          (Types.TypeNs\\n                                                             \\\"bio_st\\\");\\n                                                          disambiguator = 0 }\\n                                                         ]\\n                                                       };\\n                                                     generic_args = [];\\n                                                     trait_refs = []})\\n                                                 ]\\n                                               }};\\n                                           trait =\\n                                           { Types.def_id =\\n                                             { Types.index = (2, 26413);\\n                                               krate = \\\"core\\\";\\n                                               path =\\n                                               [{ Types.data =\\n                                                  (Types.TypeNs \\\"marker\\\");\\n                                                  disambiguator = 0 };\\n                                                 { Types.data =\\n                                                   (Types.TypeNs \\\"Sized\\\");\\n                                                   disambiguator = 0 }\\n                                                 ]\\n                                               };\\n                                             generic_args =\\n                                             [(Types.Type\\n                                                 Types.Adt {\\n                                                   def_id =\\n                                                   { Types.index =\\n                                                     (27, 20890);\\n                                                     krate = \\\"openssl3\\\";\\n                                                     path =\\n                                                     [{ Types.data =\\n                                                        (Types.TypeNs\\n                                                           \\\"bio_st\\\");\\n                                                        disambiguator = 0 }\\n                                                       ]\\n                                                     };\\n                                                   generic_args = [];\\n                                                   trait_refs = []})\\n                                               ]\\n                                             }\\n                                           }\\n                                          ]},\\n                                      false))\\n                                   ];\\n                                 output =\\n                                 Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (2, 2222); krate = \\\"core\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                        disambiguator = 0 };\\n                                       { Types.data =\\n                                         (Types.TypeNs \\\"non_null\\\");\\n                                         disambiguator = 0 };\\n                                       { Types.data =\\n                                         (Types.TypeNs \\\"NonNull\\\");\\n                                         disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args =\\n                                   [(Types.Type\\n                                       Types.Adt {\\n                                         def_id =\\n                                         { Types.index = (27, 20890);\\n                                           krate = \\\"openssl3\\\";\\n                                           path =\\n                                           [{ Types.data =\\n                                              (Types.TypeNs \\\"bio_st\\\");\\n                                              disambiguator = 0 }\\n                                             ]\\n                                           };\\n                                         generic_args = []; trait_refs = []})\\n                                     ];\\n                                   trait_refs = []};\\n                                 safety = Types.Safe }\\n                               })\\n                          };\\n                        generic_args =\\n                        [(Types.Lifetime { Types.kind = Types.ReErased });\\n                          (Types.Type\\n                             Types.Adt {\\n                               def_id =\\n                               { Types.index = (27, 20890);\\n                                 krate = \\\"openssl3\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                    disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args = []; trait_refs = []})\\n                          ];\\n                        trait = None;\\n                        ty =\\n                        (Types.Arrow\\n                           { Types.bound_vars =\\n                             [(Types.Region\\n                                 (Types.BrNamed\\n                                    ({ Types.index = (0, 1675);\\n                                       krate = \\\"sandwich\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.TypeNs \\\"support\\\");\\n                                          disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"pimpl\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data = Types.Impl;\\n                                           disambiguator = 2 };\\n                                         { Types.data =\\n                                           (Types.ValueNs \\\"as_nonnull\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.LifetimeNs \\\"'_\\\");\\n                                           disambiguator = 0 }\\n                                         ]\\n                                       },\\n                                     \\\"'_\\\")))\\n                               ];\\n                             value =\\n                             { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                               c_variadic = false;\\n                               inputs =\\n                               [(Types.Ref\\n                                   ({ Types.kind =\\n                                      (Types.ReBound\\n                                         (\\\"0\\\",\\n                                          { Types.kind =\\n                                            (Types.BrNamed\\n                                               ({ Types.index = (0, 1675);\\n                                                  krate = \\\"sandwich\\\";\\n                                                  path =\\n                                                  [{ Types.data =\\n                                                     (Types.TypeNs \\\"support\\\");\\n                                                     disambiguator = 0 };\\n                                                    { Types.data =\\n                                                      (Types.TypeNs \\\"pimpl\\\");\\n                                                      disambiguator = 0 };\\n                                                    { Types.data = Types.Impl;\\n                                                      disambiguator = 2 };\\n                                                    { Types.data =\\n                                                      (Types.ValueNs\\n                                                         \\\"as_nonnull\\\");\\n                                                      disambiguator = 0 };\\n                                                    { Types.data =\\n                                                      (Types.LifetimeNs \\\"'_\\\");\\n                                                      disambiguator = 0 }\\n                                                    ]\\n                                                  },\\n                                                \\\"'_\\\"));\\n                                            var = \\\"0\\\" }))\\n                                      },\\n                                    Types.Adt {\\n                                      def_id =\\n                                      { Types.index = (0, 628);\\n                                        krate = \\\"sandwich\\\";\\n                                        path =\\n                                        [{ Types.data =\\n                                           (Types.TypeNs \\\"support\\\");\\n                                           disambiguator = 0 };\\n                                          { Types.data =\\n                                            (Types.TypeNs \\\"pimpl\\\");\\n                                            disambiguator = 0 };\\n                                          { Types.data =\\n                                            (Types.TypeNs \\\"Pimpl\\\");\\n                                            disambiguator = 0 }\\n                                          ]\\n                                        };\\n                                      generic_args =\\n                                      [(Types.Lifetime\\n                                          { Types.kind = Types.ReErased });\\n                                        (Types.Type\\n                                           Types.Adt {\\n                                             def_id =\\n                                             { Types.index = (27, 20890);\\n                                               krate = \\\"openssl3\\\";\\n                                               path =\\n                                               [{ Types.data =\\n                                                  (Types.TypeNs \\\"bio_st\\\");\\n                                                  disambiguator = 0 }\\n                                                 ]\\n                                               };\\n                                             generic_args = [];\\n                                             trait_refs = []})\\n                                        ];\\n                                      trait_refs =\\n                                      [{ Types.args = [];\\n                                         impl =\\n                                         Types.Builtin {\\n                                           trait =\\n                                           { Types.def_id =\\n                                             { Types.index = (2, 26413);\\n                                               krate = \\\"core\\\";\\n                                               path =\\n                                               [{ Types.data =\\n                                                  (Types.TypeNs \\\"marker\\\");\\n                                                  disambiguator = 0 };\\n                                                 { Types.data =\\n                                                   (Types.TypeNs \\\"Sized\\\");\\n                                                   disambiguator = 0 }\\n                                                 ]\\n                                               };\\n                                             generic_args =\\n                                             [(Types.Type\\n                                                 Types.Adt {\\n                                                   def_id =\\n                                                   { Types.index =\\n                                                     (27, 20890);\\n                                                     krate = \\\"openssl3\\\";\\n                                                     path =\\n                                                     [{ Types.data =\\n                                                        (Types.TypeNs\\n                                                           \\\"bio_st\\\");\\n                                                        disambiguator = 0 }\\n                                                       ]\\n                                                     };\\n                                                   generic_args = [];\\n                                                   trait_refs = []})\\n                                               ]\\n                                             }};\\n                                         trait =\\n                                         { Types.def_id =\\n                                           { Types.index = (2, 26413);\\n                                             krate = \\\"core\\\";\\n                                             path =\\n                                             [{ Types.data =\\n                                                (Types.TypeNs \\\"marker\\\");\\n                                                disambiguator = 0 };\\n                                               { Types.data =\\n                                                 (Types.TypeNs \\\"Sized\\\");\\n                                                 disambiguator = 0 }\\n                                               ]\\n                                             };\\n                                           generic_args =\\n                                           [(Types.Type\\n                                               Types.Adt {\\n                                                 def_id =\\n                                                 { Types.index = (27, 20890);\\n                                                   krate = \\\"openssl3\\\";\\n                                                   path =\\n                                                   [{ Types.data =\\n                                                      (Types.TypeNs \\\"bio_st\\\");\\n                                                      disambiguator = 0 }\\n                                                     ]\\n                                                   };\\n                                                 generic_args = [];\\n                                                 trait_refs = []})\\n                                             ]\\n                                           }\\n                                         }\\n                                        ]},\\n                                    false))\\n                                 ];\\n                               output =\\n                               Types.Adt {\\n                                 def_id =\\n                                 { Types.index = (2, 2222); krate = \\\"core\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                                       disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"NonNull\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args =\\n                                 [(Types.Type\\n                                     Types.Adt {\\n                                       def_id =\\n                                       { Types.index = (27, 20890);\\n                                         krate = \\\"openssl3\\\";\\n                                         path =\\n                                         [{ Types.data =\\n                                            (Types.TypeNs \\\"bio_st\\\");\\n                                            disambiguator = 0 }\\n                                           ]\\n                                         };\\n                                       generic_args = []; trait_refs = []})\\n                                   ];\\n                                 trait_refs = []};\\n                               safety = Types.Safe }\\n                             })};\\n                      hir_id = (Some (\\\"168\\\", \\\"90\\\"));\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath\\n                              \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                        hi = { Types.col = \\\"32\\\"; line = \\\"67\\\" };\\n                        lo = { Types.col = \\\"16\\\"; line = \\\"67\\\" } };\\n                      ty =\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.index = (2, 2222); krate = \\\"core\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                              disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"NonNull\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args =\\n                        [(Types.Type\\n                            Types.Adt {\\n                              def_id =\\n                              { Types.index = (27, 20890);\\n                                krate = \\\"openssl3\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                   disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []; trait_refs = []})\\n                          ];\\n                        trait_refs = []}\\n                      }\\n                     ];\\n                   bounds_impls = [];\\n                   fn_span =\\n                   { Types.filename =\\n                     (Types.Real\\n                        (Types.LocalPath\\n                           \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                     hi = { Types.col = \\\"41\\\"; line = \\\"67\\\" };\\n                     lo = { Types.col = \\\"33\\\"; line = \\\"67\\\" } };\\n                   from_hir_call = true;\\n                   fun' =\\n                   { Types.attributes = [];\\n                     contents =\\n                     Types.GlobalName {\\n                       id =\\n                       { Types.index = (2, 2245); krate = \\\"core\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                            disambiguator = 0 };\\n                           { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                             disambiguator = 0 };\\n                           { Types.data = Types.Impl; disambiguator = 3 };\\n                           { Types.data = (Types.ValueNs \\\"as_ptr\\\");\\n                             disambiguator = 0 }\\n                           ]\\n                         }};\\n                     hir_id = None;\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath\\n                             \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                       hi = { Types.col = \\\"39\\\"; line = \\\"67\\\" };\\n                       lo = { Types.col = \\\"33\\\"; line = \\\"67\\\" } };\\n                     ty =\\n                     (Types.Arrow\\n                        { Types.bound_vars = [];\\n                          value =\\n                          { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                            c_variadic = false;\\n                            inputs =\\n                            [Types.Adt {\\n                               def_id =\\n                               { Types.index = (2, 2222); krate = \\\"core\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                    disambiguator = 0 };\\n                                   { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                                     disambiguator = 0 };\\n                                   { Types.data = (Types.TypeNs \\\"NonNull\\\");\\n                                     disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args =\\n                               [(Types.Type\\n                                   Types.Adt {\\n                                     def_id =\\n                                     { Types.index = (27, 20890);\\n                                       krate = \\\"openssl3\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.TypeNs \\\"bio_st\\\");\\n                                          disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     generic_args = []; trait_refs = []})\\n                                 ];\\n                               trait_refs = []}\\n                              ];\\n                            output =\\n                            (Types.RawPtr\\n                               (Types.Adt {\\n                                  def_id =\\n                                  { Types.index = (27, 20890);\\n                                    krate = \\\"openssl3\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                       disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args = []; trait_refs = []},\\n                                true));\\n                            safety = Types.Safe }\\n                          })\\n                     };\\n                   generic_args =\\n                   [(Types.Type\\n                       Types.Adt {\\n                         def_id =\\n                         { Types.index = (27, 20890); krate = \\\"openssl3\\\";\\n                           path =\\n                           [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                              disambiguator = 0 }\\n                             ]\\n                           };\\n                         generic_args = []; trait_refs = []})\\n                     ];\\n                   trait = None;\\n                   ty =\\n                   (Types.Arrow\\n                      { Types.bound_vars = [];\\n                        value =\\n                        { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                          c_variadic = false;\\n                          inputs =\\n                          [Types.Adt {\\n                             def_id =\\n                             { Types.index = (2, 2222); krate = \\\"core\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                                   disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"NonNull\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args =\\n                             [(Types.Type\\n                                 Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (27, 20890);\\n                                     krate = \\\"openssl3\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                        disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args = []; trait_refs = []})\\n                               ];\\n                             trait_refs = []}\\n                            ];\\n                          output =\\n                          (Types.RawPtr\\n                             (Types.Adt {\\n                                def_id =\\n                                { Types.index = (27, 20890);\\n                                  krate = \\\"openssl3\\\";\\n                                  path =\\n                                  [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  };\\n                                generic_args = []; trait_refs = []},\\n                              true));\\n                          safety = Types.Safe }\\n                        })};\\n                 hir_id = (Some (\\\"168\\\", \\\"88\\\"));\\n                 span =\\n                 { Types.filename =\\n                   (Types.Real\\n                      (Types.LocalPath\\n                         \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                   hi = { Types.col = \\\"41\\\"; line = \\\"67\\\" };\\n                   lo = { Types.col = \\\"16\\\"; line = \\\"67\\\" } };\\n                 ty =\\n                 (Types.RawPtr\\n                    (Types.Adt {\\n                       def_id =\\n                       { Types.index = (27, 20890); krate = \\\"openssl3\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                            disambiguator = 0 }\\n                           ]\\n                         };\\n                       generic_args = []; trait_refs = []},\\n                     true))\\n                 };\\n                { Types.attributes = [];\\n                  contents =\\n                  Types.Call {\\n                    args =\\n                    [{ Types.attributes = [];\\n                       contents =\\n                       Types.VarRef {\\n                         id =\\n                         { Types.id =\\n                           { Types.local_id = \\\"72\\\";\\n                             owner =\\n                             { Types.index = (0, 168); krate = \\\"sandwich\\\";\\n                               path =\\n                               [{ Types.data =\\n                                  (Types.TypeNs \\\"implementation\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data =\\n                                   (Types.TypeNs \\\"openssl3_impl\\\");\\n                                   disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"support\\\");\\n                                   disambiguator = 0 };\\n                                 { Types.data = (Types.ValueNs \\\"errstr\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               }\\n                             };\\n                           name = \\\"buffer_ptr\\\" }};\\n                       hir_id = (Some (\\\"168\\\", \\\"96\\\"));\\n                       span =\\n                       { Types.filename =\\n                         (Types.Real\\n                            (Types.LocalPath\\n                               \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                         hi = { Types.col = \\\"26\\\"; line = \\\"68\\\" };\\n                         lo = { Types.col = \\\"16\\\"; line = \\\"68\\\" } };\\n                       ty = (Types.RawPtr ((Types.Uint Types.U8), true)) }\\n                      ];\\n                    bounds_impls =\\n                    [{ Types.args = [];\\n                       impl =\\n                       Types.Builtin {\\n                         trait =\\n                         { Types.def_id =\\n                           { Types.index = (2, 26413); krate = \\\"core\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args =\\n                           [(Types.Type\\n                               Types.Adt {\\n                                 def_id =\\n                                 { Types.index = (2, 5307); krate = \\\"core\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"c_void\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args = []; trait_refs = []})\\n                             ]\\n                           }};\\n                       trait =\\n                       { Types.def_id =\\n                         { Types.index = (2, 26413); krate = \\\"core\\\";\\n                           path =\\n                           [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                              disambiguator = 0 };\\n                             { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                               disambiguator = 0 }\\n                             ]\\n                           };\\n                         generic_args =\\n                         [(Types.Type\\n                             Types.Adt {\\n                               def_id =\\n                               { Types.index = (2, 5307); krate = \\\"core\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                                    disambiguator = 0 };\\n                                   { Types.data = (Types.TypeNs \\\"c_void\\\");\\n                                     disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args = []; trait_refs = []})\\n                           ]\\n                         }\\n                       }\\n                      ];\\n                    fn_span =\\n                    { Types.filename =\\n                      (Types.Real\\n                         (Types.LocalPath\\n                            \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                      hi = { Types.col = \\\"33\\\"; line = \\\"68\\\" };\\n                      lo = { Types.col = \\\"27\\\"; line = \\\"68\\\" } };\\n                    from_hir_call = true;\\n                    fun' =\\n                    { Types.attributes = [];\\n                      contents =\\n                      Types.GlobalName {\\n                        id =\\n                        { Types.index = (2, 2500); krate = \\\"core\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"mut_ptr\\\");\\n                              disambiguator = 0 };\\n                            { Types.data = Types.Impl; disambiguator = 0 };\\n                            { Types.data = (Types.ValueNs \\\"cast\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          }};\\n                      hir_id = None;\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath\\n                              \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                        hi = { Types.col = \\\"31\\\"; line = \\\"68\\\" };\\n                        lo = { Types.col = \\\"27\\\"; line = \\\"68\\\" } };\\n                      ty =\\n                      (Types.Arrow\\n                         { Types.bound_vars = [];\\n                           value =\\n                           { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                             c_variadic = false;\\n                             inputs =\\n                             [(Types.RawPtr ((Types.Uint Types.U8), true))];\\n                             output =\\n                             (Types.RawPtr\\n                                (Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (2, 5307); krate = \\\"core\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                                        disambiguator = 0 };\\n                                       { Types.data = (Types.TypeNs \\\"c_void\\\");\\n                                         disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args = []; trait_refs = []},\\n                                 true));\\n                             safety = Types.Safe }\\n                           })\\n                      };\\n                    generic_args =\\n                    [(Types.Type (Types.Uint Types.U8));\\n                      (Types.Type\\n                         Types.Adt {\\n                           def_id =\\n                           { Types.index = (2, 5307); krate = \\\"core\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"c_void\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []; trait_refs = []})\\n                      ];\\n                    trait = None;\\n                    ty =\\n                    (Types.Arrow\\n                       { Types.bound_vars = [];\\n                         value =\\n                         { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                           c_variadic = false;\\n                           inputs =\\n                           [(Types.RawPtr ((Types.Uint Types.U8), true))];\\n                           output =\\n                           (Types.RawPtr\\n                              (Types.Adt {\\n                                 def_id =\\n                                 { Types.index = (2, 5307); krate = \\\"core\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"c_void\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args = []; trait_refs = []},\\n                               true));\\n                           safety = Types.Safe }\\n                         })};\\n                  hir_id = (Some (\\\"168\\\", \\\"94\\\"));\\n                  span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath\\n                          \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                    hi = { Types.col = \\\"33\\\"; line = \\\"68\\\" };\\n                    lo = { Types.col = \\\"16\\\"; line = \\\"68\\\" } };\\n                  ty =\\n                  (Types.RawPtr\\n                     (Types.Adt {\\n                        def_id =\\n                        { Types.index = (2, 5307); krate = \\\"core\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"c_void\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args = []; trait_refs = []},\\n                      true))\\n                  };\\n                { Types.attributes = [];\\n                  contents =\\n                  Types.NamedConst {args = [];\\n                    def_id =\\n                    { Types.index = (0, 169); krate = \\\"sandwich\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"implementation\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"openssl3_impl\\\");\\n                          disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"support\\\");\\n                          disambiguator = 0 };\\n                        { Types.data = (Types.ValueNs \\\"errstr\\\");\\n                          disambiguator = 0 };\\n                        { Types.data = (Types.ValueNs \\\"DEFAULT_BUFFER_LEN\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    impl = None; user_ty = None};\\n                  hir_id = (Some (\\\"168\\\", \\\"98\\\"));\\n                  span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath\\n                          \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                    hi = { Types.col = \\\"34\\\"; line = \\\"69\\\" };\\n                    lo = { Types.col = \\\"16\\\"; line = \\\"69\\\" } };\\n                  ty = (Types.Uint Types.Usize) };\\n                { Types.attributes = [];\\n                  contents =\\n                  Types.ValueTypeAscription {\\n                    source =\\n                    { Types.attributes = [];\\n                      contents =\\n                      Types.Use {\\n                        source =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.AddressOf {\\n                            arg =\\n                            { Types.attributes = [];\\n                              contents =\\n                              Types.Deref {\\n                                arg =\\n                                { Types.attributes = [];\\n                                  contents =\\n                                  Types.Borrow {\\n                                    arg =\\n                                    { Types.attributes = [];\\n                                      contents =\\n                                      Types.VarRef {\\n                                        id =\\n                                        { Types.id =\\n                                          { Types.local_id = \\\"81\\\";\\n                                            owner =\\n                                            { Types.index = (0, 168);\\n                                              krate = \\\"sandwich\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs\\n                                                    \\\"implementation\\\");\\n                                                 disambiguator = 0 };\\n                                                { Types.data =\\n                                                  (Types.TypeNs\\n                                                     \\\"openssl3_impl\\\");\\n                                                  disambiguator = 0 };\\n                                                { Types.data =\\n                                                  (Types.TypeNs \\\"support\\\");\\n                                                  disambiguator = 0 };\\n                                                { Types.data =\\n                                                  (Types.ValueNs \\\"errstr\\\");\\n                                                  disambiguator = 0 }\\n                                                ]\\n                                              }\\n                                            };\\n                                          name = \\\"readbytes\\\" }};\\n                                      hir_id = (Some (\\\"168\\\", \\\"102\\\"));\\n                                      span =\\n                                      { Types.filename =\\n                                        (Types.Real\\n                                           (Types.LocalPath\\n                                              \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                                        hi =\\n                                        { Types.col = \\\"30\\\"; line = \\\"70\\\" };\\n                                        lo =\\n                                        { Types.col = \\\"21\\\"; line = \\\"70\\\" } };\\n                                      ty = (Types.Uint Types.Usize) };\\n                                    borrow_kind =\\n                                    Types.Mut {kind = Types.Default}};\\n                                  hir_id = None;\\n                                  span =\\n                                  { Types.filename =\\n                                    (Types.Real\\n                                       (Types.LocalPath\\n                                          \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                                    hi = { Types.col = \\\"30\\\"; line = \\\"70\\\" };\\n                                    lo = { Types.col = \\\"16\\\"; line = \\\"70\\\" } };\\n                                  ty =\\n                                  (Types.Ref\\n                                     ({ Types.kind = Types.ReErased },\\n                                      (Types.Uint Types.Usize), true))\\n                                  }};\\n                              hir_id = None;\\n                              span =\\n                              { Types.filename =\\n                                (Types.Real\\n                                   (Types.LocalPath\\n                                      \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                                hi = { Types.col = \\\"30\\\"; line = \\\"70\\\" };\\n                                lo = { Types.col = \\\"16\\\"; line = \\\"70\\\" } };\\n                              ty = (Types.Uint Types.Usize) };\\n                            mutability = true};\\n                          hir_id = (Some (\\\"168\\\", \\\"101\\\"));\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath\\n                                  \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                            hi = { Types.col = \\\"30\\\"; line = \\\"70\\\" };\\n                            lo = { Types.col = \\\"16\\\"; line = \\\"70\\\" } };\\n                          ty =\\n                          (Types.RawPtr ((Types.Uint Types.Usize), true)) }};\\n                      hir_id = None;\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath\\n                              \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                        hi = { Types.col = \\\"40\\\"; line = \\\"70\\\" };\\n                        lo = { Types.col = \\\"16\\\"; line = \\\"70\\\" } };\\n                      ty = (Types.RawPtr ((Types.Uint Types.Usize), true)) };\\n                    user_ty =\\n                    (Some { Types.max_universe = \\\"0\\\";\\n                            value = (Types.Todo \\\"Ty(*mut ^0)\\\");\\n                            variables = [(Types.Ty (Types.General \\\"0\\\"))] })};\\n                  hir_id = (Some (\\\"168\\\", \\\"100\\\"));\\n                  span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath\\n                          \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                    hi = { Types.col = \\\"40\\\"; line = \\\"70\\\" };\\n                    lo = { Types.col = \\\"16\\\"; line = \\\"70\\\" } };\\n                  ty = (Types.RawPtr ((Types.Uint Types.Usize), true)) }\\n                ];\\n              bounds_impls = [];\\n              fn_span =\\n              { Types.filename =\\n                (Types.Real\\n                   (Types.LocalPath\\n                      \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                hi = { Types.col = \\\"13\\\"; line = \\\"71\\\" };\\n                lo = { Types.col = \\\"12\\\"; line = \\\"66\\\" } };\\n              from_hir_call = true;\\n              fun' =\\n              { Types.attributes = [];\\n                contents =\\n                Types.GlobalName {\\n                  id =\\n                  { Types.index = (27, 12350); krate = \\\"openssl3\\\";\\n                    path =\\n                    [{ Types.data = Types.ForeignMod; disambiguator = 539 };\\n                      { Types.data = (Types.ValueNs \\\"BIO_read_ex\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real\\n                     (Types.LocalPath\\n                        \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                  hi = { Types.col = \\\"33\\\"; line = \\\"66\\\" };\\n                  lo = { Types.col = \\\"12\\\"; line = \\\"66\\\" } };\\n                ty =\\n                (Types.Arrow\\n                   { Types.bound_vars = [];\\n                     value =\\n                     { Types.abi = Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                       c_variadic = false;\\n                       inputs =\\n                       [(Types.RawPtr\\n                           (Types.Adt {\\n                              def_id =\\n                              { Types.index = (27, 20890);\\n                                krate = \\\"openssl3\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                   disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []; trait_refs = []},\\n                            true));\\n                         (Types.RawPtr\\n                            (Types.Adt {\\n                               def_id =\\n                               { Types.index = (2, 5307); krate = \\\"core\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                                    disambiguator = 0 };\\n                                   { Types.data = (Types.TypeNs \\\"c_void\\\");\\n                                     disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args = []; trait_refs = []},\\n                             true));\\n                         (Types.Uint Types.Usize);\\n                         (Types.RawPtr ((Types.Uint Types.Usize), true))];\\n                       output = (Types.Int Types.I32); safety = Types.Unsafe\\n                       }\\n                     })\\n                };\\n              generic_args = []; trait = None;\\n              ty =\\n              (Types.Arrow\\n                 { Types.bound_vars = [];\\n                   value =\\n                   { Types.abi = Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                     c_variadic = false;\\n                     inputs =\\n                     [(Types.RawPtr\\n                         (Types.Adt {\\n                            def_id =\\n                            { Types.index = (27, 20890); krate = \\\"openssl3\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []; trait_refs = []},\\n                          true));\\n                       (Types.RawPtr\\n                          (Types.Adt {\\n                             def_id =\\n                             { Types.index = (2, 5307); krate = \\\"core\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"c_void\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []; trait_refs = []},\\n                           true));\\n                       (Types.Uint Types.Usize);\\n                       (Types.RawPtr ((Types.Uint Types.Usize), true))];\\n                     output = (Types.Int Types.I32); safety = Types.Unsafe }\\n                   })};\\n            hir_id = (Some (\\\"168\\\", \\\"84\\\"));\\n            span =\\n            { Types.filename =\\n              (Types.Real\\n                 (Types.LocalPath\\n                    \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n              hi = { Types.col = \\\"13\\\"; line = \\\"71\\\" };\\n              lo = { Types.col = \\\"12\\\"; line = \\\"66\\\" } };\\n            ty = (Types.Int Types.I32) });\\n    region_scope = { Types.data = Types.Node; id = \\\"106\\\" };\\n    safety_mode = Types.ExplicitUnsafe;\\n    span =\\n    { Types.filename =\\n      (Types.Real\\n         (Types.LocalPath \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n      hi = { Types.col = \\\"9\\\"; line = \\\"72\\\" };\\n      lo = { Types.col = \\\"18\\\"; line = \\\"65\\\" } };\\n    stmts = []; targeted_by_break = false};\\n  hir_id = (Some (\\\"168\\\", \\\"83\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real\\n       (Types.LocalPath \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n    hi = { Types.col = \\\"9\\\"; line = \\\"72\\\" };\\n    lo = { Types.col = \\\"18\\\"; line = \\\"65\\\" } };\\n  ty = (Types.Int Types.I32) }\",\n                                        )\n                                    };\n                                    {\n                                        let _: tuple0 = {\n                                            (if core::cmp::PartialEq::eq(ret, 0) {\n                                                rust_primitives::hax::never_to_any({ (break (Tuple0)) })\n                                            })\n                                        };\n                                        {\n                                            let _: tuple0 = {\n                                                (if core::cmp::PartialEq::eq(readbytes, 0) {\n                                                    rust_primitives::hax::never_to_any({ (break (Tuple0)) })\n                                                })\n                                            };\n                                            {\n                                                let _: tuple0 = {\n                                                    (size = core::ops::arith::Add::add(size, readbytes))\n                                                };\n                                                {\n                                                    let _: tuple0 = {\n                                                        (if core::cmp::PartialOrd::lt(\n                                                            readbytes,\n                                                            sandwich::implementation::openssl3_impl::support::errstr__DEFAULT_BUFFER_LEN,\n                                                        ) {\n                                                            rust_primitives::hax::never_to_any({ (break (Tuple0)) })\n                                                        })\n                                                    };\n                                                    {\n                                                        let current_position: int = {\n                                                            alloc::vec::impl_1__len::<\n                                                                int,\n                                                                alloc::alloc::t_Global,\n                                                            >(&(buffer))\n                                                        };\n                                                        (match (core::num::impl__usize__checked_add(\n                                                            current_position,\n                                                            sandwich::implementation::openssl3_impl::support::errstr__DEFAULT_BUFFER_LEN,\n                                                        )) {\n                                                            core::option::Option_Some(new_size) => {\n                                                                let _: tuple0 = {\n                                                                    alloc::vec::impl_2__resize::<\n                                                                        int,\n                                                                        alloc::alloc::t_Global,\n                                                                    >(&mut (buffer), new_size, 0)\n                                                                };\n                                                                {\n                                                                    let _: tuple0 = {\n                                                                        (buffer_ptr = rust_primitives::hax::failure(\n                                                                            \"(AST import) Unsafe blocks are not allowed.\",\n                                                                            \"{ Types.attributes = [];\\n  contents =\\n  Types.Block {\\n    expr =\\n    (Some { Types.attributes = [];\\n            contents =\\n            Types.Call {\\n              args =\\n              [{ Types.attributes = [];\\n                 contents =\\n                 Types.Call {\\n                   args =\\n                   [{ Types.attributes = [];\\n                      contents =\\n                      Types.Borrow {\\n                        arg =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.VarRef {\\n                            id =\\n                            { Types.id =\\n                              { Types.local_id = \\\"65\\\";\\n                                owner =\\n                                { Types.index = (0, 168); krate = \\\"sandwich\\\";\\n                                  path =\\n                                  [{ Types.data =\\n                                     (Types.TypeNs \\\"implementation\\\");\\n                                     disambiguator = 0 };\\n                                    { Types.data =\\n                                      (Types.TypeNs \\\"openssl3_impl\\\");\\n                                      disambiguator = 0 };\\n                                    { Types.data = (Types.TypeNs \\\"support\\\");\\n                                      disambiguator = 0 };\\n                                    { Types.data = (Types.ValueNs \\\"errstr\\\");\\n                                      disambiguator = 0 }\\n                                    ]\\n                                  }\\n                                };\\n                              name = \\\"buffer\\\" }};\\n                          hir_id = None;\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath\\n                                  \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                            hi = { Types.col = \\\"36\\\"; line = \\\"88\\\" };\\n                            lo = { Types.col = \\\"30\\\"; line = \\\"88\\\" } };\\n                          ty =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.index = (5, 7215); krate = \\\"alloc\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"vec\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"Vec\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args =\\n                            [(Types.Type (Types.Uint Types.U8));\\n                              (Types.Type\\n                                 Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (5, 7532);\\n                                     krate = \\\"alloc\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"alloc\\\");\\n                                        disambiguator = 0 };\\n                                       { Types.data = (Types.TypeNs \\\"Global\\\");\\n                                         disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args = []; trait_refs = []})\\n                              ];\\n                            trait_refs =\\n                            [{ Types.args = [];\\n                               impl =\\n                               Types.Builtin {\\n                                 trait =\\n                                 { Types.def_id =\\n                                   { Types.index = (2, 26413);\\n                                     krate = \\\"core\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                        disambiguator = 0 };\\n                                       { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                         disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args =\\n                                   [(Types.Type (Types.Uint Types.U8))] }};\\n                               trait =\\n                               { Types.def_id =\\n                                 { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args =\\n                                 [(Types.Type (Types.Uint Types.U8))] }\\n                               };\\n                              { Types.args = [];\\n                                impl =\\n                                Types.Builtin {\\n                                  trait =\\n                                  { Types.def_id =\\n                                    { Types.index = (2, 26413);\\n                                      krate = \\\"core\\\";\\n                                      path =\\n                                      [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                         disambiguator = 0 };\\n                                        { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                          disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args =\\n                                    [(Types.Type\\n                                        Types.Adt {\\n                                          def_id =\\n                                          { Types.index = (5, 7532);\\n                                            krate = \\\"alloc\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs \\\"alloc\\\");\\n                                               disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"Global\\\");\\n                                                disambiguator = 0 }\\n                                              ]\\n                                            };\\n                                          generic_args = []; trait_refs = []})\\n                                      ]\\n                                    }};\\n                                trait =\\n                                { Types.def_id =\\n                                  { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                        disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args =\\n                                  [(Types.Type\\n                                      Types.Adt {\\n                                        def_id =\\n                                        { Types.index = (5, 7532);\\n                                          krate = \\\"alloc\\\";\\n                                          path =\\n                                          [{ Types.data =\\n                                             (Types.TypeNs \\\"alloc\\\");\\n                                             disambiguator = 0 };\\n                                            { Types.data =\\n                                              (Types.TypeNs \\\"Global\\\");\\n                                              disambiguator = 0 }\\n                                            ]\\n                                          };\\n                                        generic_args = []; trait_refs = []})\\n                                    ]\\n                                  }\\n                                };\\n                              { Types.args = [];\\n                                impl =\\n                                Types.Concrete {generics = [];\\n                                  id =\\n                                  { Types.index = (5, 118); krate = \\\"alloc\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"alloc\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data = Types.Impl;\\n                                        disambiguator = 1 }\\n                                      ]\\n                                    }};\\n                                trait =\\n                                { Types.def_id =\\n                                  { Types.index = (2, 14289); krate = \\\"core\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"alloc\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data =\\n                                        (Types.TypeNs \\\"Allocator\\\");\\n                                        disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args =\\n                                  [(Types.Type\\n                                      Types.Adt {\\n                                        def_id =\\n                                        { Types.index = (5, 7532);\\n                                          krate = \\\"alloc\\\";\\n                                          path =\\n                                          [{ Types.data =\\n                                             (Types.TypeNs \\\"alloc\\\");\\n                                             disambiguator = 0 };\\n                                            { Types.data =\\n                                              (Types.TypeNs \\\"Global\\\");\\n                                              disambiguator = 0 }\\n                                            ]\\n                                          };\\n                                        generic_args = []; trait_refs = []})\\n                                    ]\\n                                  }\\n                                }\\n                              ]}\\n                          };\\n                        borrow_kind = Types.Mut {kind = Types.TwoPhaseBorrow}};\\n                      hir_id = (Some (\\\"168\\\", \\\"186\\\"));\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath\\n                              \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                        hi = { Types.col = \\\"36\\\"; line = \\\"88\\\" };\\n                        lo = { Types.col = \\\"30\\\"; line = \\\"88\\\" } };\\n                      ty =\\n                      (Types.Ref\\n                         ({ Types.kind = Types.ReErased },\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.index = (5, 7215); krate = \\\"alloc\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"vec\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"Vec\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args =\\n                            [(Types.Type (Types.Uint Types.U8));\\n                              (Types.Type\\n                                 Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (5, 7532);\\n                                     krate = \\\"alloc\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"alloc\\\");\\n                                        disambiguator = 0 };\\n                                       { Types.data = (Types.TypeNs \\\"Global\\\");\\n                                         disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args = []; trait_refs = []})\\n                              ];\\n                            trait_refs =\\n                            [{ Types.args = [];\\n                               impl =\\n                               Types.Builtin {\\n                                 trait =\\n                                 { Types.def_id =\\n                                   { Types.index = (2, 26413);\\n                                     krate = \\\"core\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                        disambiguator = 0 };\\n                                       { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                         disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args =\\n                                   [(Types.Type (Types.Uint Types.U8))] }};\\n                               trait =\\n                               { Types.def_id =\\n                                 { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args =\\n                                 [(Types.Type (Types.Uint Types.U8))] }\\n                               };\\n                              { Types.args = [];\\n                                impl =\\n                                Types.Builtin {\\n                                  trait =\\n                                  { Types.def_id =\\n                                    { Types.index = (2, 26413);\\n                                      krate = \\\"core\\\";\\n                                      path =\\n                                      [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                         disambiguator = 0 };\\n                                        { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                          disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args =\\n                                    [(Types.Type\\n                                        Types.Adt {\\n                                          def_id =\\n                                          { Types.index = (5, 7532);\\n                                            krate = \\\"alloc\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs \\\"alloc\\\");\\n                                               disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"Global\\\");\\n                                                disambiguator = 0 }\\n                                              ]\\n                                            };\\n                                          generic_args = []; trait_refs = []})\\n                                      ]\\n                                    }};\\n                                trait =\\n                                { Types.def_id =\\n                                  { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                        disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args =\\n                                  [(Types.Type\\n                                      Types.Adt {\\n                                        def_id =\\n                                        { Types.index = (5, 7532);\\n                                          krate = \\\"alloc\\\";\\n                                          path =\\n                                          [{ Types.data =\\n                                             (Types.TypeNs \\\"alloc\\\");\\n                                             disambiguator = 0 };\\n                                            { Types.data =\\n                                              (Types.TypeNs \\\"Global\\\");\\n                                              disambiguator = 0 }\\n                                            ]\\n                                          };\\n                                        generic_args = []; trait_refs = []})\\n                                    ]\\n                                  }\\n                                };\\n                              { Types.args = [];\\n                                impl =\\n                                Types.Concrete {generics = [];\\n                                  id =\\n                                  { Types.index = (5, 118); krate = \\\"alloc\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"alloc\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data = Types.Impl;\\n                                        disambiguator = 1 }\\n                                      ]\\n                                    }};\\n                                trait =\\n                                { Types.def_id =\\n                                  { Types.index = (2, 14289); krate = \\\"core\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"alloc\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data =\\n                                        (Types.TypeNs \\\"Allocator\\\");\\n                                        disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args =\\n                                  [(Types.Type\\n                                      Types.Adt {\\n                                        def_id =\\n                                        { Types.index = (5, 7532);\\n                                          krate = \\\"alloc\\\";\\n                                          path =\\n                                          [{ Types.data =\\n                                             (Types.TypeNs \\\"alloc\\\");\\n                                             disambiguator = 0 };\\n                                            { Types.data =\\n                                              (Types.TypeNs \\\"Global\\\");\\n                                              disambiguator = 0 }\\n                                            ]\\n                                          };\\n                                        generic_args = []; trait_refs = []})\\n                                    ]\\n                                  }\\n                                }\\n                              ]},\\n                          true))\\n                      }\\n                     ];\\n                   bounds_impls = [];\\n                   fn_span =\\n                   { Types.filename =\\n                     (Types.Real\\n                        (Types.LocalPath\\n                           \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                     hi = { Types.col = \\\"49\\\"; line = \\\"88\\\" };\\n                     lo = { Types.col = \\\"37\\\"; line = \\\"88\\\" } };\\n                   from_hir_call = true;\\n                   fun' =\\n                   { Types.attributes = [];\\n                     contents =\\n                     Types.GlobalName {\\n                       id =\\n                       { Types.index = (5, 7249); krate = \\\"alloc\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"vec\\\");\\n                            disambiguator = 0 };\\n                           { Types.data = Types.Impl; disambiguator = 1 };\\n                           { Types.data = (Types.ValueNs \\\"as_mut_ptr\\\");\\n                             disambiguator = 0 }\\n                           ]\\n                         }};\\n                     hir_id = None;\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath\\n                             \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                       hi = { Types.col = \\\"47\\\"; line = \\\"88\\\" };\\n                       lo = { Types.col = \\\"37\\\"; line = \\\"88\\\" } };\\n                     ty =\\n                     (Types.Arrow\\n                        { Types.bound_vars =\\n                          [(Types.Region\\n                              (Types.BrNamed\\n                                 ({ Types.index = (5, 9884); krate = \\\"alloc\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"vec\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data = Types.Impl;\\n                                        disambiguator = 1 };\\n                                      { Types.data =\\n                                        (Types.ValueNs \\\"as_mut_ptr\\\");\\n                                        disambiguator = 0 };\\n                                      { Types.data = (Types.LifetimeNs \\\"'_\\\");\\n                                        disambiguator = 0 }\\n                                      ]\\n                                    },\\n                                  \\\"'_\\\")))\\n                            ];\\n                          value =\\n                          { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                            c_variadic = false;\\n                            inputs =\\n                            [(Types.Ref\\n                                ({ Types.kind =\\n                                   (Types.ReBound\\n                                      (\\\"0\\\",\\n                                       { Types.kind =\\n                                         (Types.BrNamed\\n                                            ({ Types.index = (5, 9884);\\n                                               krate = \\\"alloc\\\";\\n                                               path =\\n                                               [{ Types.data =\\n                                                  (Types.TypeNs \\\"vec\\\");\\n                                                  disambiguator = 0 };\\n                                                 { Types.data = Types.Impl;\\n                                                   disambiguator = 1 };\\n                                                 { Types.data =\\n                                                   (Types.ValueNs\\n                                                      \\\"as_mut_ptr\\\");\\n                                                   disambiguator = 0 };\\n                                                 { Types.data =\\n                                                   (Types.LifetimeNs \\\"'_\\\");\\n                                                   disambiguator = 0 }\\n                                                 ]\\n                                               },\\n                                             \\\"'_\\\"));\\n                                         var = \\\"0\\\" }))\\n                                   },\\n                                 Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (5, 7215);\\n                                     krate = \\\"alloc\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"vec\\\");\\n                                        disambiguator = 0 };\\n                                       { Types.data = (Types.TypeNs \\\"Vec\\\");\\n                                         disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args =\\n                                   [(Types.Type (Types.Uint Types.U8));\\n                                     (Types.Type\\n                                        Types.Adt {\\n                                          def_id =\\n                                          { Types.index = (5, 7532);\\n                                            krate = \\\"alloc\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs \\\"alloc\\\");\\n                                               disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"Global\\\");\\n                                                disambiguator = 0 }\\n                                              ]\\n                                            };\\n                                          generic_args = []; trait_refs = []})\\n                                     ];\\n                                   trait_refs =\\n                                   [{ Types.args = [];\\n                                      impl =\\n                                      Types.Builtin {\\n                                        trait =\\n                                        { Types.def_id =\\n                                          { Types.index = (2, 26413);\\n                                            krate = \\\"core\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs \\\"marker\\\");\\n                                               disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"Sized\\\");\\n                                                disambiguator = 0 }\\n                                              ]\\n                                            };\\n                                          generic_args =\\n                                          [(Types.Type (Types.Uint Types.U8))\\n                                            ]\\n                                          }};\\n                                      trait =\\n                                      { Types.def_id =\\n                                        { Types.index = (2, 26413);\\n                                          krate = \\\"core\\\";\\n                                          path =\\n                                          [{ Types.data =\\n                                             (Types.TypeNs \\\"marker\\\");\\n                                             disambiguator = 0 };\\n                                            { Types.data =\\n                                              (Types.TypeNs \\\"Sized\\\");\\n                                              disambiguator = 0 }\\n                                            ]\\n                                          };\\n                                        generic_args =\\n                                        [(Types.Type (Types.Uint Types.U8))]\\n                                        }\\n                                      };\\n                                     { Types.args = [];\\n                                       impl =\\n                                       Types.Builtin {\\n                                         trait =\\n                                         { Types.def_id =\\n                                           { Types.index = (2, 26413);\\n                                             krate = \\\"core\\\";\\n                                             path =\\n                                             [{ Types.data =\\n                                                (Types.TypeNs \\\"marker\\\");\\n                                                disambiguator = 0 };\\n                                               { Types.data =\\n                                                 (Types.TypeNs \\\"Sized\\\");\\n                                                 disambiguator = 0 }\\n                                               ]\\n                                             };\\n                                           generic_args =\\n                                           [(Types.Type\\n                                               Types.Adt {\\n                                                 def_id =\\n                                                 { Types.index = (5, 7532);\\n                                                   krate = \\\"alloc\\\";\\n                                                   path =\\n                                                   [{ Types.data =\\n                                                      (Types.TypeNs \\\"alloc\\\");\\n                                                      disambiguator = 0 };\\n                                                     { Types.data =\\n                                                       (Types.TypeNs \\\"Global\\\");\\n                                                       disambiguator = 0 }\\n                                                     ]\\n                                                   };\\n                                                 generic_args = [];\\n                                                 trait_refs = []})\\n                                             ]\\n                                           }};\\n                                       trait =\\n                                       { Types.def_id =\\n                                         { Types.index = (2, 26413);\\n                                           krate = \\\"core\\\";\\n                                           path =\\n                                           [{ Types.data =\\n                                              (Types.TypeNs \\\"marker\\\");\\n                                              disambiguator = 0 };\\n                                             { Types.data =\\n                                               (Types.TypeNs \\\"Sized\\\");\\n                                               disambiguator = 0 }\\n                                             ]\\n                                           };\\n                                         generic_args =\\n                                         [(Types.Type\\n                                             Types.Adt {\\n                                               def_id =\\n                                               { Types.index = (5, 7532);\\n                                                 krate = \\\"alloc\\\";\\n                                                 path =\\n                                                 [{ Types.data =\\n                                                    (Types.TypeNs \\\"alloc\\\");\\n                                                    disambiguator = 0 };\\n                                                   { Types.data =\\n                                                     (Types.TypeNs \\\"Global\\\");\\n                                                     disambiguator = 0 }\\n                                                   ]\\n                                                 };\\n                                               generic_args = [];\\n                                               trait_refs = []})\\n                                           ]\\n                                         }\\n                                       };\\n                                     { Types.args = [];\\n                                       impl =\\n                                       Types.Concrete {generics = [];\\n                                         id =\\n                                         { Types.index = (5, 118);\\n                                           krate = \\\"alloc\\\";\\n                                           path =\\n                                           [{ Types.data =\\n                                              (Types.TypeNs \\\"alloc\\\");\\n                                              disambiguator = 0 };\\n                                             { Types.data = Types.Impl;\\n                                               disambiguator = 1 }\\n                                             ]\\n                                           }};\\n                                       trait =\\n                                       { Types.def_id =\\n                                         { Types.index = (2, 14289);\\n                                           krate = \\\"core\\\";\\n                                           path =\\n                                           [{ Types.data =\\n                                              (Types.TypeNs \\\"alloc\\\");\\n                                              disambiguator = 0 };\\n                                             { Types.data =\\n                                               (Types.TypeNs \\\"Allocator\\\");\\n                                               disambiguator = 0 }\\n                                             ]\\n                                           };\\n                                         generic_args =\\n                                         [(Types.Type\\n                                             Types.Adt {\\n                                               def_id =\\n                                               { Types.index = (5, 7532);\\n                                                 krate = \\\"alloc\\\";\\n                                                 path =\\n                                                 [{ Types.data =\\n                                                    (Types.TypeNs \\\"alloc\\\");\\n                                                    disambiguator = 0 };\\n                                                   { Types.data =\\n                                                     (Types.TypeNs \\\"Global\\\");\\n                                                     disambiguator = 0 }\\n                                                   ]\\n                                                 };\\n                                               generic_args = [];\\n                                               trait_refs = []})\\n                                           ]\\n                                         }\\n                                       }\\n                                     ]},\\n                                 true))\\n                              ];\\n                            output =\\n                            (Types.RawPtr ((Types.Uint Types.U8), true));\\n                            safety = Types.Safe }\\n                          })\\n                     };\\n                   generic_args =\\n                   [(Types.Type (Types.Uint Types.U8));\\n                     (Types.Type\\n                        Types.Adt {\\n                          def_id =\\n                          { Types.index = (5, 7532); krate = \\\"alloc\\\";\\n                            path =\\n                            [{ Types.data = (Types.TypeNs \\\"alloc\\\");\\n                               disambiguator = 0 };\\n                              { Types.data = (Types.TypeNs \\\"Global\\\");\\n                                disambiguator = 0 }\\n                              ]\\n                            };\\n                          generic_args = []; trait_refs = []})\\n                     ];\\n                   trait = None;\\n                   ty =\\n                   (Types.Arrow\\n                      { Types.bound_vars =\\n                        [(Types.Region\\n                            (Types.BrNamed\\n                               ({ Types.index = (5, 9884); krate = \\\"alloc\\\";\\n                                  path =\\n                                  [{ Types.data = (Types.TypeNs \\\"vec\\\");\\n                                     disambiguator = 0 };\\n                                    { Types.data = Types.Impl;\\n                                      disambiguator = 1 };\\n                                    { Types.data =\\n                                      (Types.ValueNs \\\"as_mut_ptr\\\");\\n                                      disambiguator = 0 };\\n                                    { Types.data = (Types.LifetimeNs \\\"'_\\\");\\n                                      disambiguator = 0 }\\n                                    ]\\n                                  },\\n                                \\\"'_\\\")))\\n                          ];\\n                        value =\\n                        { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                          c_variadic = false;\\n                          inputs =\\n                          [(Types.Ref\\n                              ({ Types.kind =\\n                                 (Types.ReBound\\n                                    (\\\"0\\\",\\n                                     { Types.kind =\\n                                       (Types.BrNamed\\n                                          ({ Types.index = (5, 9884);\\n                                             krate = \\\"alloc\\\";\\n                                             path =\\n                                             [{ Types.data =\\n                                                (Types.TypeNs \\\"vec\\\");\\n                                                disambiguator = 0 };\\n                                               { Types.data = Types.Impl;\\n                                                 disambiguator = 1 };\\n                                               { Types.data =\\n                                                 (Types.ValueNs \\\"as_mut_ptr\\\");\\n                                                 disambiguator = 0 };\\n                                               { Types.data =\\n                                                 (Types.LifetimeNs \\\"'_\\\");\\n                                                 disambiguator = 0 }\\n                                               ]\\n                                             },\\n                                           \\\"'_\\\"));\\n                                       var = \\\"0\\\" }))\\n                                 },\\n                               Types.Adt {\\n                                 def_id =\\n                                 { Types.index = (5, 7215); krate = \\\"alloc\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"vec\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"Vec\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args =\\n                                 [(Types.Type (Types.Uint Types.U8));\\n                                   (Types.Type\\n                                      Types.Adt {\\n                                        def_id =\\n                                        { Types.index = (5, 7532);\\n                                          krate = \\\"alloc\\\";\\n                                          path =\\n                                          [{ Types.data =\\n                                             (Types.TypeNs \\\"alloc\\\");\\n                                             disambiguator = 0 };\\n                                            { Types.data =\\n                                              (Types.TypeNs \\\"Global\\\");\\n                                              disambiguator = 0 }\\n                                            ]\\n                                          };\\n                                        generic_args = []; trait_refs = []})\\n                                   ];\\n                                 trait_refs =\\n                                 [{ Types.args = [];\\n                                    impl =\\n                                    Types.Builtin {\\n                                      trait =\\n                                      { Types.def_id =\\n                                        { Types.index = (2, 26413);\\n                                          krate = \\\"core\\\";\\n                                          path =\\n                                          [{ Types.data =\\n                                             (Types.TypeNs \\\"marker\\\");\\n                                             disambiguator = 0 };\\n                                            { Types.data =\\n                                              (Types.TypeNs \\\"Sized\\\");\\n                                              disambiguator = 0 }\\n                                            ]\\n                                          };\\n                                        generic_args =\\n                                        [(Types.Type (Types.Uint Types.U8))]\\n                                        }};\\n                                    trait =\\n                                    { Types.def_id =\\n                                      { Types.index = (2, 26413);\\n                                        krate = \\\"core\\\";\\n                                        path =\\n                                        [{ Types.data =\\n                                           (Types.TypeNs \\\"marker\\\");\\n                                           disambiguator = 0 };\\n                                          { Types.data =\\n                                            (Types.TypeNs \\\"Sized\\\");\\n                                            disambiguator = 0 }\\n                                          ]\\n                                        };\\n                                      generic_args =\\n                                      [(Types.Type (Types.Uint Types.U8))] }\\n                                    };\\n                                   { Types.args = [];\\n                                     impl =\\n                                     Types.Builtin {\\n                                       trait =\\n                                       { Types.def_id =\\n                                         { Types.index = (2, 26413);\\n                                           krate = \\\"core\\\";\\n                                           path =\\n                                           [{ Types.data =\\n                                              (Types.TypeNs \\\"marker\\\");\\n                                              disambiguator = 0 };\\n                                             { Types.data =\\n                                               (Types.TypeNs \\\"Sized\\\");\\n                                               disambiguator = 0 }\\n                                             ]\\n                                           };\\n                                         generic_args =\\n                                         [(Types.Type\\n                                             Types.Adt {\\n                                               def_id =\\n                                               { Types.index = (5, 7532);\\n                                                 krate = \\\"alloc\\\";\\n                                                 path =\\n                                                 [{ Types.data =\\n                                                    (Types.TypeNs \\\"alloc\\\");\\n                                                    disambiguator = 0 };\\n                                                   { Types.data =\\n                                                     (Types.TypeNs \\\"Global\\\");\\n                                                     disambiguator = 0 }\\n                                                   ]\\n                                                 };\\n                                               generic_args = [];\\n                                               trait_refs = []})\\n                                           ]\\n                                         }};\\n                                     trait =\\n                                     { Types.def_id =\\n                                       { Types.index = (2, 26413);\\n                                         krate = \\\"core\\\";\\n                                         path =\\n                                         [{ Types.data =\\n                                            (Types.TypeNs \\\"marker\\\");\\n                                            disambiguator = 0 };\\n                                           { Types.data =\\n                                             (Types.TypeNs \\\"Sized\\\");\\n                                             disambiguator = 0 }\\n                                           ]\\n                                         };\\n                                       generic_args =\\n                                       [(Types.Type\\n                                           Types.Adt {\\n                                             def_id =\\n                                             { Types.index = (5, 7532);\\n                                               krate = \\\"alloc\\\";\\n                                               path =\\n                                               [{ Types.data =\\n                                                  (Types.TypeNs \\\"alloc\\\");\\n                                                  disambiguator = 0 };\\n                                                 { Types.data =\\n                                                   (Types.TypeNs \\\"Global\\\");\\n                                                   disambiguator = 0 }\\n                                                 ]\\n                                               };\\n                                             generic_args = [];\\n                                             trait_refs = []})\\n                                         ]\\n                                       }\\n                                     };\\n                                   { Types.args = [];\\n                                     impl =\\n                                     Types.Concrete {generics = [];\\n                                       id =\\n                                       { Types.index = (5, 118);\\n                                         krate = \\\"alloc\\\";\\n                                         path =\\n                                         [{ Types.data =\\n                                            (Types.TypeNs \\\"alloc\\\");\\n                                            disambiguator = 0 };\\n                                           { Types.data = Types.Impl;\\n                                             disambiguator = 1 }\\n                                           ]\\n                                         }};\\n                                     trait =\\n                                     { Types.def_id =\\n                                       { Types.index = (2, 14289);\\n                                         krate = \\\"core\\\";\\n                                         path =\\n                                         [{ Types.data =\\n                                            (Types.TypeNs \\\"alloc\\\");\\n                                            disambiguator = 0 };\\n                                           { Types.data =\\n                                             (Types.TypeNs \\\"Allocator\\\");\\n                                             disambiguator = 0 }\\n                                           ]\\n                                         };\\n                                       generic_args =\\n                                       [(Types.Type\\n                                           Types.Adt {\\n                                             def_id =\\n                                             { Types.index = (5, 7532);\\n                                               krate = \\\"alloc\\\";\\n                                               path =\\n                                               [{ Types.data =\\n                                                  (Types.TypeNs \\\"alloc\\\");\\n                                                  disambiguator = 0 };\\n                                                 { Types.data =\\n                                                   (Types.TypeNs \\\"Global\\\");\\n                                                   disambiguator = 0 }\\n                                                 ]\\n                                               };\\n                                             generic_args = [];\\n                                             trait_refs = []})\\n                                         ]\\n                                       }\\n                                     }\\n                                   ]},\\n                               true))\\n                            ];\\n                          output =\\n                          (Types.RawPtr ((Types.Uint Types.U8), true));\\n                          safety = Types.Safe }\\n                        })};\\n                 hir_id = (Some (\\\"168\\\", \\\"184\\\"));\\n                 span =\\n                 { Types.filename =\\n                   (Types.Real\\n                      (Types.LocalPath\\n                         \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                   hi = { Types.col = \\\"49\\\"; line = \\\"88\\\" };\\n                   lo = { Types.col = \\\"30\\\"; line = \\\"88\\\" } };\\n                 ty = (Types.RawPtr ((Types.Uint Types.U8), true)) };\\n                { Types.attributes = [];\\n                  contents =\\n                  Types.VarRef {\\n                    id =\\n                    { Types.id =\\n                      { Types.local_id = \\\"155\\\";\\n                        owner =\\n                        { Types.index = (0, 168); krate = \\\"sandwich\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"implementation\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"openssl3_impl\\\");\\n                              disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"support\\\");\\n                              disambiguator = 0 };\\n                            { Types.data = (Types.ValueNs \\\"errstr\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          }\\n                        };\\n                      name = \\\"current_position\\\" }};\\n                  hir_id = (Some (\\\"168\\\", \\\"188\\\"));\\n                  span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath\\n                          \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                    hi = { Types.col = \\\"70\\\"; line = \\\"88\\\" };\\n                    lo = { Types.col = \\\"54\\\"; line = \\\"88\\\" } };\\n                  ty = (Types.Uint Types.Usize) }\\n                ];\\n              bounds_impls =\\n              [{ Types.args = [];\\n                 impl =\\n                 Types.Builtin {\\n                   trait =\\n                   { Types.def_id =\\n                     { Types.index = (2, 26413); krate = \\\"core\\\";\\n                       path =\\n                       [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                          disambiguator = 0 };\\n                         { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                           disambiguator = 0 }\\n                         ]\\n                       };\\n                     generic_args = [(Types.Type (Types.Uint Types.U8))] }};\\n                 trait =\\n                 { Types.def_id =\\n                   { Types.index = (2, 26413); krate = \\\"core\\\";\\n                     path =\\n                     [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                        disambiguator = 0 };\\n                       { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                         disambiguator = 0 }\\n                       ]\\n                     };\\n                   generic_args = [(Types.Type (Types.Uint Types.U8))] }\\n                 }\\n                ];\\n              fn_span =\\n              { Types.filename =\\n                (Types.Real\\n                   (Types.LocalPath\\n                      \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                hi = { Types.col = \\\"71\\\"; line = \\\"88\\\" };\\n                lo = { Types.col = \\\"50\\\"; line = \\\"88\\\" } };\\n              from_hir_call = true;\\n              fun' =\\n              { Types.attributes = [];\\n                contents =\\n                Types.GlobalName {\\n                  id =\\n                  { Types.index = (2, 2535); krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"ptr\\\"); disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"mut_ptr\\\");\\n                        disambiguator = 0 };\\n                      { Types.data = Types.Impl; disambiguator = 0 };\\n                      { Types.data = (Types.ValueNs \\\"add\\\"); disambiguator = 0\\n                        }\\n                      ]\\n                    }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real\\n                     (Types.LocalPath\\n                        \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                  hi = { Types.col = \\\"53\\\"; line = \\\"88\\\" };\\n                  lo = { Types.col = \\\"50\\\"; line = \\\"88\\\" } };\\n                ty =\\n                (Types.Arrow\\n                   { Types.bound_vars = [];\\n                     value =\\n                     { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                       c_variadic = false;\\n                       inputs =\\n                       [(Types.RawPtr ((Types.Uint Types.U8), true));\\n                         (Types.Uint Types.Usize)];\\n                       output = (Types.RawPtr ((Types.Uint Types.U8), true));\\n                       safety = Types.Unsafe }\\n                     })\\n                };\\n              generic_args = [(Types.Type (Types.Uint Types.U8))];\\n              trait = None;\\n              ty =\\n              (Types.Arrow\\n                 { Types.bound_vars = [];\\n                   value =\\n                   { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                     c_variadic = false;\\n                     inputs =\\n                     [(Types.RawPtr ((Types.Uint Types.U8), true));\\n                       (Types.Uint Types.Usize)];\\n                     output = (Types.RawPtr ((Types.Uint Types.U8), true));\\n                     safety = Types.Unsafe }\\n                   })};\\n            hir_id = (Some (\\\"168\\\", \\\"182\\\"));\\n            span =\\n            { Types.filename =\\n              (Types.Real\\n                 (Types.LocalPath\\n                    \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n              hi = { Types.col = \\\"71\\\"; line = \\\"88\\\" };\\n              lo = { Types.col = \\\"30\\\"; line = \\\"88\\\" } };\\n            ty = (Types.RawPtr ((Types.Uint Types.U8), true)) });\\n    region_scope = { Types.data = Types.Node; id = \\\"190\\\" };\\n    safety_mode = Types.ExplicitUnsafe;\\n    span =\\n    { Types.filename =\\n      (Types.Real\\n         (Types.LocalPath \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n      hi = { Types.col = \\\"73\\\"; line = \\\"88\\\" };\\n      lo = { Types.col = \\\"21\\\"; line = \\\"88\\\" } };\\n    stmts = []; targeted_by_break = false};\\n  hir_id = (Some (\\\"168\\\", \\\"181\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real\\n       (Types.LocalPath \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n    hi = { Types.col = \\\"73\\\"; line = \\\"88\\\" };\\n    lo = { Types.col = \\\"21\\\"; line = \\\"88\\\" } };\\n  ty = (Types.RawPtr ((Types.Uint Types.U8), true)) }\",\n                                                                        ))\n                                                                    };\n                                                                    Tuple0\n                                                                }\n                                                            }\n                                                            _ => {\n                                                                let _: rust_primitives::hax::t_Never = { (break (Tuple0)) };\n                                                                Tuple0\n                                                            }\n                                                        })\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                };\n                {\n                    let _: tuple0 = {\n                        alloc::vec::impl_2__resize::<\n                            int,\n                            alloc::alloc::t_Global,\n                        >(&mut (buffer), size, 0)\n                    };\n                    {\n                        let _: tuple0 = {\n                            (match (core::iter::traits::iterator::f_position::<\n                                arrow!(& int -> bool),\n                            >(\n                                &mut (core::slice::impl__iter::<\n                                    int,\n                                >(&(deref(core::ops::deref::f_deref(&(buffer)))))),\n                                (|x| { core::cmp::PartialEq::eq(deref(x), 0) }),\n                            )) {\n                                core::option::Option_Some(first_null_byte) => {\n                                    let _: tuple0 = {\n                                        (if core::cmp::PartialEq::eq(first_null_byte, 0) {\n                                            rust_primitives::hax::never_to_any({\n                                                (return alloc::string::f_to_string(\n                                                    &(deref(\"no additional information\")),\n                                                ))\n                                            })\n                                        })\n                                    };\n                                    {\n                                        let _: tuple0 = {\n                                            alloc::vec::impl_2__resize::<\n                                                int,\n                                                alloc::alloc::t_Global,\n                                            >(&mut (buffer), first_null_byte, 0)\n                                        };\n                                        Tuple0\n                                    }\n                                }\n                                _ => {\n                                    (if alloc::vec::impl_1__is_empty::<\n                                        int,\n                                        alloc::alloc::t_Global,\n                                    >(&(buffer)) {\n                                        rust_primitives::hax::never_to_any({\n                                            (return alloc::string::f_to_string(\n                                                &(deref(\"no additional information\")),\n                                            ))\n                                        })\n                                    })\n                                }\n                            })\n                        };\n                        {\n                            core::result::impl__unwrap_or_else::<\n                                alloc::string::t_String,\n                                alloc::string::t_FromUtf8Error,\n                                arrow!(\n                                    alloc::string::t_FromUtf8Error -> alloc::string::t_String\n                                ),\n                            >(\n                                alloc::string::impl__String__from_utf8(buffer),\n                                (|_| {\n                                    core::convert::f_into(&(deref(\"unknown error (not UTF-8)\")))\n                                }),\n                            )\n                        }\n                    }\n                }\n            }\n        }\n    }"
          )
        <:
        Core.Ops.Control_flow.t_ControlFlow Alloc.String.t_String Alloc.String.t_String
      | _ ->
        let! _:Rust_primitives.Hax.t_Never =
          Core.Ops.Control_flow.ControlFlow_Break
          (Core.Convert.f_into #string
              #Alloc.String.t_String
              #FStar.Tactics.Typeclasses.solve
              "unknown error (BIO unavailable)")
          <:
          Core.Ops.Control_flow.t_ControlFlow Alloc.String.t_String Rust_primitives.Hax.t_Never
        in
        Core.Ops.Control_flow.ControlFlow_Continue ()
        <:
        Core.Ops.Control_flow.t_ControlFlow Alloc.String.t_String Prims.unit)

let v_BIO_from_buffer
      (#impl_424714745_: Type0)
      (#[FStar.Tactics.Typeclasses.tcresolve ()]
          i1:
          Core.Convert.t_AsRef impl_424714745_ (t_Slice u8))
      (buffer: impl_424714745_)
     =
  let buffer:t_Slice u8 =
    Core.Convert.f_as_ref #impl_424714745_ #(t_Slice u8) #FStar.Tactics.Typeclasses.solve buffer
  in
  match
    Core.Result.impl__map_err #i32
      #Core.Num.Error.t_TryFromIntError
      #(Sandwich_proto.Errors.t_SystemError & Alloc.String.t_String)
      (Core.Convert.f_try_into #usize
          #i32
          #FStar.Tactics.Typeclasses.solve
          (Core.Slice.impl__len #u8 buffer <: usize)
        <:
        Core.Result.t_Result i32 Core.Num.Error.t_TryFromIntError)
      (fun e ->
          let e:Core.Num.Error.t_TryFromIntError = e in
          let res:Alloc.String.t_String =
            Alloc.Fmt.format (Core.Fmt.impl_2__new_v1 (sz 1)
                  (sz 1)
                  (let list = ["cannot create a BIO object: "] in
                    FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 1);
                    Rust_primitives.Hax.array_of_list 1 list)
                  (let list =
                      [
                        Core.Fmt.Rt.impl_1__new_display #Core.Num.Error.t_TryFromIntError e
                        <:
                        Core.Fmt.Rt.t_Argument
                      ]
                    in
                    FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 1);
                    Rust_primitives.Hax.array_of_list 1 list)
                <:
                Core.Fmt.t_Arguments)
          in
          (Sandwich_proto.Errors.SystemError_SYSTEMERROR_INTEGER_OVERFLOW
            <:
            Sandwich_proto.Errors.t_SystemError),
          res
          <:
          (Sandwich_proto.Errors.t_SystemError & Alloc.String.t_String))
  with
  | Core.Result.Result_Ok (size: i32) ->
    Core.Option.impl__ok_or_else #(Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_bio_st)
      #Sandwich.Error.t_Error
      (Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
          "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.Call {\n                        args =\n                        [{ Types.attributes = [];\n                           contents =\n                           Types.Call {\n                             args =\n                             [{ Types.attributes = [];\n                                contents =\n                                Types.Borrow {\n                                  arg =\n                                  { Types.attributes = [];\n                                    contents =\n                                    Types.Deref {\n                                      arg =\n                                      { Types.attributes = [];\n                                        contents =\n                                        Types.VarRef {\n                                          id =\n                                          { Types.id =\n                                            { Types.local_id = \"9\";\n                                              owner =\n                                              { Types.index = (0, 176);\n                                                krate = \"sandwich\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs\n                                                      \"implementation\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs\n                                                       \"openssl3_impl\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"support\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.ValueNs\n                                                       \"BIO_from_buffer\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                }\n                                              };\n                                            name = \"buffer\" }};\n                                        hir_id = None;\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath\n                                                \"rust/implementation/openssl3_impl/support.rs\"));\n                                          hi =\n                                          { Types.col = \"44\"; line = \"135\" };\n                                          lo =\n                                          { Types.col = \"38\"; line = \"135\" }\n                                          };\n                                        ty =\n                                        (Types.Ref\n                                           ({ Types.kind = Types.ReErased },\n                                            (Types.Slice\n                                               (Types.Uint Types.U8)),\n                                            false))\n                                        }};\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath\n                                            \"rust/implementation/openssl3_impl/support.rs\"));\n                                      hi = { Types.col = \"44\"; line = \"135\" };\n                                      lo = { Types.col = \"38\"; line = \"135\" }\n                                      };\n                                    ty = (Types.Slice (Types.Uint Types.U8))\n                                    };\n                                  borrow_kind = Types.Shared};\n                                hir_id = (Some (\"176\", \"99\"));\n                                span =\n                                { Types.filename =\n                                  (Types.Real\n                                     (Types.LocalPath\n                                        \"rust/implementation/openssl3_impl/support.rs\"));\n                                  hi = { Types.col = \"44\"; line = \"135\" };\n                                  lo = { Types.col = \"38\"; line = \"135\" } };\n                                ty =\n                                (Types.Ref\n                                   ({ Types.kind = Types.ReErased },\n                                    (Types.Slice (Types.Uint Types.U8)),\n                                    false))\n                                }\n                               ];\n                             bounds_impls = [];\n                             fn_span =\n                             { Types.filename =\n                               (Types.Real\n                                  (Types.LocalPath\n                                     \"rust/implementation/openssl3_impl/support.rs\"));\n                               hi = { Types.col = \"53\"; line = \"135\" };\n                               lo = { Types.col = \"45\"; line = \"135\" } };\n                             from_hir_call = true;\n                             fun' =\n                             { Types.attributes = [];\n                               contents =\n                               Types.GlobalName {\n                                 id =\n                                 { Types.index = (2, 12562); krate = \"core\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"slice\");\n                                      disambiguator = 0 };\n                                     { Types.data = Types.Impl;\n                                       disambiguator = 0 };\n                                     { Types.data = (Types.ValueNs \"as_ptr\");\n                                       disambiguator = 0 }\n                                     ]\n                                   }};\n                               hir_id = None;\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath\n                                       \"rust/implementation/openssl3_impl/support.rs\"));\n                                 hi = { Types.col = \"51\"; line = \"135\" };\n                                 lo = { Types.col = \"45\"; line = \"135\" } };\n                               ty =\n                               (Types.Arrow\n                                  { Types.bound_vars =\n                                    [(Types.Region\n                                        (Types.BrNamed\n                                           ({ Types.index = (2, 58598);\n                                              krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"slice\");\n                                                 disambiguator = 0 };\n                                                { Types.data = Types.Impl;\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.ValueNs \"as_ptr\");\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.LifetimeNs \"'_\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              },\n                                            \"'_\")))\n                                      ];\n                                    value =\n                                    { Types.abi = Types.Abi {todo = \"Rust\"};\n                                      c_variadic = false;\n                                      inputs =\n                                      [(Types.Ref\n                                          ({ Types.kind =\n                                             (Types.ReBound\n                                                (\"0\",\n                                                 { Types.kind =\n                                                   (Types.BrNamed\n                                                      ({ Types.index =\n                                                         (2, 58598);\n                                                         krate = \"core\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"slice\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             Types.Impl;\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.ValueNs\n                                                                \"as_ptr\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.LifetimeNs\n                                                                \"'_\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         },\n                                                       \"'_\"));\n                                                   var = \"0\" }))\n                                             },\n                                           (Types.Slice (Types.Uint Types.U8)),\n                                           false))\n                                        ];\n                                      output =\n                                      (Types.RawPtr\n                                         ((Types.Uint Types.U8), false));\n                                      safety = Types.Safe }\n                                    })\n                               };\n                             generic_args =\n                             [(Types.Type (Types.Uint Types.U8))];\n                             trait = None;\n                             ty =\n                             (Types.Arrow\n                                { Types.bound_vars =\n                                  [(Types.Region\n                                      (Types.BrNamed\n                                         ({ Types.index = (2, 58598);\n                                            krate = \"core\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"slice\");\n                                               disambiguator = 0 };\n                                              { Types.data = Types.Impl;\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.ValueNs \"as_ptr\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.LifetimeNs \"'_\");\n                                                disambiguator = 0 }\n                                              ]\n                                            },\n                                          \"'_\")))\n                                    ];\n                                  value =\n                                  { Types.abi = Types.Abi {todo = \"Rust\"};\n                                    c_variadic = false;\n                                    inputs =\n                                    [(Types.Ref\n                                        ({ Types.kind =\n                                           (Types.ReBound\n                                              (\"0\",\n                                               { Types.kind =\n                                                 (Types.BrNamed\n                                                    ({ Types.index =\n                                                       (2, 58598);\n                                                       krate = \"core\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs\n                                                             \"slice\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           Types.Impl;\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.ValueNs\n                                                              \"as_ptr\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.LifetimeNs\n                                                              \"'_\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       },\n                                                     \"'_\"));\n                                                 var = \"0\" }))\n                                           },\n                                         (Types.Slice (Types.Uint Types.U8)),\n                                         false))\n                                      ];\n                                    output =\n                                    (Types.RawPtr\n                                       ((Types.Uint Types.U8), false));\n                                    safety = Types.Safe }\n                                  })};\n                           hir_id = (Some (\"176\", \"97\"));\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath\n                                   \"rust/implementation/openssl3_impl/support.rs\"));\n                             hi = { Types.col = \"53\"; line = \"135\" };\n                             lo = { Types.col = \"38\"; line = \"135\" } };\n                           ty = (Types.RawPtr ((Types.Uint Types.U8), false))\n                           }\n                          ];\n                        bounds_impls =\n                        [{ Types.args = [];\n                           impl =\n                           Types.Builtin {\n                             trait =\n                             { Types.def_id =\n                               { Types.index = (2, 26413); krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"marker\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"Sized\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (2, 5307);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"ffi\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"c_void\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []})\n                                 ]\n                               }};\n                           trait =\n                           { Types.def_id =\n                             { Types.index = (2, 26413); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"marker\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"Sized\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Type\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.index = (2, 5307); krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"ffi\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"c_void\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []; trait_refs = []})\n                               ]\n                             }\n                           }\n                          ];\n                        fn_span =\n                        { Types.filename =\n                          (Types.Real\n                             (Types.LocalPath\n                                \"rust/implementation/openssl3_impl/support.rs\"));\n                          hi = { Types.col = \"60\"; line = \"135\" };\n                          lo = { Types.col = \"54\"; line = \"135\" } };\n                        from_hir_call = true;\n                        fun' =\n                        { Types.attributes = [];\n                          contents =\n                          Types.GlobalName {\n                            id =\n                            { Types.index = (2, 2404); krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"ptr\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"const_ptr\");\n                                  disambiguator = 0 };\n                                { Types.data = Types.Impl; disambiguator = 0\n                                  };\n                                { Types.data = (Types.ValueNs \"cast\");\n                                  disambiguator = 0 }\n                                ]\n                              }};\n                          hir_id = None;\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3_impl/support.rs\"));\n                            hi = { Types.col = \"58\"; line = \"135\" };\n                            lo = { Types.col = \"54\"; line = \"135\" } };\n                          ty =\n                          (Types.Arrow\n                             { Types.bound_vars = [];\n                               value =\n                               { Types.abi = Types.Abi {todo = \"Rust\"};\n                                 c_variadic = false;\n                                 inputs =\n                                 [(Types.RawPtr\n                                     ((Types.Uint Types.U8), false))\n                                   ];\n                                 output =\n                                 (Types.RawPtr\n                                    (Types.Adt {\n                                       def_id =\n                                       { Types.index = (2, 5307);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data = (Types.TypeNs \"ffi\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"c_void\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []; trait_refs = []},\n                                     false));\n                                 safety = Types.Safe }\n                               })\n                          };\n                        generic_args =\n                        [(Types.Type (Types.Uint Types.U8));\n                          (Types.Type\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (2, 5307); krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"ffi\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"c_void\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args = []; trait_refs = []})\n                          ];\n                        trait = None;\n                        ty =\n                        (Types.Arrow\n                           { Types.bound_vars = [];\n                             value =\n                             { Types.abi = Types.Abi {todo = \"Rust\"};\n                               c_variadic = false;\n                               inputs =\n                               [(Types.RawPtr ((Types.Uint Types.U8), false))\n                                 ];\n                               output =\n                               (Types.RawPtr\n                                  (Types.Adt {\n                                     def_id =\n                                     { Types.index = (2, 5307);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"ffi\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"c_void\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []},\n                                   false));\n                               safety = Types.Safe }\n                             })};\n                      hir_id = (Some (\"176\", \"95\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/support.rs\"));\n                        hi = { Types.col = \"60\"; line = \"135\" };\n                        lo = { Types.col = \"38\"; line = \"135\" } };\n                      ty =\n                      (Types.RawPtr\n                         (Types.Adt {\n                            def_id =\n                            { Types.index = (2, 5307); krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"ffi\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"c_void\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []},\n                          false))\n                      };\n                     { Types.attributes = [];\n                       contents =\n                       Types.VarRef {\n                         id =\n                         { Types.id =\n                           { Types.local_id = \"81\";\n                             owner =\n                             { Types.index = (0, 176); krate = \"sandwich\";\n                               path =\n                               [{ Types.data =\n                                  (Types.TypeNs \"implementation\");\n                                  disambiguator = 0 };\n                                 { Types.data =\n                                   (Types.TypeNs \"openssl3_impl\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"support\");\n                                   disambiguator = 0 };\n                                 { Types.data =\n                                   (Types.ValueNs \"BIO_from_buffer\");\n                                   disambiguator = 0 }\n                                 ]\n                               }\n                             };\n                           name = \"size\" }};\n                       hir_id = (Some (\"176\", \"101\"));\n                       span =\n                       { Types.filename =\n                         (Types.Real\n                            (Types.LocalPath\n                               \"rust/implementation/openssl3_impl/support.rs\"));\n                         hi = { Types.col = \"66\"; line = \"135\" };\n                         lo = { Types.col = \"62\"; line = \"135\" } };\n                       ty = (Types.Int Types.I32) }\n                     ];\n                   bounds_impls = [];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real\n                        (Types.LocalPath\n                           \"rust/implementation/openssl3_impl/support.rs\"));\n                     hi = { Types.col = \"67\"; line = \"135\" };\n                     lo = { Types.col = \"12\"; line = \"135\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (27, 12412); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = Types.ForeignMod;\n                            disambiguator = 570 };\n                           { Types.data = (Types.ValueNs \"BIO_new_mem_buf\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3_impl/support.rs\"));\n                       hi = { Types.col = \"37\"; line = \"135\" };\n                       lo = { Types.col = \"12\"; line = \"135\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi =\n                            Types.Abi {todo = \"C { unwind: false }\"};\n                            c_variadic = false;\n                            inputs =\n                            [(Types.RawPtr\n                                (Types.Adt {\n                                   def_id =\n                                   { Types.index = (2, 5307); krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"ffi\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"c_void\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []; trait_refs = []},\n                                 false));\n                              (Types.Int Types.I32)];\n                            output =\n                            (Types.RawPtr\n                               (Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 20890);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"bio_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                true));\n                            safety = Types.Unsafe }\n                          })\n                     };\n                   generic_args = []; trait = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi =\n                          Types.Abi {todo = \"C { unwind: false }\"};\n                          c_variadic = false;\n                          inputs =\n                          [(Types.RawPtr\n                              (Types.Adt {\n                                 def_id =\n                                 { Types.index = (2, 5307); krate = \"core\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"ffi\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"c_void\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []; trait_refs = []},\n                               false));\n                            (Types.Int Types.I32)];\n                          output =\n                          (Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 20890);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"bio_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true));\n                          safety = Types.Unsafe }\n                        })};\n                 hir_id = (Some (\"176\", \"91\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      (Types.LocalPath\n                         \"rust/implementation/openssl3_impl/support.rs\"));\n                   hi = { Types.col = \"67\"; line = \"135\" };\n                   lo = { Types.col = \"12\"; line = \"135\" } };\n                 ty =\n                 (Types.RawPtr\n                    (Types.Adt {\n                       def_id =\n                       { Types.index = (27, 20890); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"bio_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []},\n                     true))\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.PointerCoercion {\n                    cast = (Types.ClosureFnPointer Types.Safe);\n                    source =\n                    { Types.attributes = [];\n                      contents =\n                      Types.Closure {\n                        body =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Call {\n                            args =\n                            [{ Types.attributes = [];\n                               contents =\n                               Types.VarRef {\n                                 id =\n                                 { Types.id =\n                                   { Types.local_id = \"105\";\n                                     owner =\n                                     { Types.index = (0, 176);\n                                       krate = \"sandwich\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"implementation\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"openssl3_impl\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"support\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.ValueNs \"BIO_from_buffer\");\n                                           disambiguator = 0 }\n                                         ]\n                                       }\n                                     };\n                                   name = \"x\" }};\n                               hir_id = (Some (\"176\", \"110\"));\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath\n                                       \"rust/implementation/openssl3_impl/support.rs\"));\n                                 hi = { Types.col = \"40\"; line = \"136\" };\n                                 lo = { Types.col = \"39\"; line = \"136\" } };\n                               ty =\n                               (Types.RawPtr\n                                  (Types.Adt {\n                                     def_id =\n                                     { Types.index = (27, 20890);\n                                       krate = \"openssl3\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"bio_st\");\n                                          disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []},\n                                   true))\n                               }\n                              ];\n                            bounds_impls = [];\n                            fn_span =\n                            { Types.filename =\n                              (Types.Real\n                                 (Types.LocalPath\n                                    \"rust/implementation/openssl3_impl/support.rs\"));\n                              hi = { Types.col = \"41\"; line = \"136\" };\n                              lo = { Types.col = \"16\"; line = \"136\" } };\n                            from_hir_call = true;\n                            fun' =\n                            { Types.attributes = [];\n                              contents =\n                              Types.GlobalName {\n                                id =\n                                { Types.index = (27, 12384);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data = Types.ForeignMod;\n                                     disambiguator = 556 };\n                                    { Types.data =\n                                      (Types.ValueNs \"BIO_free_all\");\n                                      disambiguator = 0 }\n                                    ]\n                                  }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"rust/implementation/openssl3_impl/support.rs\"));\n                                hi = { Types.col = \"38\"; line = \"136\" };\n                                lo = { Types.col = \"16\"; line = \"136\" } };\n                              ty =\n                              (Types.Arrow\n                                 { Types.bound_vars = [];\n                                   value =\n                                   { Types.abi =\n                                     Types.Abi {todo = \"C { unwind: false }\"};\n                                     c_variadic = false;\n                                     inputs =\n                                     [(Types.RawPtr\n                                         (Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 20890);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"bio_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []},\n                                          true))\n                                       ];\n                                     output = (Types.Tuple []);\n                                     safety = Types.Unsafe }\n                                   })\n                              };\n                            generic_args = []; trait = None;\n                            ty =\n                            (Types.Arrow\n                               { Types.bound_vars = [];\n                                 value =\n                                 { Types.abi =\n                                   Types.Abi {todo = \"C { unwind: false }\"};\n                                   c_variadic = false;\n                                   inputs =\n                                   [(Types.RawPtr\n                                       (Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 20890);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"bio_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []},\n                                        true))\n                                     ];\n                                   output = (Types.Tuple []);\n                                   safety = Types.Unsafe }\n                                 })};\n                          hir_id = (Some (\"176\", \"106\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3_impl/support.rs\"));\n                            hi = { Types.col = \"41\"; line = \"136\" };\n                            lo = { Types.col = \"16\"; line = \"136\" } };\n                          ty = (Types.Tuple []) };\n                        movability = None;\n                        params =\n                        [{ Types.attributes = []; hir_id = None; pat = None;\n                           self_kind = None;\n                           ty =\n                           (Types.Ref\n                              ({ Types.kind = Types.ReErased },\n                               (Types.Arrow\n                                  { Types.bound_vars = [];\n                                    value =\n                                    { Types.abi = Types.Abi {todo = \"Rust\"};\n                                      c_variadic = false;\n                                      inputs =\n                                      [(Types.RawPtr\n                                          (Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 20890);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"bio_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []},\n                                           true))\n                                        ];\n                                      output = (Types.Tuple []);\n                                      safety = Types.Safe }\n                                    }),\n                               false));\n                           ty_span = None };\n                          { Types.attributes = [];\n                            hir_id =\n                            (Some { Types.local_id = \"104\";\n                                    owner =\n                                    { Types.index = (0, 176);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"implementation\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"openssl3_impl\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"support\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.ValueNs \"BIO_from_buffer\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    });\n                            pat =\n                            (Some { Types.attributes = [];\n                                    contents =\n                                    Types.Binding {is_primary = true;\n                                      mode =\n                                      { Types.by_ref = Types.No;\n                                        mutability = false };\n                                      subpattern = None;\n                                      ty =\n                                      (Types.RawPtr\n                                         (Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 20890);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"bio_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []},\n                                          true));\n                                      var =\n                                      { Types.id =\n                                        { Types.local_id = \"105\";\n                                          owner =\n                                          { Types.index = (0, 176);\n                                            krate = \"sandwich\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"implementation\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"openssl3_impl\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"support\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.ValueNs\n                                                   \"BIO_from_buffer\");\n                                                disambiguator = 0 }\n                                              ]\n                                            }\n                                          };\n                                        name = \"x\" }};\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath\n                                            \"rust/implementation/openssl3_impl/support.rs\"));\n                                      hi = { Types.col = \"14\"; line = \"136\" };\n                                      lo = { Types.col = \"13\"; line = \"136\" }\n                                      };\n                                    ty =\n                                    (Types.RawPtr\n                                       (Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 20890);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"bio_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []},\n                                        true))\n                                    });\n                            self_kind = None;\n                            ty =\n                            (Types.RawPtr\n                               (Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 20890);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"bio_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                true));\n                            ty_span = None }\n                          ];\n                        upvars = []};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/support.rs\"));\n                        hi = { Types.col = \"41\"; line = \"136\" };\n                        lo = { Types.col = \"12\"; line = \"136\" } };\n                      ty =\n                      (Types.Arrow\n                         { Types.bound_vars = [];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [(Types.RawPtr\n                                 (Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 20890);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"bio_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []},\n                                  true))\n                               ];\n                             output = (Types.Tuple []); safety = Types.Safe }\n                           })\n                      }};\n                  hir_id = (Some (\"176\", \"103\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath\n                          \"rust/implementation/openssl3_impl/support.rs\"));\n                    hi = { Types.col = \"41\"; line = \"136\" };\n                    lo = { Types.col = \"12\"; line = \"136\" } };\n                  ty =\n                  (Types.Arrow\n                     { Types.bound_vars = [];\n                       value =\n                       { Types.abi = Types.Abi {todo = \"Rust\"};\n                         c_variadic = false;\n                         inputs =\n                         [(Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 20890);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"bio_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true))\n                           ];\n                         output = (Types.Tuple []); safety = Types.Safe }\n                       })\n                  }\n                ];\n              bounds_impls = [];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath\n                      \"rust/implementation/openssl3_impl/support.rs\"));\n                hi = { Types.col = \"9\"; line = \"137\" };\n                lo = { Types.col = \"8\"; line = \"134\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (0, 642); krate = \"sandwich\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"support\");\n                       disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"pimpl\");\n                        disambiguator = 0 };\n                      { Types.data = Types.Impl; disambiguator = 2 };\n                      { Types.data = (Types.ValueNs \"new\"); disambiguator = 0\n                        }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath\n                        \"rust/implementation/openssl3_impl/support.rs\"));\n                  hi = { Types.col = \"18\"; line = \"134\" };\n                  lo = { Types.col = \"8\"; line = \"134\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"Rust\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           (Types.Adt {\n                              def_id =\n                              { Types.index = (27, 20890);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"bio_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []},\n                            true));\n                         (Types.Arrow\n                            { Types.bound_vars = [];\n                              value =\n                              { Types.abi = Types.Abi {todo = \"Rust\"};\n                                c_variadic = false;\n                                inputs =\n                                [(Types.RawPtr\n                                    (Types.Adt {\n                                       def_id =\n                                       { Types.index = (27, 20890);\n                                         krate = \"openssl3\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"bio_st\");\n                                            disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []; trait_refs = []},\n                                     true))\n                                  ];\n                                output = (Types.Tuple []);\n                                safety = Types.Safe }\n                              })\n                         ];\n                       output =\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (2, 36174); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"option\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Option\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (0, 628); krate = \"sandwich\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"support\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"pimpl\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"Pimpl\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Lifetime\n                                   { Types.kind = Types.ReErased });\n                                 (Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 20890);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"bio_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                 ];\n                               trait_refs =\n                               [{ Types.args = [];\n                                  impl =\n                                  Types.Builtin {\n                                    trait =\n                                    { Types.def_id =\n                                      { Types.index = (2, 26413);\n                                        krate = \"core\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"marker\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"Sized\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Type\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 20890);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"bio_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []})\n                                        ]\n                                      }};\n                                  trait =\n                                  { Types.def_id =\n                                    { Types.index = (2, 26413);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"marker\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Sized\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 20890);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"bio_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []})\n                                      ]\n                                    }\n                                  }\n                                 ]})\n                           ];\n                         trait_refs =\n                         [{ Types.args = [];\n                            impl =\n                            Types.Builtin {\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (0, 628);\n                                        krate = \"sandwich\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"support\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"pimpl\");\n                                            disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"Pimpl\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Lifetime\n                                          { Types.kind = Types.ReErased });\n                                        (Types.Type\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 20890);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"bio_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []})\n                                        ];\n                                      trait_refs =\n                                      [{ Types.args = [];\n                                         impl =\n                                         Types.Builtin {\n                                           trait =\n                                           { Types.def_id =\n                                             { Types.index = (2, 26413);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"marker\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"Sized\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args =\n                                             [(Types.Type\n                                                 Types.Adt {\n                                                   def_id =\n                                                   { Types.index =\n                                                     (27, 20890);\n                                                     krate = \"openssl3\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"bio_st\");\n                                                        disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = [];\n                                                   trait_refs = []})\n                                               ]\n                                             }};\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 26413);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 20890);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"bio_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ]\n                                           }\n                                         }\n                                        ]})\n                                  ]\n                                }};\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 26413); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"marker\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Sized\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 628);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"support\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"pimpl\");\n                                          disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Pimpl\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Lifetime\n                                        { Types.kind = Types.ReErased });\n                                      (Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 20890);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"bio_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []})\n                                      ];\n                                    trait_refs =\n                                    [{ Types.args = [];\n                                       impl =\n                                       Types.Builtin {\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 26413);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 20890);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"bio_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ]\n                                           }};\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 26413);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 20890);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"bio_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                           ]\n                                         }\n                                       }\n                                      ]})\n                                ]\n                              }\n                            }\n                           ]};\n                       safety = Types.Unsafe }\n                     })\n                };\n              generic_args =\n              [(Types.Lifetime { Types.kind = Types.ReErased });\n                (Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (27, 20890); krate = \"openssl3\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"bio_st\");\n                          disambiguator = 0 }\n                         ]\n                       };\n                     generic_args = []; trait_refs = []})\n                ];\n              trait = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         (Types.Adt {\n                            def_id =\n                            { Types.index = (27, 20890); krate = \"openssl3\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"bio_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []},\n                          true));\n                       (Types.Arrow\n                          { Types.bound_vars = [];\n                            value =\n                            { Types.abi = Types.Abi {todo = \"Rust\"};\n                              c_variadic = false;\n                              inputs =\n                              [(Types.RawPtr\n                                  (Types.Adt {\n                                     def_id =\n                                     { Types.index = (27, 20890);\n                                       krate = \"openssl3\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"bio_st\");\n                                          disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []},\n                                   true))\n                                ];\n                              output = (Types.Tuple []); safety = Types.Safe\n                              }\n                            })\n                       ];\n                     output =\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (2, 36174); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"option\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Option\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (0, 628); krate = \"sandwich\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"support\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"pimpl\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"Pimpl\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Lifetime { Types.kind = Types.ReErased });\n                               (Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 20890);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"bio_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []})\n                               ];\n                             trait_refs =\n                             [{ Types.args = [];\n                                impl =\n                                Types.Builtin {\n                                  trait =\n                                  { Types.def_id =\n                                    { Types.index = (2, 26413);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"marker\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Sized\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 20890);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"bio_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []})\n                                      ]\n                                    }};\n                                trait =\n                                { Types.def_id =\n                                  { Types.index = (2, 26413); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"marker\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Sized\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (27, 20890);\n                                          krate = \"openssl3\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"bio_st\");\n                                             disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []; trait_refs = []})\n                                    ]\n                                  }\n                                }\n                               ]})\n                         ];\n                       trait_refs =\n                       [{ Types.args = [];\n                          impl =\n                          Types.Builtin {\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 26413); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"marker\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Sized\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 628);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"support\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"pimpl\");\n                                          disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Pimpl\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Lifetime\n                                        { Types.kind = Types.ReErased });\n                                      (Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 20890);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"bio_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []})\n                                      ];\n                                    trait_refs =\n                                    [{ Types.args = [];\n                                       impl =\n                                       Types.Builtin {\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 26413);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 20890);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"bio_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ]\n                                           }};\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 26413);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 20890);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"bio_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                           ]\n                                         }\n                                       }\n                                      ]})\n                                ]\n                              }};\n                          trait =\n                          { Types.def_id =\n                            { Types.index = (2, 26413); krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"marker\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"Sized\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (0, 628);\n                                    krate = \"sandwich\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"support\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"pimpl\");\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Pimpl\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Lifetime\n                                      { Types.kind = Types.ReErased });\n                                    (Types.Type\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.index = (27, 20890);\n                                           krate = \"openssl3\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"bio_st\");\n                                              disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args = []; trait_refs = []})\n                                    ];\n                                  trait_refs =\n                                  [{ Types.args = [];\n                                     impl =\n                                     Types.Builtin {\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 26413);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 20890);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"bio_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                           ]\n                                         }};\n                                     trait =\n                                     { Types.def_id =\n                                       { Types.index = (2, 26413);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"marker\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"Sized\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args =\n                                       [(Types.Type\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 20890);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"bio_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []})\n                                         ]\n                                       }\n                                     }\n                                    ]})\n                              ]\n                            }\n                          }\n                         ]};\n                     safety = Types.Unsafe }\n                   })};\n            hir_id = (Some (\"176\", \"85\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 (Types.LocalPath\n                    \"rust/implementation/openssl3_impl/support.rs\"));\n              hi = { Types.col = \"9\"; line = \"137\" };\n              lo = { Types.col = \"8\"; line = \"134\" } };\n            ty =\n            Types.Adt {\n              def_id =\n              { Types.index = (2, 36174); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0 }\n                  ]\n                };\n              generic_args =\n              [(Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (0, 628); krate = \"sandwich\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"support\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"pimpl\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Pimpl\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Lifetime { Types.kind = Types.ReErased });\n                      (Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (27, 20890); krate = \"openssl3\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"bio_st\");\n                                disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []; trait_refs = []})\n                      ];\n                    trait_refs =\n                    [{ Types.args = [];\n                       impl =\n                       Types.Builtin {\n                         trait =\n                         { Types.def_id =\n                           { Types.index = (2, 26413); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"marker\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Sized\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Type\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (27, 20890);\n                                   krate = \"openssl3\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"bio_st\");\n                                      disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []; trait_refs = []})\n                             ]\n                           }};\n                       trait =\n                       { Types.def_id =\n                         { Types.index = (2, 26413); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"marker\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Sized\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (27, 20890);\n                                 krate = \"openssl3\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"bio_st\");\n                                    disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args = []; trait_refs = []})\n                           ]\n                         }\n                       }\n                      ]})\n                ];\n              trait_refs =\n              [{ Types.args = [];\n                 impl =\n                 Types.Builtin {\n                   trait =\n                   { Types.def_id =\n                     { Types.index = (2, 26413); krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"marker\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Sized\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args =\n                     [(Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (0, 628); krate = \"sandwich\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"support\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"pimpl\");\n                                 disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Pimpl\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Lifetime { Types.kind = Types.ReErased });\n                             (Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 20890);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"bio_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []})\n                             ];\n                           trait_refs =\n                           [{ Types.args = [];\n                              impl =\n                              Types.Builtin {\n                                trait =\n                                { Types.def_id =\n                                  { Types.index = (2, 26413); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"marker\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Sized\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (27, 20890);\n                                          krate = \"openssl3\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"bio_st\");\n                                             disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []; trait_refs = []})\n                                    ]\n                                  }};\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 20890);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"bio_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                  ]\n                                }\n                              }\n                             ]})\n                       ]\n                     }};\n                 trait =\n                 { Types.def_id =\n                   { Types.index = (2, 26413); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"marker\");\n                        disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"Sized\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (0, 628); krate = \"sandwich\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"support\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"pimpl\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Pimpl\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Lifetime { Types.kind = Types.ReErased });\n                           (Types.Type\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (27, 20890);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"bio_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []})\n                           ];\n                         trait_refs =\n                         [{ Types.args = [];\n                            impl =\n                            Types.Builtin {\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 20890);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"bio_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                  ]\n                                }};\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 26413); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"marker\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Sized\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 20890);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"bio_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []})\n                                ]\n                              }\n                            }\n                           ]})\n                     ]\n                   }\n                 }\n                ]}\n            });\n    region_scope = { Types.data = Types.Node; id = \"113\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         (Types.LocalPath \"rust/implementation/openssl3_impl/support.rs\"));\n      hi = { Types.col = \"5\"; line = \"138\" };\n      lo = { Types.col = \"4\"; line = \"133\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"176\", \"84\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       (Types.LocalPath \"rust/implementation/openssl3_impl/support.rs\"));\n    hi = { Types.col = \"5\"; line = \"138\" };\n    lo = { Types.col = \"4\"; line = \"133\" } };\n  ty =\n  Types.Adt {\n    def_id =\n    { Types.index = (2, 36174); krate = \"core\";\n      path =\n      [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0 };\n        { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0 }]\n      };\n    generic_args =\n    [(Types.Type\n        Types.Adt {\n          def_id =\n          { Types.index = (0, 628); krate = \"sandwich\";\n            path =\n            [{ Types.data = (Types.TypeNs \"support\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"pimpl\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"Pimpl\"); disambiguator = 0 }]\n            };\n          generic_args =\n          [(Types.Lifetime { Types.kind = Types.ReErased });\n            (Types.Type\n               Types.Adt {\n                 def_id =\n                 { Types.index = (27, 20890); krate = \"openssl3\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"bio_st\"); disambiguator = 0\n                      }\n                     ]\n                   };\n                 generic_args = []; trait_refs = []})\n            ];\n          trait_refs =\n          [{ Types.args = [];\n             impl =\n             Types.Builtin {\n               trait =\n               { Types.def_id =\n                 { Types.index = (2, 26413); krate = \"core\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0\n                      };\n                     { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0\n                       }\n                     ]\n                   };\n                 generic_args =\n                 [(Types.Type\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (27, 20890); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"bio_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []})\n                   ]\n                 }};\n             trait =\n             { Types.def_id =\n               { Types.index = (2, 26413); krate = \"core\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0 }\n                   ]\n                 };\n               generic_args =\n               [(Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (27, 20890); krate = \"openssl3\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"bio_st\");\n                          disambiguator = 0 }\n                         ]\n                       };\n                     generic_args = []; trait_refs = []})\n                 ]\n               }\n             }\n            ]})\n      ];\n    trait_refs =\n    [{ Types.args = [];\n       impl =\n       Types.Builtin {\n         trait =\n         { Types.def_id =\n           { Types.index = (2, 26413); krate = \"core\";\n             path =\n             [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0 };\n               { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0 }]\n             };\n           generic_args =\n           [(Types.Type\n               Types.Adt {\n                 def_id =\n                 { Types.index = (0, 628); krate = \"sandwich\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"support\");\n                      disambiguator = 0 };\n                     { Types.data = (Types.TypeNs \"pimpl\"); disambiguator = 0\n                       };\n                     { Types.data = (Types.TypeNs \"Pimpl\"); disambiguator = 0\n                       }\n                     ]\n                   };\n                 generic_args =\n                 [(Types.Lifetime { Types.kind = Types.ReErased });\n                   (Types.Type\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (27, 20890); krate = \"openssl3\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"bio_st\");\n                             disambiguator = 0 }\n                            ]\n                          };\n                        generic_args = []; trait_refs = []})\n                   ];\n                 trait_refs =\n                 [{ Types.args = [];\n                    impl =\n                    Types.Builtin {\n                      trait =\n                      { Types.def_id =\n                        { Types.index = (2, 26413); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"marker\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Sized\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (27, 20890);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"bio_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []})\n                          ]\n                        }};\n                    trait =\n                    { Types.def_id =\n                      { Types.index = (2, 26413); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"marker\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Sized\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (27, 20890); krate = \"openssl3\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"bio_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []})\n                        ]\n                      }\n                    }\n                   ]})\n             ]\n           }};\n       trait =\n       { Types.def_id =\n         { Types.index = (2, 26413); krate = \"core\";\n           path =\n           [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0 }]\n           };\n         generic_args =\n         [(Types.Type\n             Types.Adt {\n               def_id =\n               { Types.index = (0, 628); krate = \"sandwich\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"support\"); disambiguator = 0\n                    };\n                   { Types.data = (Types.TypeNs \"pimpl\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Pimpl\"); disambiguator = 0 }\n                   ]\n                 };\n               generic_args =\n               [(Types.Lifetime { Types.kind = Types.ReErased });\n                 (Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (27, 20890); krate = \"openssl3\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"bio_st\");\n                           disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = []; trait_refs = []})\n                 ];\n               trait_refs =\n               [{ Types.args = [];\n                  impl =\n                  Types.Builtin {\n                    trait =\n                    { Types.def_id =\n                      { Types.index = (2, 26413); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"marker\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Sized\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (27, 20890); krate = \"openssl3\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"bio_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []})\n                        ]\n                      }};\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 26413); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (27, 20890); krate = \"openssl3\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"bio_st\");\n                               disambiguator = 0 }\n                              ]\n                            };\n                          generic_args = []; trait_refs = []})\n                      ]\n                    }\n                  }\n                 ]})\n           ]\n         }\n       }\n      ]}\n  }"

        <:
        Core.Option.t_Option (Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_bio_st))
      (fun temp_0_ ->
          let _:Prims.unit = temp_0_ in
          Core.Convert.f_into #(Sandwich_proto.Errors.t_SystemError & string)
            #Sandwich.Error.t_Error
            #FStar.Tactics.Typeclasses.solve
            ((Sandwich_proto.Errors.SystemError_SYSTEMERROR_MEMORY
                <:
                Sandwich_proto.Errors.t_SystemError),
              "cannot allocate a new BIO object"
              <:
              (Sandwich_proto.Errors.t_SystemError & string))
          <:
          Sandwich.Error.t_Error)
  | Core.Result.Result_Err err ->
    Core.Result.Result_Err (Core.Convert.f_from #FStar.Tactics.Typeclasses.solve err)
    <:
    Core.Result.t_Result (Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_bio_st) Sandwich.Error.t_Error

let new_BIO (bio_meth: Core.Ptr.Non_null.t_NonNull Openssl3.t_bio_method_st) =
  Core.Option.impl__ok_or_else #(Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_bio_st)
    #Sandwich.Error.t_Error
    (Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
        "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.PointerCoercion {cast = Types.MutToConstPointer;\n                        source =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Call {\n                            args =\n                            [{ Types.attributes = [];\n                               contents =\n                               Types.VarRef {\n                                 id =\n                                 { Types.id =\n                                   { Types.local_id = \"2\";\n                                     owner =\n                                     { Types.index = (0, 173);\n                                       krate = \"sandwich\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"implementation\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"openssl3_impl\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"support\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.ValueNs \"new_BIO\");\n                                           disambiguator = 0 }\n                                         ]\n                                       }\n                                     };\n                                   name = \"bio_meth\" }};\n                               hir_id = (Some (\"173\", \"18\"));\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath\n                                       \"rust/implementation/openssl3_impl/support.rs\"));\n                                 hi = { Types.col = \"45\"; line = \"110\" };\n                                 lo = { Types.col = \"37\"; line = \"110\" } };\n                               ty =\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (2, 2222); krate = \"core\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"ptr\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"non_null\");\n                                       disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"NonNull\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args =\n                                 [(Types.Type\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (27, 23380);\n                                         krate = \"openssl3\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"bio_method_st\");\n                                            disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []; trait_refs = []})\n                                   ];\n                                 trait_refs = []}\n                               }\n                              ];\n                            bounds_impls = [];\n                            fn_span =\n                            { Types.filename =\n                              (Types.Real\n                                 (Types.LocalPath\n                                    \"rust/implementation/openssl3_impl/support.rs\"));\n                              hi = { Types.col = \"54\"; line = \"110\" };\n                              lo = { Types.col = \"46\"; line = \"110\" } };\n                            from_hir_call = true;\n                            fun' =\n                            { Types.attributes = [];\n                              contents =\n                              Types.GlobalName {\n                                id =\n                                { Types.index = (2, 2245); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"ptr\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"non_null\");\n                                      disambiguator = 0 };\n                                    { Types.data = Types.Impl;\n                                      disambiguator = 3 };\n                                    { Types.data = (Types.ValueNs \"as_ptr\");\n                                      disambiguator = 0 }\n                                    ]\n                                  }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"rust/implementation/openssl3_impl/support.rs\"));\n                                hi = { Types.col = \"52\"; line = \"110\" };\n                                lo = { Types.col = \"46\"; line = \"110\" } };\n                              ty =\n                              (Types.Arrow\n                                 { Types.bound_vars = [];\n                                   value =\n                                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                                     c_variadic = false;\n                                     inputs =\n                                     [Types.Adt {\n                                        def_id =\n                                        { Types.index = (2, 2222);\n                                          krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"ptr\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"non_null\");\n                                              disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"NonNull\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args =\n                                        [(Types.Type\n                                            Types.Adt {\n                                              def_id =\n                                              { Types.index = (27, 23380);\n                                                krate = \"openssl3\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs\n                                                      \"bio_method_st\");\n                                                   disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = [];\n                                              trait_refs = []})\n                                          ];\n                                        trait_refs = []}\n                                       ];\n                                     output =\n                                     (Types.RawPtr\n                                        (Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 23380);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"bio_method_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []},\n                                         true));\n                                     safety = Types.Safe }\n                                   })\n                              };\n                            generic_args =\n                            [(Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 23380);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"bio_method_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []})\n                              ];\n                            trait = None;\n                            ty =\n                            (Types.Arrow\n                               { Types.bound_vars = [];\n                                 value =\n                                 { Types.abi = Types.Abi {todo = \"Rust\"};\n                                   c_variadic = false;\n                                   inputs =\n                                   [Types.Adt {\n                                      def_id =\n                                      { Types.index = (2, 2222);\n                                        krate = \"core\";\n                                        path =\n                                        [{ Types.data = (Types.TypeNs \"ptr\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"non_null\");\n                                            disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"NonNull\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Type\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 23380);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs\n                                                    \"bio_method_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []})\n                                        ];\n                                      trait_refs = []}\n                                     ];\n                                   output =\n                                   (Types.RawPtr\n                                      (Types.Adt {\n                                         def_id =\n                                         { Types.index = (27, 23380);\n                                           krate = \"openssl3\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"bio_method_st\");\n                                              disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args = []; trait_refs = []},\n                                       true));\n                                   safety = Types.Safe }\n                                 })};\n                          hir_id = None;\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3_impl/support.rs\"));\n                            hi = { Types.col = \"54\"; line = \"110\" };\n                            lo = { Types.col = \"37\"; line = \"110\" } };\n                          ty =\n                          (Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 23380);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data =\n                                     (Types.TypeNs \"bio_method_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true))\n                          }};\n                      hir_id = (Some (\"173\", \"16\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/support.rs\"));\n                        hi = { Types.col = \"54\"; line = \"110\" };\n                        lo = { Types.col = \"37\"; line = \"110\" } };\n                      ty =\n                      (Types.RawPtr\n                         (Types.Adt {\n                            def_id =\n                            { Types.index = (27, 23380); krate = \"openssl3\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"bio_method_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []},\n                          false))\n                      }\n                     ];\n                   bounds_impls = [];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real\n                        (Types.LocalPath\n                           \"rust/implementation/openssl3_impl/support.rs\"));\n                     hi = { Types.col = \"55\"; line = \"110\" };\n                     lo = { Types.col = \"19\"; line = \"110\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (27, 12328); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = Types.ForeignMod;\n                            disambiguator = 528 };\n                           { Types.data = (Types.ValueNs \"BIO_new\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3_impl/support.rs\"));\n                       hi = { Types.col = \"36\"; line = \"110\" };\n                       lo = { Types.col = \"19\"; line = \"110\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi =\n                            Types.Abi {todo = \"C { unwind: false }\"};\n                            c_variadic = false;\n                            inputs =\n                            [(Types.RawPtr\n                                (Types.Adt {\n                                   def_id =\n                                   { Types.index = (27, 23380);\n                                     krate = \"openssl3\";\n                                     path =\n                                     [{ Types.data =\n                                        (Types.TypeNs \"bio_method_st\");\n                                        disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []; trait_refs = []},\n                                 false))\n                              ];\n                            output =\n                            (Types.RawPtr\n                               (Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 20890);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"bio_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                true));\n                            safety = Types.Unsafe }\n                          })\n                     };\n                   generic_args = []; trait = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi =\n                          Types.Abi {todo = \"C { unwind: false }\"};\n                          c_variadic = false;\n                          inputs =\n                          [(Types.RawPtr\n                              (Types.Adt {\n                                 def_id =\n                                 { Types.index = (27, 23380);\n                                   krate = \"openssl3\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"bio_method_st\");\n                                      disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []; trait_refs = []},\n                               false))\n                            ];\n                          output =\n                          (Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 20890);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"bio_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true));\n                          safety = Types.Unsafe }\n                        })};\n                 hir_id = (Some (\"173\", \"12\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      (Types.LocalPath\n                         \"rust/implementation/openssl3_impl/support.rs\"));\n                   hi = { Types.col = \"55\"; line = \"110\" };\n                   lo = { Types.col = \"19\"; line = \"110\" } };\n                 ty =\n                 (Types.RawPtr\n                    (Types.Adt {\n                       def_id =\n                       { Types.index = (27, 20890); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"bio_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []},\n                     true))\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.PointerCoercion {\n                    cast = (Types.ClosureFnPointer Types.Safe);\n                    source =\n                    { Types.attributes = [];\n                      contents =\n                      Types.Closure {\n                        body =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Block {\n                            expr =\n                            (Some { Types.attributes = [];\n                                    contents =\n                                    Types.Call {\n                                      args =\n                                      [{ Types.attributes = [];\n                                         contents =\n                                         Types.VarRef {\n                                           id =\n                                           { Types.id =\n                                             { Types.local_id = \"22\";\n                                               owner =\n                                               { Types.index = (0, 173);\n                                                 krate = \"sandwich\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs\n                                                       \"implementation\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs\n                                                        \"openssl3_impl\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"support\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.ValueNs \"new_BIO\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 }\n                                               };\n                                             name = \"bio\" }};\n                                         hir_id = (Some (\"173\", \"28\"));\n                                         span =\n                                         { Types.filename =\n                                           (Types.Real\n                                              (Types.LocalPath\n                                                 \"rust/implementation/openssl3_impl/support.rs\"));\n                                           hi =\n                                           { Types.col = \"38\"; line = \"111\" };\n                                           lo =\n                                           { Types.col = \"35\"; line = \"111\" }\n                                           };\n                                         ty =\n                                         (Types.RawPtr\n                                            (Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 20890);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"bio_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []},\n                                             true))\n                                         }\n                                        ];\n                                      bounds_impls = [];\n                                      fn_span =\n                                      { Types.filename =\n                                        (Types.Real\n                                           (Types.LocalPath\n                                              \"rust/implementation/openssl3_impl/support.rs\"));\n                                        hi =\n                                        { Types.col = \"39\"; line = \"111\" };\n                                        lo =\n                                        { Types.col = \"12\"; line = \"111\" } };\n                                      from_hir_call = true;\n                                      fun' =\n                                      { Types.attributes = [];\n                                        contents =\n                                        Types.GlobalName {\n                                          id =\n                                          { Types.index = (27, 12384);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data = Types.ForeignMod;\n                                               disambiguator = 556 };\n                                              { Types.data =\n                                                (Types.ValueNs \"BIO_free_all\");\n                                                disambiguator = 0 }\n                                              ]\n                                            }};\n                                        hir_id = None;\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath\n                                                \"rust/implementation/openssl3_impl/support.rs\"));\n                                          hi =\n                                          { Types.col = \"34\"; line = \"111\" };\n                                          lo =\n                                          { Types.col = \"12\"; line = \"111\" }\n                                          };\n                                        ty =\n                                        (Types.Arrow\n                                           { Types.bound_vars = [];\n                                             value =\n                                             { Types.abi =\n                                               Types.Abi {\n                                                 todo = \"C { unwind: false }\"};\n                                               c_variadic = false;\n                                               inputs =\n                                               [(Types.RawPtr\n                                                   (Types.Adt {\n                                                      def_id =\n                                                      { Types.index =\n                                                        (27, 20890);\n                                                        krate = \"openssl3\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"bio_st\");\n                                                           disambiguator = 0\n                                                           }\n                                                          ]\n                                                        };\n                                                      generic_args = [];\n                                                      trait_refs = []},\n                                                    true))\n                                                 ];\n                                               output = (Types.Tuple []);\n                                               safety = Types.Unsafe }\n                                             })\n                                        };\n                                      generic_args = []; trait = None;\n                                      ty =\n                                      (Types.Arrow\n                                         { Types.bound_vars = [];\n                                           value =\n                                           { Types.abi =\n                                             Types.Abi {\n                                               todo = \"C { unwind: false }\"};\n                                             c_variadic = false;\n                                             inputs =\n                                             [(Types.RawPtr\n                                                 (Types.Adt {\n                                                    def_id =\n                                                    { Types.index =\n                                                      (27, 20890);\n                                                      krate = \"openssl3\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"bio_st\");\n                                                         disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args = [];\n                                                    trait_refs = []},\n                                                  true))\n                                               ];\n                                             output = (Types.Tuple []);\n                                             safety = Types.Unsafe }\n                                           })};\n                                    hir_id = (Some (\"173\", \"24\"));\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath\n                                            \"rust/implementation/openssl3_impl/support.rs\"));\n                                      hi = { Types.col = \"39\"; line = \"111\" };\n                                      lo = { Types.col = \"12\"; line = \"111\" }\n                                      };\n                                    ty = (Types.Tuple []) });\n                            region_scope =\n                            { Types.data = Types.Node; id = \"30\" };\n                            safety_mode = Types.Safe;\n                            span =\n                            { Types.filename =\n                              (Types.Real\n                                 (Types.LocalPath\n                                    \"rust/implementation/openssl3_impl/support.rs\"));\n                              hi = { Types.col = \"9\"; line = \"112\" };\n                              lo = { Types.col = \"63\"; line = \"110\" } };\n                            stmts = []; targeted_by_break = false};\n                          hir_id = (Some (\"173\", \"23\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3_impl/support.rs\"));\n                            hi = { Types.col = \"9\"; line = \"112\" };\n                            lo = { Types.col = \"63\"; line = \"110\" } };\n                          ty = (Types.Tuple []) };\n                        movability = None;\n                        params =\n                        [{ Types.attributes = []; hir_id = None; pat = None;\n                           self_kind = None;\n                           ty =\n                           (Types.Ref\n                              ({ Types.kind = Types.ReErased },\n                               (Types.Arrow\n                                  { Types.bound_vars = [];\n                                    value =\n                                    { Types.abi = Types.Abi {todo = \"Rust\"};\n                                      c_variadic = false;\n                                      inputs =\n                                      [(Types.RawPtr\n                                          (Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 20890);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"bio_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []},\n                                           true))\n                                        ];\n                                      output = (Types.Tuple []);\n                                      safety = Types.Safe }\n                                    }),\n                               false));\n                           ty_span = None };\n                          { Types.attributes = [];\n                            hir_id =\n                            (Some { Types.local_id = \"21\";\n                                    owner =\n                                    { Types.index = (0, 173);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"implementation\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"openssl3_impl\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"support\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.ValueNs \"new_BIO\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    });\n                            pat =\n                            (Some { Types.attributes = [];\n                                    contents =\n                                    Types.Binding {is_primary = true;\n                                      mode =\n                                      { Types.by_ref = Types.No;\n                                        mutability = false };\n                                      subpattern = None;\n                                      ty =\n                                      (Types.RawPtr\n                                         (Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 20890);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"bio_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []},\n                                          true));\n                                      var =\n                                      { Types.id =\n                                        { Types.local_id = \"22\";\n                                          owner =\n                                          { Types.index = (0, 173);\n                                            krate = \"sandwich\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"implementation\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"openssl3_impl\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"support\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.ValueNs \"new_BIO\");\n                                                disambiguator = 0 }\n                                              ]\n                                            }\n                                          };\n                                        name = \"bio\" }};\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath\n                                            \"rust/implementation/openssl3_impl/support.rs\"));\n                                      hi = { Types.col = \"61\"; line = \"110\" };\n                                      lo = { Types.col = \"58\"; line = \"110\" }\n                                      };\n                                    ty =\n                                    (Types.RawPtr\n                                       (Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 20890);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"bio_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []},\n                                        true))\n                                    });\n                            self_kind = None;\n                            ty =\n                            (Types.RawPtr\n                               (Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 20890);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"bio_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                true));\n                            ty_span = None }\n                          ];\n                        upvars = []};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/support.rs\"));\n                        hi = { Types.col = \"9\"; line = \"112\" };\n                        lo = { Types.col = \"57\"; line = \"110\" } };\n                      ty =\n                      (Types.Arrow\n                         { Types.bound_vars = [];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [(Types.RawPtr\n                                 (Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 20890);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"bio_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []},\n                                  true))\n                               ];\n                             output = (Types.Tuple []); safety = Types.Safe }\n                           })\n                      }};\n                  hir_id = (Some (\"173\", \"20\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath\n                          \"rust/implementation/openssl3_impl/support.rs\"));\n                    hi = { Types.col = \"9\"; line = \"112\" };\n                    lo = { Types.col = \"57\"; line = \"110\" } };\n                  ty =\n                  (Types.Arrow\n                     { Types.bound_vars = [];\n                       value =\n                       { Types.abi = Types.Abi {todo = \"Rust\"};\n                         c_variadic = false;\n                         inputs =\n                         [(Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 20890);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"bio_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true))\n                           ];\n                         output = (Types.Tuple []); safety = Types.Safe }\n                       })\n                  }\n                ];\n              bounds_impls = [];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath\n                      \"rust/implementation/openssl3_impl/support.rs\"));\n                hi = { Types.col = \"10\"; line = \"112\" };\n                lo = { Types.col = \"8\"; line = \"110\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (0, 642); krate = \"sandwich\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"support\");\n                       disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"pimpl\");\n                        disambiguator = 0 };\n                      { Types.data = Types.Impl; disambiguator = 2 };\n                      { Types.data = (Types.ValueNs \"new\"); disambiguator = 0\n                        }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath\n                        \"rust/implementation/openssl3_impl/support.rs\"));\n                  hi = { Types.col = \"18\"; line = \"110\" };\n                  lo = { Types.col = \"8\"; line = \"110\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"Rust\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           (Types.Adt {\n                              def_id =\n                              { Types.index = (27, 20890);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"bio_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []},\n                            true));\n                         (Types.Arrow\n                            { Types.bound_vars = [];\n                              value =\n                              { Types.abi = Types.Abi {todo = \"Rust\"};\n                                c_variadic = false;\n                                inputs =\n                                [(Types.RawPtr\n                                    (Types.Adt {\n                                       def_id =\n                                       { Types.index = (27, 20890);\n                                         krate = \"openssl3\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"bio_st\");\n                                            disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []; trait_refs = []},\n                                     true))\n                                  ];\n                                output = (Types.Tuple []);\n                                safety = Types.Safe }\n                              })\n                         ];\n                       output =\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (2, 36174); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"option\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Option\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (0, 628); krate = \"sandwich\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"support\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"pimpl\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"Pimpl\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Lifetime\n                                   { Types.kind = Types.ReErased });\n                                 (Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 20890);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"bio_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                 ];\n                               trait_refs =\n                               [{ Types.args = [];\n                                  impl =\n                                  Types.Builtin {\n                                    trait =\n                                    { Types.def_id =\n                                      { Types.index = (2, 26413);\n                                        krate = \"core\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"marker\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"Sized\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Type\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 20890);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"bio_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []})\n                                        ]\n                                      }};\n                                  trait =\n                                  { Types.def_id =\n                                    { Types.index = (2, 26413);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"marker\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Sized\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 20890);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"bio_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []})\n                                      ]\n                                    }\n                                  }\n                                 ]})\n                           ];\n                         trait_refs =\n                         [{ Types.args = [];\n                            impl =\n                            Types.Builtin {\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (0, 628);\n                                        krate = \"sandwich\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"support\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"pimpl\");\n                                            disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"Pimpl\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Lifetime\n                                          { Types.kind = Types.ReErased });\n                                        (Types.Type\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 20890);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"bio_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []})\n                                        ];\n                                      trait_refs =\n                                      [{ Types.args = [];\n                                         impl =\n                                         Types.Builtin {\n                                           trait =\n                                           { Types.def_id =\n                                             { Types.index = (2, 26413);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"marker\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"Sized\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args =\n                                             [(Types.Type\n                                                 Types.Adt {\n                                                   def_id =\n                                                   { Types.index =\n                                                     (27, 20890);\n                                                     krate = \"openssl3\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"bio_st\");\n                                                        disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = [];\n                                                   trait_refs = []})\n                                               ]\n                                             }};\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 26413);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 20890);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"bio_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ]\n                                           }\n                                         }\n                                        ]})\n                                  ]\n                                }};\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 26413); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"marker\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Sized\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 628);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"support\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"pimpl\");\n                                          disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Pimpl\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Lifetime\n                                        { Types.kind = Types.ReErased });\n                                      (Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 20890);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"bio_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []})\n                                      ];\n                                    trait_refs =\n                                    [{ Types.args = [];\n                                       impl =\n                                       Types.Builtin {\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 26413);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 20890);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"bio_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ]\n                                           }};\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 26413);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 20890);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"bio_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                           ]\n                                         }\n                                       }\n                                      ]})\n                                ]\n                              }\n                            }\n                           ]};\n                       safety = Types.Unsafe }\n                     })\n                };\n              generic_args =\n              [(Types.Lifetime { Types.kind = Types.ReErased });\n                (Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (27, 20890); krate = \"openssl3\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"bio_st\");\n                          disambiguator = 0 }\n                         ]\n                       };\n                     generic_args = []; trait_refs = []})\n                ];\n              trait = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         (Types.Adt {\n                            def_id =\n                            { Types.index = (27, 20890); krate = \"openssl3\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"bio_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []},\n                          true));\n                       (Types.Arrow\n                          { Types.bound_vars = [];\n                            value =\n                            { Types.abi = Types.Abi {todo = \"Rust\"};\n                              c_variadic = false;\n                              inputs =\n                              [(Types.RawPtr\n                                  (Types.Adt {\n                                     def_id =\n                                     { Types.index = (27, 20890);\n                                       krate = \"openssl3\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"bio_st\");\n                                          disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []},\n                                   true))\n                                ];\n                              output = (Types.Tuple []); safety = Types.Safe\n                              }\n                            })\n                       ];\n                     output =\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (2, 36174); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"option\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Option\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (0, 628); krate = \"sandwich\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"support\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"pimpl\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"Pimpl\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Lifetime { Types.kind = Types.ReErased });\n                               (Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 20890);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"bio_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []})\n                               ];\n                             trait_refs =\n                             [{ Types.args = [];\n                                impl =\n                                Types.Builtin {\n                                  trait =\n                                  { Types.def_id =\n                                    { Types.index = (2, 26413);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"marker\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Sized\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 20890);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"bio_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []})\n                                      ]\n                                    }};\n                                trait =\n                                { Types.def_id =\n                                  { Types.index = (2, 26413); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"marker\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Sized\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (27, 20890);\n                                          krate = \"openssl3\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"bio_st\");\n                                             disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []; trait_refs = []})\n                                    ]\n                                  }\n                                }\n                               ]})\n                         ];\n                       trait_refs =\n                       [{ Types.args = [];\n                          impl =\n                          Types.Builtin {\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 26413); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"marker\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Sized\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 628);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"support\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"pimpl\");\n                                          disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Pimpl\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Lifetime\n                                        { Types.kind = Types.ReErased });\n                                      (Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 20890);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"bio_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []})\n                                      ];\n                                    trait_refs =\n                                    [{ Types.args = [];\n                                       impl =\n                                       Types.Builtin {\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 26413);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 20890);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"bio_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ]\n                                           }};\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 26413);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 20890);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"bio_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                           ]\n                                         }\n                                       }\n                                      ]})\n                                ]\n                              }};\n                          trait =\n                          { Types.def_id =\n                            { Types.index = (2, 26413); krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"marker\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"Sized\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (0, 628);\n                                    krate = \"sandwich\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"support\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"pimpl\");\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Pimpl\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Lifetime\n                                      { Types.kind = Types.ReErased });\n                                    (Types.Type\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.index = (27, 20890);\n                                           krate = \"openssl3\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"bio_st\");\n                                              disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args = []; trait_refs = []})\n                                    ];\n                                  trait_refs =\n                                  [{ Types.args = [];\n                                     impl =\n                                     Types.Builtin {\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 26413);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 20890);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"bio_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                           ]\n                                         }};\n                                     trait =\n                                     { Types.def_id =\n                                       { Types.index = (2, 26413);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"marker\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"Sized\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args =\n                                       [(Types.Type\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 20890);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"bio_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []})\n                                         ]\n                                       }\n                                     }\n                                    ]})\n                              ]\n                            }\n                          }\n                         ]};\n                     safety = Types.Unsafe }\n                   })};\n            hir_id = (Some (\"173\", \"6\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 (Types.LocalPath\n                    \"rust/implementation/openssl3_impl/support.rs\"));\n              hi = { Types.col = \"10\"; line = \"112\" };\n              lo = { Types.col = \"8\"; line = \"110\" } };\n            ty =\n            Types.Adt {\n              def_id =\n              { Types.index = (2, 36174); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0 }\n                  ]\n                };\n              generic_args =\n              [(Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (0, 628); krate = \"sandwich\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"support\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"pimpl\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Pimpl\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Lifetime { Types.kind = Types.ReErased });\n                      (Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (27, 20890); krate = \"openssl3\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"bio_st\");\n                                disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []; trait_refs = []})\n                      ];\n                    trait_refs =\n                    [{ Types.args = [];\n                       impl =\n                       Types.Builtin {\n                         trait =\n                         { Types.def_id =\n                           { Types.index = (2, 26413); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"marker\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Sized\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Type\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (27, 20890);\n                                   krate = \"openssl3\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"bio_st\");\n                                      disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []; trait_refs = []})\n                             ]\n                           }};\n                       trait =\n                       { Types.def_id =\n                         { Types.index = (2, 26413); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"marker\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Sized\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (27, 20890);\n                                 krate = \"openssl3\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"bio_st\");\n                                    disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args = []; trait_refs = []})\n                           ]\n                         }\n                       }\n                      ]})\n                ];\n              trait_refs =\n              [{ Types.args = [];\n                 impl =\n                 Types.Builtin {\n                   trait =\n                   { Types.def_id =\n                     { Types.index = (2, 26413); krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"marker\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Sized\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args =\n                     [(Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (0, 628); krate = \"sandwich\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"support\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"pimpl\");\n                                 disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Pimpl\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Lifetime { Types.kind = Types.ReErased });\n                             (Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 20890);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"bio_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []})\n                             ];\n                           trait_refs =\n                           [{ Types.args = [];\n                              impl =\n                              Types.Builtin {\n                                trait =\n                                { Types.def_id =\n                                  { Types.index = (2, 26413); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"marker\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Sized\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (27, 20890);\n                                          krate = \"openssl3\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"bio_st\");\n                                             disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []; trait_refs = []})\n                                    ]\n                                  }};\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 20890);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"bio_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                  ]\n                                }\n                              }\n                             ]})\n                       ]\n                     }};\n                 trait =\n                 { Types.def_id =\n                   { Types.index = (2, 26413); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"marker\");\n                        disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"Sized\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (0, 628); krate = \"sandwich\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"support\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"pimpl\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Pimpl\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Lifetime { Types.kind = Types.ReErased });\n                           (Types.Type\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (27, 20890);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"bio_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []})\n                           ];\n                         trait_refs =\n                         [{ Types.args = [];\n                            impl =\n                            Types.Builtin {\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 20890);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"bio_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                  ]\n                                }};\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 26413); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"marker\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Sized\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 20890);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"bio_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []})\n                                ]\n                              }\n                            }\n                           ]})\n                     ]\n                   }\n                 }\n                ]}\n            });\n    region_scope = { Types.data = Types.Node; id = \"32\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         (Types.LocalPath \"rust/implementation/openssl3_impl/support.rs\"));\n      hi = { Types.col = \"5\"; line = \"113\" };\n      lo = { Types.col = \"4\"; line = \"109\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"173\", \"5\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       (Types.LocalPath \"rust/implementation/openssl3_impl/support.rs\"));\n    hi = { Types.col = \"5\"; line = \"113\" };\n    lo = { Types.col = \"4\"; line = \"109\" } };\n  ty =\n  Types.Adt {\n    def_id =\n    { Types.index = (2, 36174); krate = \"core\";\n      path =\n      [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0 };\n        { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0 }]\n      };\n    generic_args =\n    [(Types.Type\n        Types.Adt {\n          def_id =\n          { Types.index = (0, 628); krate = \"sandwich\";\n            path =\n            [{ Types.data = (Types.TypeNs \"support\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"pimpl\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"Pimpl\"); disambiguator = 0 }]\n            };\n          generic_args =\n          [(Types.Lifetime { Types.kind = Types.ReErased });\n            (Types.Type\n               Types.Adt {\n                 def_id =\n                 { Types.index = (27, 20890); krate = \"openssl3\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"bio_st\"); disambiguator = 0\n                      }\n                     ]\n                   };\n                 generic_args = []; trait_refs = []})\n            ];\n          trait_refs =\n          [{ Types.args = [];\n             impl =\n             Types.Builtin {\n               trait =\n               { Types.def_id =\n                 { Types.index = (2, 26413); krate = \"core\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0\n                      };\n                     { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0\n                       }\n                     ]\n                   };\n                 generic_args =\n                 [(Types.Type\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (27, 20890); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"bio_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []})\n                   ]\n                 }};\n             trait =\n             { Types.def_id =\n               { Types.index = (2, 26413); krate = \"core\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0 }\n                   ]\n                 };\n               generic_args =\n               [(Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (27, 20890); krate = \"openssl3\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"bio_st\");\n                          disambiguator = 0 }\n                         ]\n                       };\n                     generic_args = []; trait_refs = []})\n                 ]\n               }\n             }\n            ]})\n      ];\n    trait_refs =\n    [{ Types.args = [];\n       impl =\n       Types.Builtin {\n         trait =\n         { Types.def_id =\n           { Types.index = (2, 26413); krate = \"core\";\n             path =\n             [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0 };\n               { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0 }]\n             };\n           generic_args =\n           [(Types.Type\n               Types.Adt {\n                 def_id =\n                 { Types.index = (0, 628); krate = \"sandwich\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"support\");\n                      disambiguator = 0 };\n                     { Types.data = (Types.TypeNs \"pimpl\"); disambiguator = 0\n                       };\n                     { Types.data = (Types.TypeNs \"Pimpl\"); disambiguator = 0\n                       }\n                     ]\n                   };\n                 generic_args =\n                 [(Types.Lifetime { Types.kind = Types.ReErased });\n                   (Types.Type\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (27, 20890); krate = \"openssl3\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"bio_st\");\n                             disambiguator = 0 }\n                            ]\n                          };\n                        generic_args = []; trait_refs = []})\n                   ];\n                 trait_refs =\n                 [{ Types.args = [];\n                    impl =\n                    Types.Builtin {\n                      trait =\n                      { Types.def_id =\n                        { Types.index = (2, 26413); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"marker\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Sized\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (27, 20890);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"bio_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []})\n                          ]\n                        }};\n                    trait =\n                    { Types.def_id =\n                      { Types.index = (2, 26413); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"marker\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Sized\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (27, 20890); krate = \"openssl3\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"bio_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []})\n                        ]\n                      }\n                    }\n                   ]})\n             ]\n           }};\n       trait =\n       { Types.def_id =\n         { Types.index = (2, 26413); krate = \"core\";\n           path =\n           [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0 }]\n           };\n         generic_args =\n         [(Types.Type\n             Types.Adt {\n               def_id =\n               { Types.index = (0, 628); krate = \"sandwich\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"support\"); disambiguator = 0\n                    };\n                   { Types.data = (Types.TypeNs \"pimpl\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Pimpl\"); disambiguator = 0 }\n                   ]\n                 };\n               generic_args =\n               [(Types.Lifetime { Types.kind = Types.ReErased });\n                 (Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (27, 20890); krate = \"openssl3\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"bio_st\");\n                           disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = []; trait_refs = []})\n                 ];\n               trait_refs =\n               [{ Types.args = [];\n                  impl =\n                  Types.Builtin {\n                    trait =\n                    { Types.def_id =\n                      { Types.index = (2, 26413); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"marker\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Sized\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (27, 20890); krate = \"openssl3\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"bio_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []})\n                        ]\n                      }};\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 26413); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (27, 20890); krate = \"openssl3\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"bio_st\");\n                               disambiguator = 0 }\n                              ]\n                            };\n                          generic_args = []; trait_refs = []})\n                      ]\n                    }\n                  }\n                 ]})\n           ]\n         }\n       }\n      ]}\n  }"

      <:
      Core.Option.t_Option (Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_bio_st))
    (fun temp_0_ ->
        let _:Prims.unit = temp_0_ in
        Core.Convert.f_into #(Sandwich_proto.Errors.t_SystemError & string)
          #Sandwich.Error.t_Error
          #FStar.Tactics.Typeclasses.solve
          ((Sandwich_proto.Errors.SystemError_SYSTEMERROR_MEMORY
              <:
              Sandwich_proto.Errors.t_SystemError),
            "failed to create a new BIO object"
            <:
            (Sandwich_proto.Errors.t_SystemError & string))
        <:
        Sandwich.Error.t_Error)

let v_EVP_PKEY_from_BIO
      (lib_ctx: Sandwich.Implementation.Openssl3_impl.t_LibCtx)
      (bio: Core.Ptr.Non_null.t_NonNull Openssl3.t_bio_st)
      (format: Sandwich_api_proto.Encoding_format.t_ASN1EncodingFormat)
     =
  Core.Option.impl__ok_or_else #(Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_evp_pkey_st)
    #Sandwich.Error.t_Error
    (Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
        "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Match {\n                   arms =\n                   [{ Types.attributes = [];\n                      body =\n                      { Types.attributes = [];\n                        contents =\n                        Types.Block {\n                          expr =\n                          (Some { Types.attributes = [];\n                                  contents =\n                                  Types.Call {\n                                    args =\n                                    [{ Types.attributes = [];\n                                       contents =\n                                       Types.Call {\n                                         args =\n                                         [{ Types.attributes = [];\n                                            contents =\n                                            Types.VarRef {\n                                              id =\n                                              { Types.id =\n                                                { Types.local_id = \"4\";\n                                                  owner =\n                                                  { Types.index = (0, 187);\n                                                    krate = \"sandwich\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs\n                                                          \"implementation\");\n                                                       disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs\n                                                           \"openssl3_impl\");\n                                                        disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs\n                                                           \"support\");\n                                                        disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.ValueNs\n                                                           \"EVP_PKEY_from_BIO\");\n                                                        disambiguator = 0 }\n                                                      ]\n                                                    }\n                                                  };\n                                                name = \"bio\" }};\n                                            hir_id = (Some (\"187\", \"31\"));\n                                            span =\n                                            { Types.filename =\n                                              (Types.Real\n                                                 (Types.LocalPath\n                                                    \"rust/implementation/openssl3_impl/support.rs\"));\n                                              hi =\n                                              { Types.col = \"27\";\n                                                line = \"210\" };\n                                              lo =\n                                              { Types.col = \"24\";\n                                                line = \"210\" }\n                                              };\n                                            ty =\n                                            Types.Adt {\n                                              def_id =\n                                              { Types.index = (2, 2222);\n                                                krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ptr\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"non_null\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"NonNull\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args =\n                                              [(Types.Type\n                                                  Types.Adt {\n                                                    def_id =\n                                                    { Types.index =\n                                                      (27, 20890);\n                                                      krate = \"openssl3\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"bio_st\");\n                                                         disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args = [];\n                                                    trait_refs = []})\n                                                ];\n                                              trait_refs = []}\n                                            }\n                                           ];\n                                         bounds_impls = [];\n                                         fn_span =\n                                         { Types.filename =\n                                           (Types.Real\n                                              (Types.LocalPath\n                                                 \"rust/implementation/openssl3_impl/support.rs\"));\n                                           hi =\n                                           { Types.col = \"36\"; line = \"210\" };\n                                           lo =\n                                           { Types.col = \"28\"; line = \"210\" }\n                                           };\n                                         from_hir_call = true;\n                                         fun' =\n                                         { Types.attributes = [];\n                                           contents =\n                                           Types.GlobalName {\n                                             id =\n                                             { Types.index = (2, 2245);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"ptr\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"non_null\");\n                                                   disambiguator = 0 };\n                                                 { Types.data = Types.Impl;\n                                                   disambiguator = 3 };\n                                                 { Types.data =\n                                                   (Types.ValueNs \"as_ptr\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               }};\n                                           hir_id = None;\n                                           span =\n                                           { Types.filename =\n                                             (Types.Real\n                                                (Types.LocalPath\n                                                   \"rust/implementation/openssl3_impl/support.rs\"));\n                                             hi =\n                                             { Types.col = \"34\"; line = \"210\"\n                                               };\n                                             lo =\n                                             { Types.col = \"28\"; line = \"210\"\n                                               }\n                                             };\n                                           ty =\n                                           (Types.Arrow\n                                              { Types.bound_vars = [];\n                                                value =\n                                                { Types.abi =\n                                                  Types.Abi {todo = \"Rust\"};\n                                                  c_variadic = false;\n                                                  inputs =\n                                                  [Types.Adt {\n                                                     def_id =\n                                                     { Types.index =\n                                                       (2, 2222);\n                                                       krate = \"core\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs \"ptr\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"non_null\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"NonNull\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       };\n                                                     generic_args =\n                                                     [(Types.Type\n                                                         Types.Adt {\n                                                           def_id =\n                                                           { Types.index =\n                                                             (27, 20890);\n                                                             krate =\n                                                             \"openssl3\";\n                                                             path =\n                                                             [{ Types.data =\n                                                                (Types.TypeNs\n                                                                   \"bio_st\");\n                                                                disambiguator =\n                                                                0 }\n                                                               ]\n                                                             };\n                                                           generic_args = [];\n                                                           trait_refs = []})\n                                                       ];\n                                                     trait_refs = []}\n                                                    ];\n                                                  output =\n                                                  (Types.RawPtr\n                                                     (Types.Adt {\n                                                        def_id =\n                                                        { Types.index =\n                                                          (27, 20890);\n                                                          krate = \"openssl3\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"bio_st\");\n                                                             disambiguator =\n                                                             0 }\n                                                            ]\n                                                          };\n                                                        generic_args = [];\n                                                        trait_refs = []},\n                                                      true));\n                                                  safety = Types.Safe }\n                                                })\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 20890);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"bio_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                           ];\n                                         trait = None;\n                                         ty =\n                                         (Types.Arrow\n                                            { Types.bound_vars = [];\n                                              value =\n                                              { Types.abi =\n                                                Types.Abi {todo = \"Rust\"};\n                                                c_variadic = false;\n                                                inputs =\n                                                [Types.Adt {\n                                                   def_id =\n                                                   { Types.index = (2, 2222);\n                                                     krate = \"core\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs \"ptr\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"non_null\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"NonNull\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args =\n                                                   [(Types.Type\n                                                       Types.Adt {\n                                                         def_id =\n                                                         { Types.index =\n                                                           (27, 20890);\n                                                           krate = \"openssl3\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"bio_st\");\n                                                              disambiguator =\n                                                              0 }\n                                                             ]\n                                                           };\n                                                         generic_args = [];\n                                                         trait_refs = []})\n                                                     ];\n                                                   trait_refs = []}\n                                                  ];\n                                                output =\n                                                (Types.RawPtr\n                                                   (Types.Adt {\n                                                      def_id =\n                                                      { Types.index =\n                                                        (27, 20890);\n                                                        krate = \"openssl3\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"bio_st\");\n                                                           disambiguator = 0\n                                                           }\n                                                          ]\n                                                        };\n                                                      generic_args = [];\n                                                      trait_refs = []},\n                                                    true));\n                                                safety = Types.Safe }\n                                              })};\n                                       hir_id = (Some (\"187\", \"29\"));\n                                       span =\n                                       { Types.filename =\n                                         (Types.Real\n                                            (Types.LocalPath\n                                               \"rust/implementation/openssl3_impl/support.rs\"));\n                                         hi =\n                                         { Types.col = \"36\"; line = \"210\" };\n                                         lo =\n                                         { Types.col = \"24\"; line = \"210\" } };\n                                       ty =\n                                       (Types.RawPtr\n                                          (Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 20890);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"bio_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []},\n                                           true))\n                                       };\n                                      { Types.attributes = [];\n                                        contents =\n                                        Types.Call {args = [];\n                                          bounds_impls =\n                                          [{ Types.args = [];\n                                             impl =\n                                             Types.Builtin {\n                                               trait =\n                                               { Types.def_id =\n                                                 { Types.index = (2, 2148);\n                                                   krate = \"core\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"ptr\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs\n                                                          \"metadata\");\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"Thin\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args =\n                                                 [(Types.Type\n                                                     (Types.RawPtr\n                                                        (Types.Adt {\n                                                           def_id =\n                                                           { Types.index =\n                                                             (27, 21034);\n                                                             krate =\n                                                             \"openssl3\";\n                                                             path =\n                                                             [{ Types.data =\n                                                                (Types.TypeNs\n                                                                   \"evp_pkey_st\");\n                                                                disambiguator =\n                                                                0 }\n                                                               ]\n                                                             };\n                                                           generic_args = [];\n                                                           trait_refs = []},\n                                                         true)))\n                                                   ]\n                                                 }};\n                                             trait =\n                                             { Types.def_id =\n                                               { Types.index = (2, 2148);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"ptr\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"metadata\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Thin\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args =\n                                               [(Types.Type\n                                                   (Types.RawPtr\n                                                      (Types.Adt {\n                                                         def_id =\n                                                         { Types.index =\n                                                           (27, 21034);\n                                                           krate = \"openssl3\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"evp_pkey_st\");\n                                                              disambiguator =\n                                                              0 }\n                                                             ]\n                                                           };\n                                                         generic_args = [];\n                                                         trait_refs = []},\n                                                       true)))\n                                                 ]\n                                               }\n                                             }\n                                            ];\n                                          fn_span =\n                                          { Types.filename =\n                                            (Types.Real\n                                               (Types.LocalPath\n                                                  \"rust/implementation/openssl3_impl/support.rs\"));\n                                            hi =\n                                            { Types.col = \"39\"; line = \"211\"\n                                              };\n                                            lo =\n                                            { Types.col = \"24\"; line = \"211\"\n                                              }\n                                            };\n                                          from_hir_call = true;\n                                          fun' =\n                                          { Types.attributes = [];\n                                            contents =\n                                            Types.GlobalName {\n                                              id =\n                                              { Types.index = (2, 2600);\n                                                krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ptr\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"null_mut\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                }};\n                                            hir_id = None;\n                                            span =\n                                            { Types.filename =\n                                              (Types.Real\n                                                 (Types.LocalPath\n                                                    \"rust/implementation/openssl3_impl/support.rs\"));\n                                              hi =\n                                              { Types.col = \"37\";\n                                                line = \"211\" };\n                                              lo =\n                                              { Types.col = \"24\";\n                                                line = \"211\" }\n                                              };\n                                            ty =\n                                            (Types.Arrow\n                                               { Types.bound_vars = [];\n                                                 value =\n                                                 { Types.abi =\n                                                   Types.Abi {todo = \"Rust\"};\n                                                   c_variadic = false;\n                                                   inputs = [];\n                                                   output =\n                                                   (Types.RawPtr\n                                                      ((Types.RawPtr\n                                                          (Types.Adt {\n                                                             def_id =\n                                                             { Types.index =\n                                                               (27, 21034);\n                                                               krate =\n                                                               \"openssl3\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"evp_pkey_st\");\n                                                                  disambiguator =\n                                                                  0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             [];\n                                                             trait_refs = []},\n                                                           true)),\n                                                       true));\n                                                   safety = Types.Safe }\n                                                 })\n                                            };\n                                          generic_args =\n                                          [(Types.Type\n                                              (Types.RawPtr\n                                                 (Types.Adt {\n                                                    def_id =\n                                                    { Types.index =\n                                                      (27, 21034);\n                                                      krate = \"openssl3\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"evp_pkey_st\");\n                                                         disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args = [];\n                                                    trait_refs = []},\n                                                  true)))\n                                            ];\n                                          trait = None;\n                                          ty =\n                                          (Types.Arrow\n                                             { Types.bound_vars = [];\n                                               value =\n                                               { Types.abi =\n                                                 Types.Abi {todo = \"Rust\"};\n                                                 c_variadic = false;\n                                                 inputs = [];\n                                                 output =\n                                                 (Types.RawPtr\n                                                    ((Types.RawPtr\n                                                        (Types.Adt {\n                                                           def_id =\n                                                           { Types.index =\n                                                             (27, 21034);\n                                                             krate =\n                                                             \"openssl3\";\n                                                             path =\n                                                             [{ Types.data =\n                                                                (Types.TypeNs\n                                                                   \"evp_pkey_st\");\n                                                                disambiguator =\n                                                                0 }\n                                                               ]\n                                                             };\n                                                           generic_args = [];\n                                                           trait_refs = []},\n                                                         true)),\n                                                     true));\n                                                 safety = Types.Safe }\n                                               })};\n                                        hir_id = (Some (\"187\", \"33\"));\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath\n                                                \"rust/implementation/openssl3_impl/support.rs\"));\n                                          hi =\n                                          { Types.col = \"39\"; line = \"211\" };\n                                          lo =\n                                          { Types.col = \"24\"; line = \"211\" }\n                                          };\n                                        ty =\n                                        (Types.RawPtr\n                                           ((Types.RawPtr\n                                               (Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (27, 21034);\n                                                    krate = \"openssl3\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs\n                                                          \"evp_pkey_st\");\n                                                       disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = [];\n                                                  trait_refs = []},\n                                                true)),\n                                            true))\n                                        };\n                                      { Types.attributes = [];\n                                        contents =\n                                        (Types.Adt\n                                           { Types.base = None; fields = [];\n                                             info =\n                                             { Types.typ =\n                                               { Types.index = (2, 36174);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"option\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Option\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               typ_is_record = false;\n                                               typ_is_struct = false;\n                                               type_namespace =\n                                               { Types.index = (2, 36174);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"option\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               variant =\n                                               { Types.index = (2, 36176);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"option\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Option\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"None\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               variant_index = \"0\";\n                                               variant_is_record = false };\n                                             user_ty = None });\n                                        hir_id = (Some (\"187\", \"37\"));\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath\n                                                \"rust/implementation/openssl3_impl/support.rs\"));\n                                          hi =\n                                          { Types.col = \"28\"; line = \"212\" };\n                                          lo =\n                                          { Types.col = \"24\"; line = \"212\" }\n                                          };\n                                        ty =\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (2, 36174);\n                                            krate = \"core\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"option\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"Option\");\n                                                disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args =\n                                          [(Types.Type\n                                              (Types.Arrow\n                                                 { Types.bound_vars = [];\n                                                   value =\n                                                   { Types.abi =\n                                                     Types.Abi {\n                                                       todo =\n                                                       \"C { unwind: false }\"};\n                                                     c_variadic = false;\n                                                     inputs =\n                                                     [(Types.RawPtr\n                                                         ((Types.Int Types.I8),\n                                                          true));\n                                                       (Types.Int Types.I32);\n                                                       (Types.Int Types.I32);\n                                                       (Types.RawPtr\n                                                          (Types.Adt {\n                                                             def_id =\n                                                             { Types.index =\n                                                               (2, 5307);\n                                                               krate = \"core\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"ffi\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"c_void\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             [];\n                                                             trait_refs = []},\n                                                           true))\n                                                       ];\n                                                     output =\n                                                     (Types.Int Types.I32);\n                                                     safety = Types.Unsafe }\n                                                   }))\n                                            ];\n                                          trait_refs =\n                                          [{ Types.args = [];\n                                             impl =\n                                             Types.Builtin {\n                                               trait =\n                                               { Types.def_id =\n                                                 { Types.index = (2, 26413);\n                                                   krate = \"core\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"marker\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"Sized\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args =\n                                                 [(Types.Type\n                                                     (Types.Arrow\n                                                        { Types.bound_vars =\n                                                          [];\n                                                          value =\n                                                          { Types.abi =\n                                                            Types.Abi {\n                                                              todo =\n                                                              \"C { unwind: false }\"};\n                                                            c_variadic =\n                                                            false;\n                                                            inputs =\n                                                            [(Types.RawPtr\n                                                                ((Types.Int\n                                                                    Types.I8),\n                                                                 true));\n                                                              (Types.Int\n                                                                 Types.I32);\n                                                              (Types.Int\n                                                                 Types.I32);\n                                                              (Types.RawPtr\n                                                                 (Types.Adt {\n                                                                    def_id =\n                                                                    { Types.index =\n                                                                    (2, 5307);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ffi\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"c_void\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [];\n                                                                    trait_refs =\n                                                                    []},\n                                                                  true))\n                                                              ];\n                                                            output =\n                                                            (Types.Int\n                                                               Types.I32);\n                                                            safety =\n                                                            Types.Unsafe }\n                                                          }))\n                                                   ]\n                                                 }};\n                                             trait =\n                                             { Types.def_id =\n                                               { Types.index = (2, 26413);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"marker\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Sized\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args =\n                                               [(Types.Type\n                                                   (Types.Arrow\n                                                      { Types.bound_vars = [];\n                                                        value =\n                                                        { Types.abi =\n                                                          Types.Abi {\n                                                            todo =\n                                                            \"C { unwind: false }\"};\n                                                          c_variadic = false;\n                                                          inputs =\n                                                          [(Types.RawPtr\n                                                              ((Types.Int\n                                                                  Types.I8),\n                                                               true));\n                                                            (Types.Int\n                                                               Types.I32);\n                                                            (Types.Int\n                                                               Types.I32);\n                                                            (Types.RawPtr\n                                                               (Types.Adt {\n                                                                  def_id =\n                                                                  { Types.index =\n                                                                    (\n                                                                    2, 5307);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ffi\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"c_void\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                  generic_args =\n                                                                  [];\n                                                                  trait_refs =\n                                                                  []},\n                                                                true))\n                                                            ];\n                                                          output =\n                                                          (Types.Int\n                                                             Types.I32);\n                                                          safety =\n                                                          Types.Unsafe }\n                                                        }))\n                                                 ]\n                                               }\n                                             }\n                                            ]}\n                                        };\n                                      { Types.attributes = [];\n                                        contents =\n                                        Types.Call {args = [];\n                                          bounds_impls =\n                                          [{ Types.args = [];\n                                             impl =\n                                             Types.Builtin {\n                                               trait =\n                                               { Types.def_id =\n                                                 { Types.index = (2, 2148);\n                                                   krate = \"core\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"ptr\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs\n                                                          \"metadata\");\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"Thin\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args =\n                                                 [(Types.Type\n                                                     Types.Adt {\n                                                       def_id =\n                                                       { Types.index =\n                                                         (2, 5307);\n                                                         krate = \"core\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ffi\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"c_void\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       generic_args = [];\n                                                       trait_refs = []})\n                                                   ]\n                                                 }};\n                                             trait =\n                                             { Types.def_id =\n                                               { Types.index = (2, 2148);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"ptr\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"metadata\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Thin\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args =\n                                               [(Types.Type\n                                                   Types.Adt {\n                                                     def_id =\n                                                     { Types.index =\n                                                       (2, 5307);\n                                                       krate = \"core\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs \"ffi\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"c_void\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       };\n                                                     generic_args = [];\n                                                     trait_refs = []})\n                                                 ]\n                                               }\n                                             }\n                                            ];\n                                          fn_span =\n                                          { Types.filename =\n                                            (Types.Real\n                                               (Types.LocalPath\n                                                  \"rust/implementation/openssl3_impl/support.rs\"));\n                                            hi =\n                                            { Types.col = \"39\"; line = \"213\"\n                                              };\n                                            lo =\n                                            { Types.col = \"24\"; line = \"213\"\n                                              }\n                                            };\n                                          from_hir_call = true;\n                                          fun' =\n                                          { Types.attributes = [];\n                                            contents =\n                                            Types.GlobalName {\n                                              id =\n                                              { Types.index = (2, 2600);\n                                                krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ptr\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"null_mut\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                }};\n                                            hir_id = None;\n                                            span =\n                                            { Types.filename =\n                                              (Types.Real\n                                                 (Types.LocalPath\n                                                    \"rust/implementation/openssl3_impl/support.rs\"));\n                                              hi =\n                                              { Types.col = \"37\";\n                                                line = \"213\" };\n                                              lo =\n                                              { Types.col = \"24\";\n                                                line = \"213\" }\n                                              };\n                                            ty =\n                                            (Types.Arrow\n                                               { Types.bound_vars = [];\n                                                 value =\n                                                 { Types.abi =\n                                                   Types.Abi {todo = \"Rust\"};\n                                                   c_variadic = false;\n                                                   inputs = [];\n                                                   output =\n                                                   (Types.RawPtr\n                                                      (Types.Adt {\n                                                         def_id =\n                                                         { Types.index =\n                                                           (2, 5307);\n                                                           krate = \"core\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ffi\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"c_void\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         generic_args = [];\n                                                         trait_refs = []},\n                                                       true));\n                                                   safety = Types.Safe }\n                                                 })\n                                            };\n                                          generic_args =\n                                          [(Types.Type\n                                              Types.Adt {\n                                                def_id =\n                                                { Types.index = (2, 5307);\n                                                  krate = \"core\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs \"ffi\");\n                                                     disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"c_void\");\n                                                      disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = [];\n                                                trait_refs = []})\n                                            ];\n                                          trait = None;\n                                          ty =\n                                          (Types.Arrow\n                                             { Types.bound_vars = [];\n                                               value =\n                                               { Types.abi =\n                                                 Types.Abi {todo = \"Rust\"};\n                                                 c_variadic = false;\n                                                 inputs = [];\n                                                 output =\n                                                 (Types.RawPtr\n                                                    (Types.Adt {\n                                                       def_id =\n                                                       { Types.index =\n                                                         (2, 5307);\n                                                         krate = \"core\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ffi\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"c_void\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       generic_args = [];\n                                                       trait_refs = []},\n                                                     true));\n                                                 safety = Types.Safe }\n                                               })};\n                                        hir_id = (Some (\"187\", \"39\"));\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath\n                                                \"rust/implementation/openssl3_impl/support.rs\"));\n                                          hi =\n                                          { Types.col = \"39\"; line = \"213\" };\n                                          lo =\n                                          { Types.col = \"24\"; line = \"213\" }\n                                          };\n                                        ty =\n                                        (Types.RawPtr\n                                           (Types.Adt {\n                                              def_id =\n                                              { Types.index = (2, 5307);\n                                                krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ffi\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"c_void\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = [];\n                                              trait_refs = []},\n                                            true))\n                                        };\n                                      { Types.attributes = [];\n                                        contents =\n                                        Types.Call {\n                                          args =\n                                          [{ Types.attributes = [];\n                                             contents =\n                                             Types.Call {\n                                               args =\n                                               [{ Types.attributes = [];\n                                                  contents =\n                                                  Types.Borrow {\n                                                    arg =\n                                                    { Types.attributes = [];\n                                                      contents =\n                                                      Types.Deref {\n                                                        arg =\n                                                        { Types.attributes =\n                                                          [];\n                                                          contents =\n                                                          Types.VarRef {\n                                                            id =\n                                                            { Types.id =\n                                                              { Types.local_id =\n                                                                \"2\";\n                                                                owner =\n                                                                { Types.index =\n                                                                  (0, 187);\n                                                                  krate =\n                                                                  \"sandwich\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"implementation\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"openssl3_impl\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"support\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"EVP_PKEY_from_BIO\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  }\n                                                                };\n                                                              name =\n                                                              \"lib_ctx\" }};\n                                                          hir_id = None;\n                                                          span =\n                                                          { Types.filename =\n                                                            (Types.Real\n                                                               (Types.LocalPath\n                                                                  \"rust/implementation/openssl3_impl/support.rs\"));\n                                                            hi =\n                                                            { Types.col =\n                                                              \"31\";\n                                                              line = \"214\" };\n                                                            lo =\n                                                            { Types.col =\n                                                              \"24\";\n                                                              line = \"214\" }\n                                                            };\n                                                          ty =\n                                                          (Types.Ref\n                                                             ({ Types.kind =\n                                                                Types.ReErased\n                                                                },\n                                                              Types.Adt {\n                                                                def_id =\n                                                                { Types.index =\n                                                                  (0, 536);\n                                                                  krate =\n                                                                  \"sandwich\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"implementation\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"openssl3_impl\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"LibCtx\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  };\n                                                                generic_args =\n                                                                [(Types.Lifetime\n                                                                    { Types.kind =\n                                                                    Types.ReErased\n                                                                    })\n                                                                  ];\n                                                                trait_refs =\n                                                                []},\n                                                              false))\n                                                          }};\n                                                      hir_id = None;\n                                                      span =\n                                                      { Types.filename =\n                                                        (Types.Real\n                                                           (Types.LocalPath\n                                                              \"rust/implementation/openssl3_impl/support.rs\"));\n                                                        hi =\n                                                        { Types.col = \"31\";\n                                                          line = \"214\" };\n                                                        lo =\n                                                        { Types.col = \"24\";\n                                                          line = \"214\" }\n                                                        };\n                                                      ty =\n                                                      Types.Adt {\n                                                        def_id =\n                                                        { Types.index =\n                                                          (0, 536);\n                                                          krate = \"sandwich\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"implementation\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"openssl3_impl\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"LibCtx\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          };\n                                                        generic_args =\n                                                        [(Types.Lifetime\n                                                            { Types.kind =\n                                                              Types.ReErased\n                                                              })\n                                                          ];\n                                                        trait_refs = []}\n                                                      };\n                                                    borrow_kind =\n                                                    Types.Shared};\n                                                  hir_id =\n                                                  (Some (\"187\", \"47\"));\n                                                  span =\n                                                  { Types.filename =\n                                                    (Types.Real\n                                                       (Types.LocalPath\n                                                          \"rust/implementation/openssl3_impl/support.rs\"));\n                                                    hi =\n                                                    { Types.col = \"31\";\n                                                      line = \"214\" };\n                                                    lo =\n                                                    { Types.col = \"24\";\n                                                      line = \"214\" }\n                                                    };\n                                                  ty =\n                                                  (Types.Ref\n                                                     ({ Types.kind =\n                                                        Types.ReErased },\n                                                      Types.Adt {\n                                                        def_id =\n                                                        { Types.index =\n                                                          (0, 536);\n                                                          krate = \"sandwich\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"implementation\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"openssl3_impl\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"LibCtx\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          };\n                                                        generic_args =\n                                                        [(Types.Lifetime\n                                                            { Types.kind =\n                                                              Types.ReErased\n                                                              })\n                                                          ];\n                                                        trait_refs = []},\n                                                      false))\n                                                  }\n                                                 ];\n                                               bounds_impls = [];\n                                               fn_span =\n                                               { Types.filename =\n                                                 (Types.Real\n                                                    (Types.LocalPath\n                                                       \"rust/implementation/openssl3_impl/support.rs\"));\n                                                 hi =\n                                                 { Types.col = \"44\";\n                                                   line = \"214\" };\n                                                 lo =\n                                                 { Types.col = \"32\";\n                                                   line = \"214\" }\n                                                 };\n                                               from_hir_call = true;\n                                               fun' =\n                                               { Types.attributes = [];\n                                                 contents =\n                                                 Types.GlobalName {\n                                                   id =\n                                                   { Types.index = (0, 545);\n                                                     krate = \"sandwich\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"implementation\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"openssl3_impl\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         Types.Impl;\n                                                         disambiguator = 3 };\n                                                       { Types.data =\n                                                         (Types.ValueNs\n                                                            \"as_nonnull\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     }};\n                                                 hir_id = None;\n                                                 span =\n                                                 { Types.filename =\n                                                   (Types.Real\n                                                      (Types.LocalPath\n                                                         \"rust/implementation/openssl3_impl/support.rs\"));\n                                                   hi =\n                                                   { Types.col = \"42\";\n                                                     line = \"214\" };\n                                                   lo =\n                                                   { Types.col = \"32\";\n                                                     line = \"214\" }\n                                                   };\n                                                 ty =\n                                                 (Types.Arrow\n                                                    { Types.bound_vars =\n                                                      [(Types.Region\n                                                          (Types.BrNamed\n                                                             ({ Types.index =\n                                                                (0, 1655);\n                                                                krate =\n                                                                \"sandwich\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"implementation\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"openssl3_impl\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                  { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    3 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.ValueNs\n                                                                    \"as_nonnull\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.LifetimeNs\n                                                                    \"'_\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                  ]\n                                                                },\n                                                              \"'_\")))\n                                                        ];\n                                                      value =\n                                                      { Types.abi =\n                                                        Types.Abi {\n                                                          todo = \"Rust\"};\n                                                        c_variadic = false;\n                                                        inputs =\n                                                        [(Types.Ref\n                                                            ({ Types.kind =\n                                                               (Types.ReBound\n                                                                  (\"0\",\n                                                                   { Types.kind =\n                                                                    (Types.BrNamed\n                                                                    ({ Types.index =\n                                                                    (0, 1655);\n                                                                    krate =\n                                                                    \"sandwich\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"implementation\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"openssl3_impl\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    3 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"as_nonnull\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                    disambiguator =\n                                                                    0 }] },\n                                                                    \"'_\"));\n                                                                    var = \"0\"\n                                                                    }))\n                                                               },\n                                                             Types.Adt {\n                                                               def_id =\n                                                               { Types.index =\n                                                                 (0, 536);\n                                                                 krate =\n                                                                 \"sandwich\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"implementation\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"openssl3_impl\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"LibCtx\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               [(Types.Lifetime\n                                                                   { Types.kind =\n                                                                    Types.ReErased\n                                                                    })\n                                                                 ];\n                                                               trait_refs =\n                                                               []},\n                                                             false))\n                                                          ];\n                                                        output =\n                                                        Types.Adt {\n                                                          def_id =\n                                                          { Types.index =\n                                                            (2, 2222);\n                                                            krate = \"core\";\n                                                            path =\n                                                            [{ Types.data =\n                                                               (Types.TypeNs\n                                                                  \"ptr\");\n                                                               disambiguator =\n                                                               0 };\n                                                              { Types.data =\n                                                                (Types.TypeNs\n                                                                   \"non_null\");\n                                                                disambiguator =\n                                                                0 };\n                                                              { Types.data =\n                                                                (Types.TypeNs\n                                                                   \"NonNull\");\n                                                                disambiguator =\n                                                                0 }\n                                                              ]\n                                                            };\n                                                          generic_args =\n                                                          [(Types.Type\n                                                              Types.Adt {\n                                                                def_id =\n                                                                { Types.index =\n                                                                  (27, 21556);\n                                                                  krate =\n                                                                  \"openssl3\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ossl_lib_ctx_st\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  };\n                                                                generic_args =\n                                                                [];\n                                                                trait_refs =\n                                                                []})\n                                                            ];\n                                                          trait_refs = []};\n                                                        safety = Types.Safe }\n                                                      })\n                                                 };\n                                               generic_args =\n                                               [(Types.Lifetime\n                                                   { Types.kind =\n                                                     Types.ReErased })\n                                                 ];\n                                               trait = None;\n                                               ty =\n                                               (Types.Arrow\n                                                  { Types.bound_vars =\n                                                    [(Types.Region\n                                                        (Types.BrNamed\n                                                           ({ Types.index =\n                                                              (0, 1655);\n                                                              krate =\n                                                              \"sandwich\";\n                                                              path =\n                                                              [{ Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"implementation\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                                { Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"openssl3_impl\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                { Types.data =\n                                                                  Types.Impl;\n                                                                  disambiguator =\n                                                                  3 };\n                                                                { Types.data =\n                                                                  (Types.ValueNs\n                                                                    \"as_nonnull\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                { Types.data =\n                                                                  (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                  disambiguator =\n                                                                  0 }\n                                                                ]\n                                                              },\n                                                            \"'_\")))\n                                                      ];\n                                                    value =\n                                                    { Types.abi =\n                                                      Types.Abi {\n                                                        todo = \"Rust\"};\n                                                      c_variadic = false;\n                                                      inputs =\n                                                      [(Types.Ref\n                                                          ({ Types.kind =\n                                                             (Types.ReBound\n                                                                (\"0\",\n                                                                 { Types.kind =\n                                                                   (Types.BrNamed\n                                                                    ({ Types.index =\n                                                                    (0, 1655);\n                                                                    krate =\n                                                                    \"sandwich\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"implementation\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"openssl3_impl\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    3 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"as_nonnull\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                    disambiguator =\n                                                                    0 }] },\n                                                                    \"'_\"));\n                                                                   var = \"0\"\n                                                                   }))\n                                                             },\n                                                           Types.Adt {\n                                                             def_id =\n                                                             { Types.index =\n                                                               (0, 536);\n                                                               krate =\n                                                               \"sandwich\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"implementation\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"openssl3_impl\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"LibCtx\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             [(Types.Lifetime\n                                                                 { Types.kind =\n                                                                   Types.ReErased\n                                                                   })\n                                                               ];\n                                                             trait_refs = []},\n                                                           false))\n                                                        ];\n                                                      output =\n                                                      Types.Adt {\n                                                        def_id =\n                                                        { Types.index =\n                                                          (2, 2222);\n                                                          krate = \"core\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"ptr\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"non_null\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"NonNull\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          };\n                                                        generic_args =\n                                                        [(Types.Type\n                                                            Types.Adt {\n                                                              def_id =\n                                                              { Types.index =\n                                                                (27, 21556);\n                                                                krate =\n                                                                \"openssl3\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"ossl_lib_ctx_st\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                  ]\n                                                                };\n                                                              generic_args =\n                                                              [];\n                                                              trait_refs = []})\n                                                          ];\n                                                        trait_refs = []};\n                                                      safety = Types.Safe }\n                                                    })};\n                                             hir_id = (Some (\"187\", \"45\"));\n                                             span =\n                                             { Types.filename =\n                                               (Types.Real\n                                                  (Types.LocalPath\n                                                     \"rust/implementation/openssl3_impl/support.rs\"));\n                                               hi =\n                                               { Types.col = \"44\";\n                                                 line = \"214\" };\n                                               lo =\n                                               { Types.col = \"24\";\n                                                 line = \"214\" }\n                                               };\n                                             ty =\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (2, 2222);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"ptr\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"non_null\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"NonNull\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args =\n                                               [(Types.Type\n                                                   Types.Adt {\n                                                     def_id =\n                                                     { Types.index =\n                                                       (27, 21556);\n                                                       krate = \"openssl3\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs\n                                                             \"ossl_lib_ctx_st\");\n                                                          disambiguator = 0 }\n                                                         ]\n                                                       };\n                                                     generic_args = [];\n                                                     trait_refs = []})\n                                                 ];\n                                               trait_refs = []}\n                                             }\n                                            ];\n                                          bounds_impls = [];\n                                          fn_span =\n                                          { Types.filename =\n                                            (Types.Real\n                                               (Types.LocalPath\n                                                  \"rust/implementation/openssl3_impl/support.rs\"));\n                                            hi =\n                                            { Types.col = \"53\"; line = \"214\"\n                                              };\n                                            lo =\n                                            { Types.col = \"45\"; line = \"214\"\n                                              }\n                                            };\n                                          from_hir_call = true;\n                                          fun' =\n                                          { Types.attributes = [];\n                                            contents =\n                                            Types.GlobalName {\n                                              id =\n                                              { Types.index = (2, 2245);\n                                                krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ptr\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"non_null\");\n                                                    disambiguator = 0 };\n                                                  { Types.data = Types.Impl;\n                                                    disambiguator = 3 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"as_ptr\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                }};\n                                            hir_id = None;\n                                            span =\n                                            { Types.filename =\n                                              (Types.Real\n                                                 (Types.LocalPath\n                                                    \"rust/implementation/openssl3_impl/support.rs\"));\n                                              hi =\n                                              { Types.col = \"51\";\n                                                line = \"214\" };\n                                              lo =\n                                              { Types.col = \"45\";\n                                                line = \"214\" }\n                                              };\n                                            ty =\n                                            (Types.Arrow\n                                               { Types.bound_vars = [];\n                                                 value =\n                                                 { Types.abi =\n                                                   Types.Abi {todo = \"Rust\"};\n                                                   c_variadic = false;\n                                                   inputs =\n                                                   [Types.Adt {\n                                                      def_id =\n                                                      { Types.index =\n                                                        (2, 2222);\n                                                        krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"ptr\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            (Types.TypeNs\n                                                               \"non_null\");\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.TypeNs\n                                                               \"NonNull\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        };\n                                                      generic_args =\n                                                      [(Types.Type\n                                                          Types.Adt {\n                                                            def_id =\n                                                            { Types.index =\n                                                              (27, 21556);\n                                                              krate =\n                                                              \"openssl3\";\n                                                              path =\n                                                              [{ Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"ossl_lib_ctx_st\");\n                                                                 disambiguator =\n                                                                 0 }\n                                                                ]\n                                                              };\n                                                            generic_args = [];\n                                                            trait_refs = []})\n                                                        ];\n                                                      trait_refs = []}\n                                                     ];\n                                                   output =\n                                                   (Types.RawPtr\n                                                      (Types.Adt {\n                                                         def_id =\n                                                         { Types.index =\n                                                           (27, 21556);\n                                                           krate = \"openssl3\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ossl_lib_ctx_st\");\n                                                              disambiguator =\n                                                              0 }\n                                                             ]\n                                                           };\n                                                         generic_args = [];\n                                                         trait_refs = []},\n                                                       true));\n                                                   safety = Types.Safe }\n                                                 })\n                                            };\n                                          generic_args =\n                                          [(Types.Type\n                                              Types.Adt {\n                                                def_id =\n                                                { Types.index = (27, 21556);\n                                                  krate = \"openssl3\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs\n                                                        \"ossl_lib_ctx_st\");\n                                                     disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = [];\n                                                trait_refs = []})\n                                            ];\n                                          trait = None;\n                                          ty =\n                                          (Types.Arrow\n                                             { Types.bound_vars = [];\n                                               value =\n                                               { Types.abi =\n                                                 Types.Abi {todo = \"Rust\"};\n                                                 c_variadic = false;\n                                                 inputs =\n                                                 [Types.Adt {\n                                                    def_id =\n                                                    { Types.index = (2, 2222);\n                                                      krate = \"core\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs \"ptr\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs\n                                                             \"non_null\");\n                                                          disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs\n                                                             \"NonNull\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args =\n                                                    [(Types.Type\n                                                        Types.Adt {\n                                                          def_id =\n                                                          { Types.index =\n                                                            (27, 21556);\n                                                            krate =\n                                                            \"openssl3\";\n                                                            path =\n                                                            [{ Types.data =\n                                                               (Types.TypeNs\n                                                                  \"ossl_lib_ctx_st\");\n                                                               disambiguator =\n                                                               0 }\n                                                              ]\n                                                            };\n                                                          generic_args = [];\n                                                          trait_refs = []})\n                                                      ];\n                                                    trait_refs = []}\n                                                   ];\n                                                 output =\n                                                 (Types.RawPtr\n                                                    (Types.Adt {\n                                                       def_id =\n                                                       { Types.index =\n                                                         (27, 21556);\n                                                         krate = \"openssl3\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ossl_lib_ctx_st\");\n                                                            disambiguator = 0\n                                                            }\n                                                           ]\n                                                         };\n                                                       generic_args = [];\n                                                       trait_refs = []},\n                                                     true));\n                                                 safety = Types.Safe }\n                                               })};\n                                        hir_id = (Some (\"187\", \"43\"));\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath\n                                                \"rust/implementation/openssl3_impl/support.rs\"));\n                                          hi =\n                                          { Types.col = \"53\"; line = \"214\" };\n                                          lo =\n                                          { Types.col = \"24\"; line = \"214\" }\n                                          };\n                                        ty =\n                                        (Types.RawPtr\n                                           (Types.Adt {\n                                              def_id =\n                                              { Types.index = (27, 21556);\n                                                krate = \"openssl3\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs\n                                                      \"ossl_lib_ctx_st\");\n                                                   disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = [];\n                                              trait_refs = []},\n                                            true))\n                                        };\n                                      { Types.attributes = [];\n                                        contents =\n                                        Types.Call {args = [];\n                                          bounds_impls =\n                                          [{ Types.args = [];\n                                             impl =\n                                             Types.Builtin {\n                                               trait =\n                                               { Types.def_id =\n                                                 { Types.index = (2, 2148);\n                                                   krate = \"core\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"ptr\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs\n                                                          \"metadata\");\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"Thin\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args =\n                                                 [(Types.Type\n                                                     (Types.Int Types.I8))\n                                                   ]\n                                                 }};\n                                             trait =\n                                             { Types.def_id =\n                                               { Types.index = (2, 2148);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"ptr\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"metadata\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Thin\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args =\n                                               [(Types.Type\n                                                   (Types.Int Types.I8))\n                                                 ]\n                                               }\n                                             }\n                                            ];\n                                          fn_span =\n                                          { Types.filename =\n                                            (Types.Real\n                                               (Types.LocalPath\n                                                  \"rust/implementation/openssl3_impl/support.rs\"));\n                                            hi =\n                                            { Types.col = \"35\"; line = \"215\"\n                                              };\n                                            lo =\n                                            { Types.col = \"24\"; line = \"215\"\n                                              }\n                                            };\n                                          from_hir_call = true;\n                                          fun' =\n                                          { Types.attributes = [];\n                                            contents =\n                                            Types.GlobalName {\n                                              id =\n                                              { Types.index = (2, 2598);\n                                                krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ptr\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"null\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                }};\n                                            hir_id = None;\n                                            span =\n                                            { Types.filename =\n                                              (Types.Real\n                                                 (Types.LocalPath\n                                                    \"rust/implementation/openssl3_impl/support.rs\"));\n                                              hi =\n                                              { Types.col = \"33\";\n                                                line = \"215\" };\n                                              lo =\n                                              { Types.col = \"24\";\n                                                line = \"215\" }\n                                              };\n                                            ty =\n                                            (Types.Arrow\n                                               { Types.bound_vars = [];\n                                                 value =\n                                                 { Types.abi =\n                                                   Types.Abi {todo = \"Rust\"};\n                                                   c_variadic = false;\n                                                   inputs = [];\n                                                   output =\n                                                   (Types.RawPtr\n                                                      ((Types.Int Types.I8),\n                                                       false));\n                                                   safety = Types.Safe }\n                                                 })\n                                            };\n                                          generic_args =\n                                          [(Types.Type (Types.Int Types.I8))];\n                                          trait = None;\n                                          ty =\n                                          (Types.Arrow\n                                             { Types.bound_vars = [];\n                                               value =\n                                               { Types.abi =\n                                                 Types.Abi {todo = \"Rust\"};\n                                                 c_variadic = false;\n                                                 inputs = [];\n                                                 output =\n                                                 (Types.RawPtr\n                                                    ((Types.Int Types.I8),\n                                                     false));\n                                                 safety = Types.Safe }\n                                               })};\n                                        hir_id = (Some (\"187\", \"49\"));\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath\n                                                \"rust/implementation/openssl3_impl/support.rs\"));\n                                          hi =\n                                          { Types.col = \"35\"; line = \"215\" };\n                                          lo =\n                                          { Types.col = \"24\"; line = \"215\" }\n                                          };\n                                        ty =\n                                        (Types.RawPtr\n                                           ((Types.Int Types.I8), false))\n                                        }\n                                      ];\n                                    bounds_impls = [];\n                                    fn_span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath\n                                            \"rust/implementation/openssl3_impl/support.rs\"));\n                                      hi = { Types.col = \"21\"; line = \"216\" };\n                                      lo = { Types.col = \"20\"; line = \"209\" }\n                                      };\n                                    from_hir_call = true;\n                                    fun' =\n                                    { Types.attributes = [];\n                                      contents =\n                                      Types.GlobalName {\n                                        id =\n                                        { Types.index = (27, 17731);\n                                          krate = \"openssl3\";\n                                          path =\n                                          [{ Types.data = Types.ForeignMod;\n                                             disambiguator = 3014 };\n                                            { Types.data =\n                                              (Types.ValueNs\n                                                 \"PEM_read_bio_PrivateKey_ex\");\n                                              disambiguator = 0 }\n                                            ]\n                                          }};\n                                      hir_id = None;\n                                      span =\n                                      { Types.filename =\n                                        (Types.Real\n                                           (Types.LocalPath\n                                              \"rust/implementation/openssl3_impl/support.rs\"));\n                                        hi =\n                                        { Types.col = \"56\"; line = \"209\" };\n                                        lo =\n                                        { Types.col = \"20\"; line = \"209\" } };\n                                      ty =\n                                      (Types.Arrow\n                                         { Types.bound_vars = [];\n                                           value =\n                                           { Types.abi =\n                                             Types.Abi {\n                                               todo = \"C { unwind: false }\"};\n                                             c_variadic = false;\n                                             inputs =\n                                             [(Types.RawPtr\n                                                 (Types.Adt {\n                                                    def_id =\n                                                    { Types.index =\n                                                      (27, 20890);\n                                                      krate = \"openssl3\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"bio_st\");\n                                                         disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args = [];\n                                                    trait_refs = []},\n                                                  true));\n                                               (Types.RawPtr\n                                                  ((Types.RawPtr\n                                                      (Types.Adt {\n                                                         def_id =\n                                                         { Types.index =\n                                                           (27, 21034);\n                                                           krate = \"openssl3\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"evp_pkey_st\");\n                                                              disambiguator =\n                                                              0 }\n                                                             ]\n                                                           };\n                                                         generic_args = [];\n                                                         trait_refs = []},\n                                                       true)),\n                                                   true));\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (2, 36174);\n                                                   krate = \"core\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"option\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"Option\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args =\n                                                 [(Types.Type\n                                                     (Types.Arrow\n                                                        { Types.bound_vars =\n                                                          [];\n                                                          value =\n                                                          { Types.abi =\n                                                            Types.Abi {\n                                                              todo =\n                                                              \"C { unwind: false }\"};\n                                                            c_variadic =\n                                                            false;\n                                                            inputs =\n                                                            [(Types.RawPtr\n                                                                ((Types.Int\n                                                                    Types.I8),\n                                                                 true));\n                                                              (Types.Int\n                                                                 Types.I32);\n                                                              (Types.Int\n                                                                 Types.I32);\n                                                              (Types.RawPtr\n                                                                 (Types.Adt {\n                                                                    def_id =\n                                                                    { Types.index =\n                                                                    (2, 5307);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ffi\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"c_void\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [];\n                                                                    trait_refs =\n                                                                    []},\n                                                                  true))\n                                                              ];\n                                                            output =\n                                                            (Types.Int\n                                                               Types.I32);\n                                                            safety =\n                                                            Types.Unsafe }\n                                                          }))\n                                                   ];\n                                                 trait_refs =\n                                                 [{ Types.args = [];\n                                                    impl =\n                                                    Types.Builtin {\n                                                      trait =\n                                                      { Types.def_id =\n                                                        { Types.index =\n                                                          (2, 26413);\n                                                          krate = \"core\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"marker\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"Sized\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          };\n                                                        generic_args =\n                                                        [(Types.Type\n                                                            (Types.Arrow\n                                                               { Types.bound_vars =\n                                                                 [];\n                                                                 value =\n                                                                 { Types.abi =\n                                                                   Types.Abi {\n                                                                    todo =\n                                                                    \"C { unwind: false }\"};\n                                                                   c_variadic =\n                                                                   false;\n                                                                   inputs =\n                                                                   [(Types.RawPtr\n                                                                    ((\n                                                                    Types.Int\n                                                                    Types.I8),\n                                                                    true));\n                                                                    (Types.Int\n                                                                    Types.I32);\n                                                                    (Types.Int\n                                                                    Types.I32);\n                                                                    (Types.RawPtr\n                                                                    (Types.Adt {\n                                                                    def_id =\n                                                                    { Types.index =\n                                                                    (2, 5307);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ffi\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"c_void\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [];\n                                                                    trait_refs =\n                                                                    []}, true))\n                                                                    ];\n                                                                   output =\n                                                                   (Types.Int\n                                                                    Types.I32);\n                                                                   safety =\n                                                                   Types.Unsafe\n                                                                   }\n                                                                 }))\n                                                          ]\n                                                        }};\n                                                    trait =\n                                                    { Types.def_id =\n                                                      { Types.index =\n                                                        (2, 26413);\n                                                        krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"marker\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            (Types.TypeNs\n                                                               \"Sized\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        };\n                                                      generic_args =\n                                                      [(Types.Type\n                                                          (Types.Arrow\n                                                             { Types.bound_vars =\n                                                               [];\n                                                               value =\n                                                               { Types.abi =\n                                                                 Types.Abi {\n                                                                   todo =\n                                                                   \"C { unwind: false }\"};\n                                                                 c_variadic =\n                                                                 false;\n                                                                 inputs =\n                                                                 [(Types.RawPtr\n                                                                    ((\n                                                                    Types.Int\n                                                                    Types.I8),\n                                                                    true));\n                                                                   (Types.Int\n                                                                    Types.I32);\n                                                                   (Types.Int\n                                                                    Types.I32);\n                                                                   (Types.RawPtr\n                                                                    (Types.Adt {\n                                                                    def_id =\n                                                                    { Types.index =\n                                                                    (2, 5307);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ffi\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"c_void\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [];\n                                                                    trait_refs =\n                                                                    []}, true))\n                                                                   ];\n                                                                 output =\n                                                                 (Types.Int\n                                                                    Types.I32);\n                                                                 safety =\n                                                                 Types.Unsafe\n                                                                 }\n                                                               }))\n                                                        ]\n                                                      }\n                                                    }\n                                                   ]};\n                                               (Types.RawPtr\n                                                  (Types.Adt {\n                                                     def_id =\n                                                     { Types.index =\n                                                       (2, 5307);\n                                                       krate = \"core\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs \"ffi\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"c_void\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       };\n                                                     generic_args = [];\n                                                     trait_refs = []},\n                                                   true));\n                                               (Types.RawPtr\n                                                  (Types.Adt {\n                                                     def_id =\n                                                     { Types.index =\n                                                       (27, 21556);\n                                                       krate = \"openssl3\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs\n                                                             \"ossl_lib_ctx_st\");\n                                                          disambiguator = 0 }\n                                                         ]\n                                                       };\n                                                     generic_args = [];\n                                                     trait_refs = []},\n                                                   true));\n                                               (Types.RawPtr\n                                                  ((Types.Int Types.I8),\n                                                   false))\n                                               ];\n                                             output =\n                                             (Types.RawPtr\n                                                (Types.Adt {\n                                                   def_id =\n                                                   { Types.index =\n                                                     (27, 21034);\n                                                     krate = \"openssl3\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"evp_pkey_st\");\n                                                        disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = [];\n                                                   trait_refs = []},\n                                                 true));\n                                             safety = Types.Unsafe }\n                                           })\n                                      };\n                                    generic_args = []; trait = None;\n                                    ty =\n                                    (Types.Arrow\n                                       { Types.bound_vars = [];\n                                         value =\n                                         { Types.abi =\n                                           Types.Abi {\n                                             todo = \"C { unwind: false }\"};\n                                           c_variadic = false;\n                                           inputs =\n                                           [(Types.RawPtr\n                                               (Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (27, 20890);\n                                                    krate = \"openssl3\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"bio_st\");\n                                                       disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = [];\n                                                  trait_refs = []},\n                                                true));\n                                             (Types.RawPtr\n                                                ((Types.RawPtr\n                                                    (Types.Adt {\n                                                       def_id =\n                                                       { Types.index =\n                                                         (27, 21034);\n                                                         krate = \"openssl3\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"evp_pkey_st\");\n                                                            disambiguator = 0\n                                                            }\n                                                           ]\n                                                         };\n                                                       generic_args = [];\n                                                       trait_refs = []},\n                                                     true)),\n                                                 true));\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (2, 36174);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"option\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Option\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args =\n                                               [(Types.Type\n                                                   (Types.Arrow\n                                                      { Types.bound_vars = [];\n                                                        value =\n                                                        { Types.abi =\n                                                          Types.Abi {\n                                                            todo =\n                                                            \"C { unwind: false }\"};\n                                                          c_variadic = false;\n                                                          inputs =\n                                                          [(Types.RawPtr\n                                                              ((Types.Int\n                                                                  Types.I8),\n                                                               true));\n                                                            (Types.Int\n                                                               Types.I32);\n                                                            (Types.Int\n                                                               Types.I32);\n                                                            (Types.RawPtr\n                                                               (Types.Adt {\n                                                                  def_id =\n                                                                  { Types.index =\n                                                                    (\n                                                                    2, 5307);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ffi\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"c_void\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                  generic_args =\n                                                                  [];\n                                                                  trait_refs =\n                                                                  []},\n                                                                true))\n                                                            ];\n                                                          output =\n                                                          (Types.Int\n                                                             Types.I32);\n                                                          safety =\n                                                          Types.Unsafe }\n                                                        }))\n                                                 ];\n                                               trait_refs =\n                                               [{ Types.args = [];\n                                                  impl =\n                                                  Types.Builtin {\n                                                    trait =\n                                                    { Types.def_id =\n                                                      { Types.index =\n                                                        (2, 26413);\n                                                        krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"marker\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            (Types.TypeNs\n                                                               \"Sized\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        };\n                                                      generic_args =\n                                                      [(Types.Type\n                                                          (Types.Arrow\n                                                             { Types.bound_vars =\n                                                               [];\n                                                               value =\n                                                               { Types.abi =\n                                                                 Types.Abi {\n                                                                   todo =\n                                                                   \"C { unwind: false }\"};\n                                                                 c_variadic =\n                                                                 false;\n                                                                 inputs =\n                                                                 [(Types.RawPtr\n                                                                    ((\n                                                                    Types.Int\n                                                                    Types.I8),\n                                                                    true));\n                                                                   (Types.Int\n                                                                    Types.I32);\n                                                                   (Types.Int\n                                                                    Types.I32);\n                                                                   (Types.RawPtr\n                                                                    (Types.Adt {\n                                                                    def_id =\n                                                                    { Types.index =\n                                                                    (2, 5307);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ffi\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"c_void\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [];\n                                                                    trait_refs =\n                                                                    []}, true))\n                                                                   ];\n                                                                 output =\n                                                                 (Types.Int\n                                                                    Types.I32);\n                                                                 safety =\n                                                                 Types.Unsafe\n                                                                 }\n                                                               }))\n                                                        ]\n                                                      }};\n                                                  trait =\n                                                  { Types.def_id =\n                                                    { Types.index =\n                                                      (2, 26413);\n                                                      krate = \"core\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"marker\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs\n                                                             \"Sized\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args =\n                                                    [(Types.Type\n                                                        (Types.Arrow\n                                                           { Types.bound_vars =\n                                                             [];\n                                                             value =\n                                                             { Types.abi =\n                                                               Types.Abi {\n                                                                 todo =\n                                                                 \"C { unwind: false }\"};\n                                                               c_variadic =\n                                                               false;\n                                                               inputs =\n                                                               [(Types.RawPtr\n                                                                   ((\n                                                                    Types.Int\n                                                                    Types.I8),\n                                                                    true));\n                                                                 (Types.Int\n                                                                    Types.I32);\n                                                                 (Types.Int\n                                                                    Types.I32);\n                                                                 (Types.RawPtr\n                                                                    (\n                                                                    Types.Adt {\n                                                                    def_id =\n                                                                    { Types.index =\n                                                                    (2, 5307);\n                                                                    krate =\n                                                                    \"core\";\n                                                                    path =\n                                                                    [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"ffi\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"c_void\");\n                                                                    disambiguator =\n                                                                    0 }] };\n                                                                    generic_args =\n                                                                    [];\n                                                                    trait_refs =\n                                                                    []}, true))\n                                                                 ];\n                                                               output =\n                                                               (Types.Int\n                                                                  Types.I32);\n                                                               safety =\n                                                               Types.Unsafe }\n                                                             }))\n                                                      ]\n                                                    }\n                                                  }\n                                                 ]};\n                                             (Types.RawPtr\n                                                (Types.Adt {\n                                                   def_id =\n                                                   { Types.index = (2, 5307);\n                                                     krate = \"core\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs \"ffi\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"c_void\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = [];\n                                                   trait_refs = []},\n                                                 true));\n                                             (Types.RawPtr\n                                                (Types.Adt {\n                                                   def_id =\n                                                   { Types.index =\n                                                     (27, 21556);\n                                                     krate = \"openssl3\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"ossl_lib_ctx_st\");\n                                                        disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = [];\n                                                   trait_refs = []},\n                                                 true));\n                                             (Types.RawPtr\n                                                ((Types.Int Types.I8), false))\n                                             ];\n                                           output =\n                                           (Types.RawPtr\n                                              (Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 21034);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs\n                                                         \"evp_pkey_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []},\n                                               true));\n                                           safety = Types.Unsafe }\n                                         })};\n                                  hir_id = (Some (\"187\", \"25\"));\n                                  span =\n                                  { Types.filename =\n                                    (Types.Real\n                                       (Types.LocalPath\n                                          \"rust/implementation/openssl3_impl/support.rs\"));\n                                    hi = { Types.col = \"21\"; line = \"216\" };\n                                    lo = { Types.col = \"20\"; line = \"209\" } };\n                                  ty =\n                                  (Types.RawPtr\n                                     (Types.Adt {\n                                        def_id =\n                                        { Types.index = (27, 21034);\n                                          krate = \"openssl3\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"evp_pkey_st\");\n                                             disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []; trait_refs = []},\n                                      true))\n                                  });\n                          region_scope =\n                          { Types.data = Types.Node; id = \"53\" };\n                          safety_mode = Types.Safe;\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3_impl/support.rs\"));\n                            hi = { Types.col = \"17\"; line = \"217\" };\n                            lo = { Types.col = \"67\"; line = \"208\" } };\n                          stmts = []; targeted_by_break = false};\n                        hir_id = (Some (\"187\", \"24\"));\n                        span =\n                        { Types.filename =\n                          (Types.Real\n                             (Types.LocalPath\n                                \"rust/implementation/openssl3_impl/support.rs\"));\n                          hi = { Types.col = \"17\"; line = \"217\" };\n                          lo = { Types.col = \"67\"; line = \"208\" } };\n                        ty =\n                        (Types.RawPtr\n                           (Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21034);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []},\n                            true))\n                        };\n                      guard = None;\n                      lint_level =\n                      (Types.Explicit\n                         { Types.local_id = \"23\";\n                           owner =\n                           { Types.index = (0, 187); krate = \"sandwich\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"implementation\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"openssl3_impl\");\n                                 disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"support\");\n                                 disambiguator = 0 };\n                               { Types.data =\n                                 (Types.ValueNs \"EVP_PKEY_from_BIO\");\n                                 disambiguator = 0 }\n                               ]\n                             }\n                           });\n                      pattern =\n                      { Types.attributes = [];\n                        contents =\n                        Types.Variant {args = [];\n                          info =\n                          { Types.typ =\n                            { Types.index = (20, 251);\n                              krate = \"sandwich_api_proto\";\n                              path =\n                              [{ Types.data =\n                                 (Types.TypeNs \"encoding_format\");\n                                 disambiguator = 0 };\n                                { Types.data =\n                                  (Types.TypeNs \"ASN1EncodingFormat\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            typ_is_record = false; typ_is_struct = false;\n                            type_namespace =\n                            { Types.index = (20, 251);\n                              krate = \"sandwich_api_proto\";\n                              path =\n                              [{ Types.data =\n                                 (Types.TypeNs \"encoding_format\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            variant =\n                            { Types.index = (20, 252);\n                              krate = \"sandwich_api_proto\";\n                              path =\n                              [{ Types.data =\n                                 (Types.TypeNs \"encoding_format\");\n                                 disambiguator = 0 };\n                                { Types.data =\n                                  (Types.TypeNs \"ASN1EncodingFormat\");\n                                  disambiguator = 0 };\n                                { Types.data =\n                                  (Types.TypeNs \"ENCODING_FORMAT_PEM\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            variant_index = \"0\"; variant_is_record = false };\n                          subpatterns = []};\n                        hir_id = None;\n                        span =\n                        { Types.filename =\n                          (Types.Real\n                             (Types.LocalPath\n                                \"rust/implementation/openssl3_impl/support.rs\"));\n                          hi = { Types.col = \"63\"; line = \"208\" };\n                          lo = { Types.col = \"16\"; line = \"208\" } };\n                        ty =\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (20, 251);\n                            krate = \"sandwich_api_proto\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"encoding_format\");\n                               disambiguator = 0 };\n                              { Types.data =\n                                (Types.TypeNs \"ASN1EncodingFormat\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          generic_args = []; trait_refs = []}\n                        };\n                      scope = { Types.data = Types.Node; id = \"23\" };\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/support.rs\"));\n                        hi = { Types.col = \"17\"; line = \"217\" };\n                        lo = { Types.col = \"16\"; line = \"208\" } }\n                      };\n                     { Types.attributes = [];\n                       body =\n                       { Types.attributes = [];\n                         contents =\n                         Types.Call {\n                           args =\n                           [{ Types.attributes = [];\n                              contents =\n                              Types.Call {\n                                args =\n                                [{ Types.attributes = [];\n                                   contents =\n                                   Types.VarRef {\n                                     id =\n                                     { Types.id =\n                                       { Types.local_id = \"4\";\n                                         owner =\n                                         { Types.index = (0, 187);\n                                           krate = \"sandwich\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"implementation\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"openssl3_impl\");\n                                               disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"support\");\n                                               disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.ValueNs\n                                                  \"EVP_PKEY_from_BIO\");\n                                               disambiguator = 0 }\n                                             ]\n                                           }\n                                         };\n                                       name = \"bio\" }};\n                                   hir_id = (Some (\"187\", \"65\"));\n                                   span =\n                                   { Types.filename =\n                                     (Types.Real\n                                        (Types.LocalPath\n                                           \"rust/implementation/openssl3_impl/support.rs\"));\n                                     hi = { Types.col = \"23\"; line = \"219\" };\n                                     lo = { Types.col = \"20\"; line = \"219\" }\n                                     };\n                                   ty =\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (2, 2222);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"ptr\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"non_null\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"NonNull\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args =\n                                     [(Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 20890);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"bio_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []})\n                                       ];\n                                     trait_refs = []}\n                                   }\n                                  ];\n                                bounds_impls = [];\n                                fn_span =\n                                { Types.filename =\n                                  (Types.Real\n                                     (Types.LocalPath\n                                        \"rust/implementation/openssl3_impl/support.rs\"));\n                                  hi = { Types.col = \"32\"; line = \"219\" };\n                                  lo = { Types.col = \"24\"; line = \"219\" } };\n                                from_hir_call = true;\n                                fun' =\n                                { Types.attributes = [];\n                                  contents =\n                                  Types.GlobalName {\n                                    id =\n                                    { Types.index = (2, 2245);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"ptr\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"non_null\");\n                                          disambiguator = 0 };\n                                        { Types.data = Types.Impl;\n                                          disambiguator = 3 };\n                                        { Types.data =\n                                          (Types.ValueNs \"as_ptr\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }};\n                                  hir_id = None;\n                                  span =\n                                  { Types.filename =\n                                    (Types.Real\n                                       (Types.LocalPath\n                                          \"rust/implementation/openssl3_impl/support.rs\"));\n                                    hi = { Types.col = \"30\"; line = \"219\" };\n                                    lo = { Types.col = \"24\"; line = \"219\" } };\n                                  ty =\n                                  (Types.Arrow\n                                     { Types.bound_vars = [];\n                                       value =\n                                       { Types.abi =\n                                         Types.Abi {todo = \"Rust\"};\n                                         c_variadic = false;\n                                         inputs =\n                                         [Types.Adt {\n                                            def_id =\n                                            { Types.index = (2, 2222);\n                                              krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"ptr\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"non_null\");\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"NonNull\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args =\n                                            [(Types.Type\n                                                Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (27, 20890);\n                                                    krate = \"openssl3\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"bio_st\");\n                                                       disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = [];\n                                                  trait_refs = []})\n                                              ];\n                                            trait_refs = []}\n                                           ];\n                                         output =\n                                         (Types.RawPtr\n                                            (Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 20890);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"bio_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []},\n                                             true));\n                                         safety = Types.Safe }\n                                       })\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 20890);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"bio_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                  ];\n                                trait = None;\n                                ty =\n                                (Types.Arrow\n                                   { Types.bound_vars = [];\n                                     value =\n                                     { Types.abi = Types.Abi {todo = \"Rust\"};\n                                       c_variadic = false;\n                                       inputs =\n                                       [Types.Adt {\n                                          def_id =\n                                          { Types.index = (2, 2222);\n                                            krate = \"core\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"ptr\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"non_null\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"NonNull\");\n                                                disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args =\n                                          [(Types.Type\n                                              Types.Adt {\n                                                def_id =\n                                                { Types.index = (27, 20890);\n                                                  krate = \"openssl3\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs \"bio_st\");\n                                                     disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = [];\n                                                trait_refs = []})\n                                            ];\n                                          trait_refs = []}\n                                         ];\n                                       output =\n                                       (Types.RawPtr\n                                          (Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 20890);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"bio_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []},\n                                           true));\n                                       safety = Types.Safe }\n                                     })};\n                              hir_id = (Some (\"187\", \"63\"));\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"rust/implementation/openssl3_impl/support.rs\"));\n                                hi = { Types.col = \"32\"; line = \"219\" };\n                                lo = { Types.col = \"20\"; line = \"219\" } };\n                              ty =\n                              (Types.RawPtr\n                                 (Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 20890);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"bio_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []},\n                                  true))\n                              };\n                             { Types.attributes = [];\n                               contents =\n                               Types.Call {args = [];\n                                 bounds_impls =\n                                 [{ Types.args = [];\n                                    impl =\n                                    Types.Builtin {\n                                      trait =\n                                      { Types.def_id =\n                                        { Types.index = (2, 2148);\n                                          krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"ptr\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"metadata\");\n                                              disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Thin\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args =\n                                        [(Types.Type\n                                            (Types.RawPtr\n                                               (Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (27, 21034);\n                                                    krate = \"openssl3\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs\n                                                          \"evp_pkey_st\");\n                                                       disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = [];\n                                                  trait_refs = []},\n                                                true)))\n                                          ]\n                                        }};\n                                    trait =\n                                    { Types.def_id =\n                                      { Types.index = (2, 2148);\n                                        krate = \"core\";\n                                        path =\n                                        [{ Types.data = (Types.TypeNs \"ptr\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"metadata\");\n                                            disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"Thin\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Type\n                                          (Types.RawPtr\n                                             (Types.Adt {\n                                                def_id =\n                                                { Types.index = (27, 21034);\n                                                  krate = \"openssl3\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs\n                                                        \"evp_pkey_st\");\n                                                     disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = [];\n                                                trait_refs = []},\n                                              true)))\n                                        ]\n                                      }\n                                    }\n                                   ];\n                                 fn_span =\n                                 { Types.filename =\n                                   (Types.Real\n                                      (Types.LocalPath\n                                         \"rust/implementation/openssl3_impl/support.rs\"));\n                                   hi = { Types.col = \"35\"; line = \"220\" };\n                                   lo = { Types.col = \"20\"; line = \"220\" } };\n                                 from_hir_call = true;\n                                 fun' =\n                                 { Types.attributes = [];\n                                   contents =\n                                   Types.GlobalName {\n                                     id =\n                                     { Types.index = (2, 2600);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"ptr\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.ValueNs \"null_mut\");\n                                           disambiguator = 0 }\n                                         ]\n                                       }};\n                                   hir_id = None;\n                                   span =\n                                   { Types.filename =\n                                     (Types.Real\n                                        (Types.LocalPath\n                                           \"rust/implementation/openssl3_impl/support.rs\"));\n                                     hi = { Types.col = \"33\"; line = \"220\" };\n                                     lo = { Types.col = \"20\"; line = \"220\" }\n                                     };\n                                   ty =\n                                   (Types.Arrow\n                                      { Types.bound_vars = [];\n                                        value =\n                                        { Types.abi =\n                                          Types.Abi {todo = \"Rust\"};\n                                          c_variadic = false; inputs = [];\n                                          output =\n                                          (Types.RawPtr\n                                             ((Types.RawPtr\n                                                 (Types.Adt {\n                                                    def_id =\n                                                    { Types.index =\n                                                      (27, 21034);\n                                                      krate = \"openssl3\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"evp_pkey_st\");\n                                                         disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args = [];\n                                                    trait_refs = []},\n                                                  true)),\n                                              true));\n                                          safety = Types.Safe }\n                                        })\n                                   };\n                                 generic_args =\n                                 [(Types.Type\n                                     (Types.RawPtr\n                                        (Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 21034);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"evp_pkey_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []},\n                                         true)))\n                                   ];\n                                 trait = None;\n                                 ty =\n                                 (Types.Arrow\n                                    { Types.bound_vars = [];\n                                      value =\n                                      { Types.abi = Types.Abi {todo = \"Rust\"};\n                                        c_variadic = false; inputs = [];\n                                        output =\n                                        (Types.RawPtr\n                                           ((Types.RawPtr\n                                               (Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (27, 21034);\n                                                    krate = \"openssl3\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs\n                                                          \"evp_pkey_st\");\n                                                       disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = [];\n                                                  trait_refs = []},\n                                                true)),\n                                            true));\n                                        safety = Types.Safe }\n                                      })};\n                               hir_id = (Some (\"187\", \"67\"));\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath\n                                       \"rust/implementation/openssl3_impl/support.rs\"));\n                                 hi = { Types.col = \"35\"; line = \"220\" };\n                                 lo = { Types.col = \"20\"; line = \"220\" } };\n                               ty =\n                               (Types.RawPtr\n                                  ((Types.RawPtr\n                                      (Types.Adt {\n                                         def_id =\n                                         { Types.index = (27, 21034);\n                                           krate = \"openssl3\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"evp_pkey_st\");\n                                              disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args = []; trait_refs = []},\n                                       true)),\n                                   true))\n                               };\n                             { Types.attributes = [];\n                               contents =\n                               Types.Call {\n                                 args =\n                                 [{ Types.attributes = [];\n                                    contents =\n                                    Types.Call {\n                                      args =\n                                      [{ Types.attributes = [];\n                                         contents =\n                                         Types.Borrow {\n                                           arg =\n                                           { Types.attributes = [];\n                                             contents =\n                                             Types.Deref {\n                                               arg =\n                                               { Types.attributes = [];\n                                                 contents =\n                                                 Types.VarRef {\n                                                   id =\n                                                   { Types.id =\n                                                     { Types.local_id = \"2\";\n                                                       owner =\n                                                       { Types.index =\n                                                         (0, 187);\n                                                         krate = \"sandwich\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"implementation\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"openssl3_impl\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"support\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.ValueNs\n                                                                \"EVP_PKEY_from_BIO\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         }\n                                                       };\n                                                     name = \"lib_ctx\" }};\n                                                 hir_id = None;\n                                                 span =\n                                                 { Types.filename =\n                                                   (Types.Real\n                                                      (Types.LocalPath\n                                                         \"rust/implementation/openssl3_impl/support.rs\"));\n                                                   hi =\n                                                   { Types.col = \"27\";\n                                                     line = \"221\" };\n                                                   lo =\n                                                   { Types.col = \"20\";\n                                                     line = \"221\" }\n                                                   };\n                                                 ty =\n                                                 (Types.Ref\n                                                    ({ Types.kind =\n                                                       Types.ReErased },\n                                                     Types.Adt {\n                                                       def_id =\n                                                       { Types.index =\n                                                         (0, 536);\n                                                         krate = \"sandwich\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"implementation\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"openssl3_impl\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"LibCtx\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       generic_args =\n                                                       [(Types.Lifetime\n                                                           { Types.kind =\n                                                             Types.ReErased })\n                                                         ];\n                                                       trait_refs = []},\n                                                     false))\n                                                 }};\n                                             hir_id = None;\n                                             span =\n                                             { Types.filename =\n                                               (Types.Real\n                                                  (Types.LocalPath\n                                                     \"rust/implementation/openssl3_impl/support.rs\"));\n                                               hi =\n                                               { Types.col = \"27\";\n                                                 line = \"221\" };\n                                               lo =\n                                               { Types.col = \"20\";\n                                                 line = \"221\" }\n                                               };\n                                             ty =\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (0, 536);\n                                                 krate = \"sandwich\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs\n                                                       \"implementation\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs\n                                                        \"openssl3_impl\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"LibCtx\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args =\n                                               [(Types.Lifetime\n                                                   { Types.kind =\n                                                     Types.ReErased })\n                                                 ];\n                                               trait_refs = []}\n                                             };\n                                           borrow_kind = Types.Shared};\n                                         hir_id = (Some (\"187\", \"75\"));\n                                         span =\n                                         { Types.filename =\n                                           (Types.Real\n                                              (Types.LocalPath\n                                                 \"rust/implementation/openssl3_impl/support.rs\"));\n                                           hi =\n                                           { Types.col = \"27\"; line = \"221\" };\n                                           lo =\n                                           { Types.col = \"20\"; line = \"221\" }\n                                           };\n                                         ty =\n                                         (Types.Ref\n                                            ({ Types.kind = Types.ReErased },\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (0, 536);\n                                                 krate = \"sandwich\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs\n                                                       \"implementation\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs\n                                                        \"openssl3_impl\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"LibCtx\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args =\n                                               [(Types.Lifetime\n                                                   { Types.kind =\n                                                     Types.ReErased })\n                                                 ];\n                                               trait_refs = []},\n                                             false))\n                                         }\n                                        ];\n                                      bounds_impls = [];\n                                      fn_span =\n                                      { Types.filename =\n                                        (Types.Real\n                                           (Types.LocalPath\n                                              \"rust/implementation/openssl3_impl/support.rs\"));\n                                        hi =\n                                        { Types.col = \"40\"; line = \"221\" };\n                                        lo =\n                                        { Types.col = \"28\"; line = \"221\" } };\n                                      from_hir_call = true;\n                                      fun' =\n                                      { Types.attributes = [];\n                                        contents =\n                                        Types.GlobalName {\n                                          id =\n                                          { Types.index = (0, 545);\n                                            krate = \"sandwich\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"implementation\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"openssl3_impl\");\n                                                disambiguator = 0 };\n                                              { Types.data = Types.Impl;\n                                                disambiguator = 3 };\n                                              { Types.data =\n                                                (Types.ValueNs \"as_nonnull\");\n                                                disambiguator = 0 }\n                                              ]\n                                            }};\n                                        hir_id = None;\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath\n                                                \"rust/implementation/openssl3_impl/support.rs\"));\n                                          hi =\n                                          { Types.col = \"38\"; line = \"221\" };\n                                          lo =\n                                          { Types.col = \"28\"; line = \"221\" }\n                                          };\n                                        ty =\n                                        (Types.Arrow\n                                           { Types.bound_vars =\n                                             [(Types.Region\n                                                 (Types.BrNamed\n                                                    ({ Types.index =\n                                                       (0, 1655);\n                                                       krate = \"sandwich\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs\n                                                             \"implementation\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"openssl3_impl\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           Types.Impl;\n                                                           disambiguator = 3\n                                                           };\n                                                         { Types.data =\n                                                           (Types.ValueNs\n                                                              \"as_nonnull\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.LifetimeNs\n                                                              \"'_\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       },\n                                                     \"'_\")))\n                                               ];\n                                             value =\n                                             { Types.abi =\n                                               Types.Abi {todo = \"Rust\"};\n                                               c_variadic = false;\n                                               inputs =\n                                               [(Types.Ref\n                                                   ({ Types.kind =\n                                                      (Types.ReBound\n                                                         (\"0\",\n                                                          { Types.kind =\n                                                            (Types.BrNamed\n                                                               ({ Types.index =\n                                                                  (0, 1655);\n                                                                  krate =\n                                                                  \"sandwich\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"implementation\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"openssl3_impl\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    3 };\n                                                                    { Types.data =\n                                                                    (Types.ValueNs\n                                                                    \"as_nonnull\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  },\n                                                                \"'_\"));\n                                                            var = \"0\" }))\n                                                      },\n                                                    Types.Adt {\n                                                      def_id =\n                                                      { Types.index =\n                                                        (0, 536);\n                                                        krate = \"sandwich\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"implementation\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            (Types.TypeNs\n                                                               \"openssl3_impl\");\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.TypeNs\n                                                               \"LibCtx\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        };\n                                                      generic_args =\n                                                      [(Types.Lifetime\n                                                          { Types.kind =\n                                                            Types.ReErased })\n                                                        ];\n                                                      trait_refs = []},\n                                                    false))\n                                                 ];\n                                               output =\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (2, 2222);\n                                                   krate = \"core\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"ptr\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs\n                                                          \"non_null\");\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs\n                                                          \"NonNull\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args =\n                                                 [(Types.Type\n                                                     Types.Adt {\n                                                       def_id =\n                                                       { Types.index =\n                                                         (27, 21556);\n                                                         krate = \"openssl3\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ossl_lib_ctx_st\");\n                                                            disambiguator = 0\n                                                            }\n                                                           ]\n                                                         };\n                                                       generic_args = [];\n                                                       trait_refs = []})\n                                                   ];\n                                                 trait_refs = []};\n                                               safety = Types.Safe }\n                                             })\n                                        };\n                                      generic_args =\n                                      [(Types.Lifetime\n                                          { Types.kind = Types.ReErased })\n                                        ];\n                                      trait = None;\n                                      ty =\n                                      (Types.Arrow\n                                         { Types.bound_vars =\n                                           [(Types.Region\n                                               (Types.BrNamed\n                                                  ({ Types.index = (0, 1655);\n                                                     krate = \"sandwich\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"implementation\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"openssl3_impl\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         Types.Impl;\n                                                         disambiguator = 3 };\n                                                       { Types.data =\n                                                         (Types.ValueNs\n                                                            \"as_nonnull\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.LifetimeNs\n                                                            \"'_\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     },\n                                                   \"'_\")))\n                                             ];\n                                           value =\n                                           { Types.abi =\n                                             Types.Abi {todo = \"Rust\"};\n                                             c_variadic = false;\n                                             inputs =\n                                             [(Types.Ref\n                                                 ({ Types.kind =\n                                                    (Types.ReBound\n                                                       (\"0\",\n                                                        { Types.kind =\n                                                          (Types.BrNamed\n                                                             ({ Types.index =\n                                                                (0, 1655);\n                                                                krate =\n                                                                \"sandwich\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"implementation\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"openssl3_impl\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                  { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    3 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.ValueNs\n                                                                    \"as_nonnull\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.LifetimeNs\n                                                                    \"'_\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                  ]\n                                                                },\n                                                              \"'_\"));\n                                                          var = \"0\" }))\n                                                    },\n                                                  Types.Adt {\n                                                    def_id =\n                                                    { Types.index = (0, 536);\n                                                      krate = \"sandwich\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"implementation\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs\n                                                             \"openssl3_impl\");\n                                                          disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs\n                                                             \"LibCtx\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args =\n                                                    [(Types.Lifetime\n                                                        { Types.kind =\n                                                          Types.ReErased })\n                                                      ];\n                                                    trait_refs = []},\n                                                  false))\n                                               ];\n                                             output =\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (2, 2222);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"ptr\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"non_null\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"NonNull\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args =\n                                               [(Types.Type\n                                                   Types.Adt {\n                                                     def_id =\n                                                     { Types.index =\n                                                       (27, 21556);\n                                                       krate = \"openssl3\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs\n                                                             \"ossl_lib_ctx_st\");\n                                                          disambiguator = 0 }\n                                                         ]\n                                                       };\n                                                     generic_args = [];\n                                                     trait_refs = []})\n                                                 ];\n                                               trait_refs = []};\n                                             safety = Types.Safe }\n                                           })};\n                                    hir_id = (Some (\"187\", \"73\"));\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath\n                                            \"rust/implementation/openssl3_impl/support.rs\"));\n                                      hi = { Types.col = \"40\"; line = \"221\" };\n                                      lo = { Types.col = \"20\"; line = \"221\" }\n                                      };\n                                    ty =\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (2, 2222);\n                                        krate = \"core\";\n                                        path =\n                                        [{ Types.data = (Types.TypeNs \"ptr\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"non_null\");\n                                            disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"NonNull\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Type\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 21556);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs\n                                                    \"ossl_lib_ctx_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []})\n                                        ];\n                                      trait_refs = []}\n                                    }\n                                   ];\n                                 bounds_impls = [];\n                                 fn_span =\n                                 { Types.filename =\n                                   (Types.Real\n                                      (Types.LocalPath\n                                         \"rust/implementation/openssl3_impl/support.rs\"));\n                                   hi = { Types.col = \"49\"; line = \"221\" };\n                                   lo = { Types.col = \"41\"; line = \"221\" } };\n                                 from_hir_call = true;\n                                 fun' =\n                                 { Types.attributes = [];\n                                   contents =\n                                   Types.GlobalName {\n                                     id =\n                                     { Types.index = (2, 2245);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"ptr\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"non_null\");\n                                           disambiguator = 0 };\n                                         { Types.data = Types.Impl;\n                                           disambiguator = 3 };\n                                         { Types.data =\n                                           (Types.ValueNs \"as_ptr\");\n                                           disambiguator = 0 }\n                                         ]\n                                       }};\n                                   hir_id = None;\n                                   span =\n                                   { Types.filename =\n                                     (Types.Real\n                                        (Types.LocalPath\n                                           \"rust/implementation/openssl3_impl/support.rs\"));\n                                     hi = { Types.col = \"47\"; line = \"221\" };\n                                     lo = { Types.col = \"41\"; line = \"221\" }\n                                     };\n                                   ty =\n                                   (Types.Arrow\n                                      { Types.bound_vars = [];\n                                        value =\n                                        { Types.abi =\n                                          Types.Abi {todo = \"Rust\"};\n                                          c_variadic = false;\n                                          inputs =\n                                          [Types.Adt {\n                                             def_id =\n                                             { Types.index = (2, 2222);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"ptr\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"non_null\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"NonNull\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args =\n                                             [(Types.Type\n                                                 Types.Adt {\n                                                   def_id =\n                                                   { Types.index =\n                                                     (27, 21556);\n                                                     krate = \"openssl3\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"ossl_lib_ctx_st\");\n                                                        disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = [];\n                                                   trait_refs = []})\n                                               ];\n                                             trait_refs = []}\n                                            ];\n                                          output =\n                                          (Types.RawPtr\n                                             (Types.Adt {\n                                                def_id =\n                                                { Types.index = (27, 21556);\n                                                  krate = \"openssl3\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs\n                                                        \"ossl_lib_ctx_st\");\n                                                     disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = [];\n                                                trait_refs = []},\n                                              true));\n                                          safety = Types.Safe }\n                                        })\n                                   };\n                                 generic_args =\n                                 [(Types.Type\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (27, 21556);\n                                         krate = \"openssl3\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"ossl_lib_ctx_st\");\n                                            disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []; trait_refs = []})\n                                   ];\n                                 trait = None;\n                                 ty =\n                                 (Types.Arrow\n                                    { Types.bound_vars = [];\n                                      value =\n                                      { Types.abi = Types.Abi {todo = \"Rust\"};\n                                        c_variadic = false;\n                                        inputs =\n                                        [Types.Adt {\n                                           def_id =\n                                           { Types.index = (2, 2222);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"ptr\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"non_null\");\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"NonNull\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 21556);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs\n                                                         \"ossl_lib_ctx_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ];\n                                           trait_refs = []}\n                                          ];\n                                        output =\n                                        (Types.RawPtr\n                                           (Types.Adt {\n                                              def_id =\n                                              { Types.index = (27, 21556);\n                                                krate = \"openssl3\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs\n                                                      \"ossl_lib_ctx_st\");\n                                                   disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = [];\n                                              trait_refs = []},\n                                            true));\n                                        safety = Types.Safe }\n                                      })};\n                               hir_id = (Some (\"187\", \"71\"));\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath\n                                       \"rust/implementation/openssl3_impl/support.rs\"));\n                                 hi = { Types.col = \"49\"; line = \"221\" };\n                                 lo = { Types.col = \"20\"; line = \"221\" } };\n                               ty =\n                               (Types.RawPtr\n                                  (Types.Adt {\n                                     def_id =\n                                     { Types.index = (27, 21556);\n                                       krate = \"openssl3\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"ossl_lib_ctx_st\");\n                                          disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []},\n                                   true))\n                               };\n                             { Types.attributes = [];\n                               contents =\n                               Types.Call {args = [];\n                                 bounds_impls =\n                                 [{ Types.args = [];\n                                    impl =\n                                    Types.Builtin {\n                                      trait =\n                                      { Types.def_id =\n                                        { Types.index = (2, 2148);\n                                          krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"ptr\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"metadata\");\n                                              disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Thin\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args =\n                                        [(Types.Type (Types.Int Types.I8))] }};\n                                    trait =\n                                    { Types.def_id =\n                                      { Types.index = (2, 2148);\n                                        krate = \"core\";\n                                        path =\n                                        [{ Types.data = (Types.TypeNs \"ptr\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"metadata\");\n                                            disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"Thin\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Type (Types.Int Types.I8))] }\n                                    }\n                                   ];\n                                 fn_span =\n                                 { Types.filename =\n                                   (Types.Real\n                                      (Types.LocalPath\n                                         \"rust/implementation/openssl3_impl/support.rs\"));\n                                   hi = { Types.col = \"31\"; line = \"222\" };\n                                   lo = { Types.col = \"20\"; line = \"222\" } };\n                                 from_hir_call = true;\n                                 fun' =\n                                 { Types.attributes = [];\n                                   contents =\n                                   Types.GlobalName {\n                                     id =\n                                     { Types.index = (2, 2598);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"ptr\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.ValueNs \"null\");\n                                           disambiguator = 0 }\n                                         ]\n                                       }};\n                                   hir_id = None;\n                                   span =\n                                   { Types.filename =\n                                     (Types.Real\n                                        (Types.LocalPath\n                                           \"rust/implementation/openssl3_impl/support.rs\"));\n                                     hi = { Types.col = \"29\"; line = \"222\" };\n                                     lo = { Types.col = \"20\"; line = \"222\" }\n                                     };\n                                   ty =\n                                   (Types.Arrow\n                                      { Types.bound_vars = [];\n                                        value =\n                                        { Types.abi =\n                                          Types.Abi {todo = \"Rust\"};\n                                          c_variadic = false; inputs = [];\n                                          output =\n                                          (Types.RawPtr\n                                             ((Types.Int Types.I8), false));\n                                          safety = Types.Safe }\n                                        })\n                                   };\n                                 generic_args =\n                                 [(Types.Type (Types.Int Types.I8))];\n                                 trait = None;\n                                 ty =\n                                 (Types.Arrow\n                                    { Types.bound_vars = [];\n                                      value =\n                                      { Types.abi = Types.Abi {todo = \"Rust\"};\n                                        c_variadic = false; inputs = [];\n                                        output =\n                                        (Types.RawPtr\n                                           ((Types.Int Types.I8), false));\n                                        safety = Types.Safe }\n                                      })};\n                               hir_id = (Some (\"187\", \"77\"));\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath\n                                       \"rust/implementation/openssl3_impl/support.rs\"));\n                                 hi = { Types.col = \"31\"; line = \"222\" };\n                                 lo = { Types.col = \"20\"; line = \"222\" } };\n                               ty =\n                               (Types.RawPtr ((Types.Int Types.I8), false)) }\n                             ];\n                           bounds_impls = [];\n                           fn_span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath\n                                   \"rust/implementation/openssl3_impl/support.rs\"));\n                             hi = { Types.col = \"17\"; line = \"223\" };\n                             lo = { Types.col = \"67\"; line = \"218\" } };\n                           from_hir_call = true;\n                           fun' =\n                           { Types.attributes = [];\n                             contents =\n                             Types.GlobalName {\n                               id =\n                               { Types.index = (27, 16739);\n                                 krate = \"openssl3\";\n                                 path =\n                                 [{ Types.data = Types.ForeignMod;\n                                    disambiguator = 2518 };\n                                   { Types.data =\n                                     (Types.ValueNs \"d2i_PrivateKey_ex_bio\");\n                                     disambiguator = 0 }\n                                   ]\n                                 }};\n                             hir_id = None;\n                             span =\n                             { Types.filename =\n                               (Types.Real\n                                  (Types.LocalPath\n                                     \"rust/implementation/openssl3_impl/support.rs\"));\n                               hi = { Types.col = \"98\"; line = \"218\" };\n                               lo = { Types.col = \"67\"; line = \"218\" } };\n                             ty =\n                             (Types.Arrow\n                                { Types.bound_vars = [];\n                                  value =\n                                  { Types.abi =\n                                    Types.Abi {todo = \"C { unwind: false }\"};\n                                    c_variadic = false;\n                                    inputs =\n                                    [(Types.RawPtr\n                                        (Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 20890);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"bio_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []},\n                                         true));\n                                      (Types.RawPtr\n                                         ((Types.RawPtr\n                                             (Types.Adt {\n                                                def_id =\n                                                { Types.index = (27, 21034);\n                                                  krate = \"openssl3\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs\n                                                        \"evp_pkey_st\");\n                                                     disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = [];\n                                                trait_refs = []},\n                                              true)),\n                                          true));\n                                      (Types.RawPtr\n                                         (Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 21556);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs\n                                                    \"ossl_lib_ctx_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []},\n                                          true));\n                                      (Types.RawPtr\n                                         ((Types.Int Types.I8), false))\n                                      ];\n                                    output =\n                                    (Types.RawPtr\n                                       (Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 21034);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"evp_pkey_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []},\n                                        true));\n                                    safety = Types.Unsafe }\n                                  })\n                             };\n                           generic_args = []; trait = None;\n                           ty =\n                           (Types.Arrow\n                              { Types.bound_vars = [];\n                                value =\n                                { Types.abi =\n                                  Types.Abi {todo = \"C { unwind: false }\"};\n                                  c_variadic = false;\n                                  inputs =\n                                  [(Types.RawPtr\n                                      (Types.Adt {\n                                         def_id =\n                                         { Types.index = (27, 20890);\n                                           krate = \"openssl3\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"bio_st\");\n                                              disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args = []; trait_refs = []},\n                                       true));\n                                    (Types.RawPtr\n                                       ((Types.RawPtr\n                                           (Types.Adt {\n                                              def_id =\n                                              { Types.index = (27, 21034);\n                                                krate = \"openssl3\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs\n                                                      \"evp_pkey_st\");\n                                                   disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = [];\n                                              trait_refs = []},\n                                            true)),\n                                        true));\n                                    (Types.RawPtr\n                                       (Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 21556);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs\n                                                  \"ossl_lib_ctx_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []},\n                                        true));\n                                    (Types.RawPtr\n                                       ((Types.Int Types.I8), false))\n                                    ];\n                                  output =\n                                  (Types.RawPtr\n                                     (Types.Adt {\n                                        def_id =\n                                        { Types.index = (27, 21034);\n                                          krate = \"openssl3\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"evp_pkey_st\");\n                                             disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []; trait_refs = []},\n                                      true));\n                                  safety = Types.Unsafe }\n                                })};\n                         hir_id = (Some (\"187\", \"59\"));\n                         span =\n                         { Types.filename =\n                           (Types.Real\n                              (Types.LocalPath\n                                 \"rust/implementation/openssl3_impl/support.rs\"));\n                           hi = { Types.col = \"17\"; line = \"223\" };\n                           lo = { Types.col = \"67\"; line = \"218\" } };\n                         ty =\n                         (Types.RawPtr\n                            (Types.Adt {\n                               def_id =\n                               { Types.index = (27, 21034);\n                                 krate = \"openssl3\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                                    disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args = []; trait_refs = []},\n                             true))\n                         };\n                       guard = None;\n                       lint_level =\n                       (Types.Explicit\n                          { Types.local_id = \"58\";\n                            owner =\n                            { Types.index = (0, 187); krate = \"sandwich\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"implementation\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"openssl3_impl\");\n                                  disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"support\");\n                                  disambiguator = 0 };\n                                { Types.data =\n                                  (Types.ValueNs \"EVP_PKEY_from_BIO\");\n                                  disambiguator = 0 }\n                                ]\n                              }\n                            });\n                       pattern =\n                       { Types.attributes = [];\n                         contents =\n                         Types.Variant {args = [];\n                           info =\n                           { Types.typ =\n                             { Types.index = (20, 251);\n                               krate = \"sandwich_api_proto\";\n                               path =\n                               [{ Types.data =\n                                  (Types.TypeNs \"encoding_format\");\n                                  disambiguator = 0 };\n                                 { Types.data =\n                                   (Types.TypeNs \"ASN1EncodingFormat\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             typ_is_record = false; typ_is_struct = false;\n                             type_namespace =\n                             { Types.index = (20, 251);\n                               krate = \"sandwich_api_proto\";\n                               path =\n                               [{ Types.data =\n                                  (Types.TypeNs \"encoding_format\");\n                                  disambiguator = 0 }\n                                 ]\n                               };\n                             variant =\n                             { Types.index = (20, 255);\n                               krate = \"sandwich_api_proto\";\n                               path =\n                               [{ Types.data =\n                                  (Types.TypeNs \"encoding_format\");\n                                  disambiguator = 0 };\n                                 { Types.data =\n                                   (Types.TypeNs \"ASN1EncodingFormat\");\n                                   disambiguator = 0 };\n                                 { Types.data =\n                                   (Types.TypeNs \"ENCODING_FORMAT_DER\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             variant_index = \"1\"; variant_is_record = false };\n                           subpatterns = []};\n                         hir_id = None;\n                         span =\n                         { Types.filename =\n                           (Types.Real\n                              (Types.LocalPath\n                                 \"rust/implementation/openssl3_impl/support.rs\"));\n                           hi = { Types.col = \"63\"; line = \"218\" };\n                           lo = { Types.col = \"16\"; line = \"218\" } };\n                         ty =\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (20, 251);\n                             krate = \"sandwich_api_proto\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"encoding_format\");\n                                disambiguator = 0 };\n                               { Types.data =\n                                 (Types.TypeNs \"ASN1EncodingFormat\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []; trait_refs = []}\n                         };\n                       scope = { Types.data = Types.Node; id = \"58\" };\n                       span =\n                       { Types.filename =\n                         (Types.Real\n                            (Types.LocalPath\n                               \"rust/implementation/openssl3_impl/support.rs\"));\n                         hi = { Types.col = \"17\"; line = \"223\" };\n                         lo = { Types.col = \"16\"; line = \"218\" } }\n                       }\n                     ];\n                   scrutinee =\n                   { Types.attributes = [];\n                     contents =\n                     Types.VarRef {\n                       id =\n                       { Types.id =\n                         { Types.local_id = \"6\";\n                           owner =\n                           { Types.index = (0, 187); krate = \"sandwich\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"implementation\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"openssl3_impl\");\n                                 disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"support\");\n                                 disambiguator = 0 };\n                               { Types.data =\n                                 (Types.ValueNs \"EVP_PKEY_from_BIO\");\n                                 disambiguator = 0 }\n                               ]\n                             }\n                           };\n                         name = \"format\" }};\n                     hir_id = (Some (\"187\", \"17\"));\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3_impl/support.rs\"));\n                       hi = { Types.col = \"24\"; line = \"207\" };\n                       lo = { Types.col = \"18\"; line = \"207\" } };\n                     ty =\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (20, 251);\n                         krate = \"sandwich_api_proto\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"encoding_format\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"ASN1EncodingFormat\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []}\n                     }};\n                 hir_id = (Some (\"187\", \"16\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      (Types.LocalPath\n                         \"rust/implementation/openssl3_impl/support.rs\"));\n                   hi = { Types.col = \"13\"; line = \"224\" };\n                   lo = { Types.col = \"12\"; line = \"207\" } };\n                 ty =\n                 (Types.RawPtr\n                    (Types.Adt {\n                       def_id =\n                       { Types.index = (27, 21034); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []},\n                     true))\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.PointerCoercion {\n                    cast = (Types.ClosureFnPointer Types.Safe);\n                    source =\n                    { Types.attributes = [];\n                      contents =\n                      Types.Closure {\n                        body =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Call {\n                            args =\n                            [{ Types.attributes = [];\n                               contents =\n                               Types.VarRef {\n                                 id =\n                                 { Types.id =\n                                   { Types.local_id = \"83\";\n                                     owner =\n                                     { Types.index = (0, 187);\n                                       krate = \"sandwich\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"implementation\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"openssl3_impl\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"support\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.ValueNs \"EVP_PKEY_from_BIO\");\n                                           disambiguator = 0 }\n                                         ]\n                                       }\n                                     };\n                                   name = \"x\" }};\n                               hir_id = (Some (\"187\", \"88\"));\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath\n                                       \"rust/implementation/openssl3_impl/support.rs\"));\n                                 hi = { Types.col = \"41\"; line = \"225\" };\n                                 lo = { Types.col = \"40\"; line = \"225\" } };\n                               ty =\n                               (Types.RawPtr\n                                  (Types.Adt {\n                                     def_id =\n                                     { Types.index = (27, 21034);\n                                       krate = \"openssl3\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"evp_pkey_st\");\n                                          disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []},\n                                   true))\n                               }\n                              ];\n                            bounds_impls = [];\n                            fn_span =\n                            { Types.filename =\n                              (Types.Real\n                                 (Types.LocalPath\n                                    \"rust/implementation/openssl3_impl/support.rs\"));\n                              hi = { Types.col = \"42\"; line = \"225\" };\n                              lo = { Types.col = \"16\"; line = \"225\" } };\n                            from_hir_call = true;\n                            fun' =\n                            { Types.attributes = [];\n                              contents =\n                              Types.GlobalName {\n                                id =\n                                { Types.index = (27, 14935);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data = Types.ForeignMod;\n                                     disambiguator = 1685 };\n                                    { Types.data =\n                                      (Types.ValueNs \"EVP_PKEY_free\");\n                                      disambiguator = 0 }\n                                    ]\n                                  }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"rust/implementation/openssl3_impl/support.rs\"));\n                                hi = { Types.col = \"39\"; line = \"225\" };\n                                lo = { Types.col = \"16\"; line = \"225\" } };\n                              ty =\n                              (Types.Arrow\n                                 { Types.bound_vars = [];\n                                   value =\n                                   { Types.abi =\n                                     Types.Abi {todo = \"C { unwind: false }\"};\n                                     c_variadic = false;\n                                     inputs =\n                                     [(Types.RawPtr\n                                         (Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 21034);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"evp_pkey_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []},\n                                          true))\n                                       ];\n                                     output = (Types.Tuple []);\n                                     safety = Types.Unsafe }\n                                   })\n                              };\n                            generic_args = []; trait = None;\n                            ty =\n                            (Types.Arrow\n                               { Types.bound_vars = [];\n                                 value =\n                                 { Types.abi =\n                                   Types.Abi {todo = \"C { unwind: false }\"};\n                                   c_variadic = false;\n                                   inputs =\n                                   [(Types.RawPtr\n                                       (Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 21034);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"evp_pkey_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []},\n                                        true))\n                                     ];\n                                   output = (Types.Tuple []);\n                                   safety = Types.Unsafe }\n                                 })};\n                          hir_id = (Some (\"187\", \"84\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3_impl/support.rs\"));\n                            hi = { Types.col = \"42\"; line = \"225\" };\n                            lo = { Types.col = \"16\"; line = \"225\" } };\n                          ty = (Types.Tuple []) };\n                        movability = None;\n                        params =\n                        [{ Types.attributes = []; hir_id = None; pat = None;\n                           self_kind = None;\n                           ty =\n                           (Types.Ref\n                              ({ Types.kind = Types.ReErased },\n                               (Types.Arrow\n                                  { Types.bound_vars = [];\n                                    value =\n                                    { Types.abi = Types.Abi {todo = \"Rust\"};\n                                      c_variadic = false;\n                                      inputs =\n                                      [(Types.RawPtr\n                                          (Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 21034);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"evp_pkey_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []},\n                                           true))\n                                        ];\n                                      output = (Types.Tuple []);\n                                      safety = Types.Safe }\n                                    }),\n                               false));\n                           ty_span = None };\n                          { Types.attributes = [];\n                            hir_id =\n                            (Some { Types.local_id = \"82\";\n                                    owner =\n                                    { Types.index = (0, 187);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"implementation\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"openssl3_impl\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"support\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.ValueNs \"EVP_PKEY_from_BIO\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    });\n                            pat =\n                            (Some { Types.attributes = [];\n                                    contents =\n                                    Types.Binding {is_primary = true;\n                                      mode =\n                                      { Types.by_ref = Types.No;\n                                        mutability = false };\n                                      subpattern = None;\n                                      ty =\n                                      (Types.RawPtr\n                                         (Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 21034);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"evp_pkey_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []},\n                                          true));\n                                      var =\n                                      { Types.id =\n                                        { Types.local_id = \"83\";\n                                          owner =\n                                          { Types.index = (0, 187);\n                                            krate = \"sandwich\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"implementation\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"openssl3_impl\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"support\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.ValueNs\n                                                   \"EVP_PKEY_from_BIO\");\n                                                disambiguator = 0 }\n                                              ]\n                                            }\n                                          };\n                                        name = \"x\" }};\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath\n                                            \"rust/implementation/openssl3_impl/support.rs\"));\n                                      hi = { Types.col = \"14\"; line = \"225\" };\n                                      lo = { Types.col = \"13\"; line = \"225\" }\n                                      };\n                                    ty =\n                                    (Types.RawPtr\n                                       (Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 21034);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"evp_pkey_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []},\n                                        true))\n                                    });\n                            self_kind = None;\n                            ty =\n                            (Types.RawPtr\n                               (Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 21034);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"evp_pkey_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                true));\n                            ty_span = None }\n                          ];\n                        upvars = []};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/support.rs\"));\n                        hi = { Types.col = \"42\"; line = \"225\" };\n                        lo = { Types.col = \"12\"; line = \"225\" } };\n                      ty =\n                      (Types.Arrow\n                         { Types.bound_vars = [];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [(Types.RawPtr\n                                 (Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 21034);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"evp_pkey_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []},\n                                  true))\n                               ];\n                             output = (Types.Tuple []); safety = Types.Safe }\n                           })\n                      }};\n                  hir_id = (Some (\"187\", \"81\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath\n                          \"rust/implementation/openssl3_impl/support.rs\"));\n                    hi = { Types.col = \"42\"; line = \"225\" };\n                    lo = { Types.col = \"12\"; line = \"225\" } };\n                  ty =\n                  (Types.Arrow\n                     { Types.bound_vars = [];\n                       value =\n                       { Types.abi = Types.Abi {todo = \"Rust\"};\n                         c_variadic = false;\n                         inputs =\n                         [(Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 21034);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data =\n                                     (Types.TypeNs \"evp_pkey_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true))\n                           ];\n                         output = (Types.Tuple []); safety = Types.Safe }\n                       })\n                  }\n                ];\n              bounds_impls = [];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath\n                      \"rust/implementation/openssl3_impl/support.rs\"));\n                hi = { Types.col = \"9\"; line = \"226\" };\n                lo = { Types.col = \"8\"; line = \"206\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (0, 642); krate = \"sandwich\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"support\");\n                       disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"pimpl\");\n                        disambiguator = 0 };\n                      { Types.data = Types.Impl; disambiguator = 2 };\n                      { Types.data = (Types.ValueNs \"new\"); disambiguator = 0\n                        }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath\n                        \"rust/implementation/openssl3_impl/support.rs\"));\n                  hi = { Types.col = \"18\"; line = \"206\" };\n                  lo = { Types.col = \"8\"; line = \"206\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"Rust\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           (Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21034);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []},\n                            true));\n                         (Types.Arrow\n                            { Types.bound_vars = [];\n                              value =\n                              { Types.abi = Types.Abi {todo = \"Rust\"};\n                                c_variadic = false;\n                                inputs =\n                                [(Types.RawPtr\n                                    (Types.Adt {\n                                       def_id =\n                                       { Types.index = (27, 21034);\n                                         krate = \"openssl3\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"evp_pkey_st\");\n                                            disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []; trait_refs = []},\n                                     true))\n                                  ];\n                                output = (Types.Tuple []);\n                                safety = Types.Safe }\n                              })\n                         ];\n                       output =\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (2, 36174); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"option\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Option\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (0, 628); krate = \"sandwich\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"support\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"pimpl\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"Pimpl\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Lifetime\n                                   { Types.kind = Types.ReErased });\n                                 (Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 21034);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"evp_pkey_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                 ];\n                               trait_refs =\n                               [{ Types.args = [];\n                                  impl =\n                                  Types.Builtin {\n                                    trait =\n                                    { Types.def_id =\n                                      { Types.index = (2, 26413);\n                                        krate = \"core\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"marker\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"Sized\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Type\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 21034);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"evp_pkey_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []})\n                                        ]\n                                      }};\n                                  trait =\n                                  { Types.def_id =\n                                    { Types.index = (2, 26413);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"marker\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Sized\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 21034);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"evp_pkey_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []})\n                                      ]\n                                    }\n                                  }\n                                 ]})\n                           ];\n                         trait_refs =\n                         [{ Types.args = [];\n                            impl =\n                            Types.Builtin {\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (0, 628);\n                                        krate = \"sandwich\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"support\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"pimpl\");\n                                            disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"Pimpl\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Lifetime\n                                          { Types.kind = Types.ReErased });\n                                        (Types.Type\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 21034);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"evp_pkey_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []})\n                                        ];\n                                      trait_refs =\n                                      [{ Types.args = [];\n                                         impl =\n                                         Types.Builtin {\n                                           trait =\n                                           { Types.def_id =\n                                             { Types.index = (2, 26413);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"marker\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"Sized\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args =\n                                             [(Types.Type\n                                                 Types.Adt {\n                                                   def_id =\n                                                   { Types.index =\n                                                     (27, 21034);\n                                                     krate = \"openssl3\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"evp_pkey_st\");\n                                                        disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = [];\n                                                   trait_refs = []})\n                                               ]\n                                             }};\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 26413);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 21034);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs\n                                                         \"evp_pkey_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ]\n                                           }\n                                         }\n                                        ]})\n                                  ]\n                                }};\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 26413); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"marker\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Sized\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 628);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"support\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"pimpl\");\n                                          disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Pimpl\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Lifetime\n                                        { Types.kind = Types.ReErased });\n                                      (Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 21034);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"evp_pkey_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []})\n                                      ];\n                                    trait_refs =\n                                    [{ Types.args = [];\n                                       impl =\n                                       Types.Builtin {\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 26413);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 21034);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs\n                                                         \"evp_pkey_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ]\n                                           }};\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 26413);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 21034);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs\n                                                       \"evp_pkey_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                           ]\n                                         }\n                                       }\n                                      ]})\n                                ]\n                              }\n                            }\n                           ]};\n                       safety = Types.Unsafe }\n                     })\n                };\n              generic_args =\n              [(Types.Lifetime { Types.kind = Types.ReErased });\n                (Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (27, 21034); krate = \"openssl3\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                          disambiguator = 0 }\n                         ]\n                       };\n                     generic_args = []; trait_refs = []})\n                ];\n              trait = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         (Types.Adt {\n                            def_id =\n                            { Types.index = (27, 21034); krate = \"openssl3\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []},\n                          true));\n                       (Types.Arrow\n                          { Types.bound_vars = [];\n                            value =\n                            { Types.abi = Types.Abi {todo = \"Rust\"};\n                              c_variadic = false;\n                              inputs =\n                              [(Types.RawPtr\n                                  (Types.Adt {\n                                     def_id =\n                                     { Types.index = (27, 21034);\n                                       krate = \"openssl3\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"evp_pkey_st\");\n                                          disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []},\n                                   true))\n                                ];\n                              output = (Types.Tuple []); safety = Types.Safe\n                              }\n                            })\n                       ];\n                     output =\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (2, 36174); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"option\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Option\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (0, 628); krate = \"sandwich\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"support\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"pimpl\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"Pimpl\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Lifetime { Types.kind = Types.ReErased });\n                               (Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 21034);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"evp_pkey_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []})\n                               ];\n                             trait_refs =\n                             [{ Types.args = [];\n                                impl =\n                                Types.Builtin {\n                                  trait =\n                                  { Types.def_id =\n                                    { Types.index = (2, 26413);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"marker\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Sized\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 21034);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"evp_pkey_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []})\n                                      ]\n                                    }};\n                                trait =\n                                { Types.def_id =\n                                  { Types.index = (2, 26413); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"marker\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Sized\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (27, 21034);\n                                          krate = \"openssl3\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"evp_pkey_st\");\n                                             disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []; trait_refs = []})\n                                    ]\n                                  }\n                                }\n                               ]})\n                         ];\n                       trait_refs =\n                       [{ Types.args = [];\n                          impl =\n                          Types.Builtin {\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 26413); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"marker\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Sized\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 628);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"support\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"pimpl\");\n                                          disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Pimpl\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Lifetime\n                                        { Types.kind = Types.ReErased });\n                                      (Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 21034);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"evp_pkey_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []})\n                                      ];\n                                    trait_refs =\n                                    [{ Types.args = [];\n                                       impl =\n                                       Types.Builtin {\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 26413);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 21034);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs\n                                                         \"evp_pkey_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ]\n                                           }};\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 26413);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 21034);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs\n                                                       \"evp_pkey_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                           ]\n                                         }\n                                       }\n                                      ]})\n                                ]\n                              }};\n                          trait =\n                          { Types.def_id =\n                            { Types.index = (2, 26413); krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"marker\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"Sized\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (0, 628);\n                                    krate = \"sandwich\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"support\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"pimpl\");\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Pimpl\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Lifetime\n                                      { Types.kind = Types.ReErased });\n                                    (Types.Type\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.index = (27, 21034);\n                                           krate = \"openssl3\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"evp_pkey_st\");\n                                              disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args = []; trait_refs = []})\n                                    ];\n                                  trait_refs =\n                                  [{ Types.args = [];\n                                     impl =\n                                     Types.Builtin {\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 26413);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 21034);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs\n                                                       \"evp_pkey_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                           ]\n                                         }};\n                                     trait =\n                                     { Types.def_id =\n                                       { Types.index = (2, 26413);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"marker\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"Sized\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args =\n                                       [(Types.Type\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 21034);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"evp_pkey_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []})\n                                         ]\n                                       }\n                                     }\n                                    ]})\n                              ]\n                            }\n                          }\n                         ]};\n                     safety = Types.Unsafe }\n                   })};\n            hir_id = (Some (\"187\", \"10\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 (Types.LocalPath\n                    \"rust/implementation/openssl3_impl/support.rs\"));\n              hi = { Types.col = \"9\"; line = \"226\" };\n              lo = { Types.col = \"8\"; line = \"206\" } };\n            ty =\n            Types.Adt {\n              def_id =\n              { Types.index = (2, 36174); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0 }\n                  ]\n                };\n              generic_args =\n              [(Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (0, 628); krate = \"sandwich\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"support\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"pimpl\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Pimpl\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Lifetime { Types.kind = Types.ReErased });\n                      (Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (27, 21034); krate = \"openssl3\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                                disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []; trait_refs = []})\n                      ];\n                    trait_refs =\n                    [{ Types.args = [];\n                       impl =\n                       Types.Builtin {\n                         trait =\n                         { Types.def_id =\n                           { Types.index = (2, 26413); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"marker\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Sized\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Type\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (27, 21034);\n                                   krate = \"openssl3\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"evp_pkey_st\");\n                                      disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []; trait_refs = []})\n                             ]\n                           }};\n                       trait =\n                       { Types.def_id =\n                         { Types.index = (2, 26413); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"marker\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Sized\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (27, 21034);\n                                 krate = \"openssl3\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                                    disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args = []; trait_refs = []})\n                           ]\n                         }\n                       }\n                      ]})\n                ];\n              trait_refs =\n              [{ Types.args = [];\n                 impl =\n                 Types.Builtin {\n                   trait =\n                   { Types.def_id =\n                     { Types.index = (2, 26413); krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"marker\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Sized\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args =\n                     [(Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (0, 628); krate = \"sandwich\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"support\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"pimpl\");\n                                 disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Pimpl\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Lifetime { Types.kind = Types.ReErased });\n                             (Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 21034);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"evp_pkey_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []})\n                             ];\n                           trait_refs =\n                           [{ Types.args = [];\n                              impl =\n                              Types.Builtin {\n                                trait =\n                                { Types.def_id =\n                                  { Types.index = (2, 26413); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"marker\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Sized\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (27, 21034);\n                                          krate = \"openssl3\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"evp_pkey_st\");\n                                             disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []; trait_refs = []})\n                                    ]\n                                  }};\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 21034);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"evp_pkey_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                  ]\n                                }\n                              }\n                             ]})\n                       ]\n                     }};\n                 trait =\n                 { Types.def_id =\n                   { Types.index = (2, 26413); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"marker\");\n                        disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"Sized\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (0, 628); krate = \"sandwich\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"support\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"pimpl\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Pimpl\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Lifetime { Types.kind = Types.ReErased });\n                           (Types.Type\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (27, 21034);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data =\n                                     (Types.TypeNs \"evp_pkey_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []})\n                           ];\n                         trait_refs =\n                         [{ Types.args = [];\n                            impl =\n                            Types.Builtin {\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 21034);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"evp_pkey_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                  ]\n                                }};\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 26413); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"marker\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Sized\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 21034);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"evp_pkey_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []})\n                                ]\n                              }\n                            }\n                           ]})\n                     ]\n                   }\n                 }\n                ]}\n            });\n    region_scope = { Types.data = Types.Node; id = \"91\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         (Types.LocalPath \"rust/implementation/openssl3_impl/support.rs\"));\n      hi = { Types.col = \"5\"; line = \"227\" };\n      lo = { Types.col = \"4\"; line = \"205\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"187\", \"9\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       (Types.LocalPath \"rust/implementation/openssl3_impl/support.rs\"));\n    hi = { Types.col = \"5\"; line = \"227\" };\n    lo = { Types.col = \"4\"; line = \"205\" } };\n  ty =\n  Types.Adt {\n    def_id =\n    { Types.index = (2, 36174); krate = \"core\";\n      path =\n      [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0 };\n        { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0 }]\n      };\n    generic_args =\n    [(Types.Type\n        Types.Adt {\n          def_id =\n          { Types.index = (0, 628); krate = \"sandwich\";\n            path =\n            [{ Types.data = (Types.TypeNs \"support\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"pimpl\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"Pimpl\"); disambiguator = 0 }]\n            };\n          generic_args =\n          [(Types.Lifetime { Types.kind = Types.ReErased });\n            (Types.Type\n               Types.Adt {\n                 def_id =\n                 { Types.index = (27, 21034); krate = \"openssl3\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                      disambiguator = 0 }\n                     ]\n                   };\n                 generic_args = []; trait_refs = []})\n            ];\n          trait_refs =\n          [{ Types.args = [];\n             impl =\n             Types.Builtin {\n               trait =\n               { Types.def_id =\n                 { Types.index = (2, 26413); krate = \"core\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0\n                      };\n                     { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0\n                       }\n                     ]\n                   };\n                 generic_args =\n                 [(Types.Type\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (27, 21034); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []})\n                   ]\n                 }};\n             trait =\n             { Types.def_id =\n               { Types.index = (2, 26413); krate = \"core\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0 }\n                   ]\n                 };\n               generic_args =\n               [(Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (27, 21034); krate = \"openssl3\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                          disambiguator = 0 }\n                         ]\n                       };\n                     generic_args = []; trait_refs = []})\n                 ]\n               }\n             }\n            ]})\n      ];\n    trait_refs =\n    [{ Types.args = [];\n       impl =\n       Types.Builtin {\n         trait =\n         { Types.def_id =\n           { Types.index = (2, 26413); krate = \"core\";\n             path =\n             [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0 };\n               { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0 }]\n             };\n           generic_args =\n           [(Types.Type\n               Types.Adt {\n                 def_id =\n                 { Types.index = (0, 628); krate = \"sandwich\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"support\");\n                      disambiguator = 0 };\n                     { Types.data = (Types.TypeNs \"pimpl\"); disambiguator = 0\n                       };\n                     { Types.data = (Types.TypeNs \"Pimpl\"); disambiguator = 0\n                       }\n                     ]\n                   };\n                 generic_args =\n                 [(Types.Lifetime { Types.kind = Types.ReErased });\n                   (Types.Type\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (27, 21034); krate = \"openssl3\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                             disambiguator = 0 }\n                            ]\n                          };\n                        generic_args = []; trait_refs = []})\n                   ];\n                 trait_refs =\n                 [{ Types.args = [];\n                    impl =\n                    Types.Builtin {\n                      trait =\n                      { Types.def_id =\n                        { Types.index = (2, 26413); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"marker\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Sized\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21034);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []})\n                          ]\n                        }};\n                    trait =\n                    { Types.def_id =\n                      { Types.index = (2, 26413); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"marker\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Sized\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (27, 21034); krate = \"openssl3\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []})\n                        ]\n                      }\n                    }\n                   ]})\n             ]\n           }};\n       trait =\n       { Types.def_id =\n         { Types.index = (2, 26413); krate = \"core\";\n           path =\n           [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0 }]\n           };\n         generic_args =\n         [(Types.Type\n             Types.Adt {\n               def_id =\n               { Types.index = (0, 628); krate = \"sandwich\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"support\"); disambiguator = 0\n                    };\n                   { Types.data = (Types.TypeNs \"pimpl\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Pimpl\"); disambiguator = 0 }\n                   ]\n                 };\n               generic_args =\n               [(Types.Lifetime { Types.kind = Types.ReErased });\n                 (Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (27, 21034); krate = \"openssl3\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                           disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = []; trait_refs = []})\n                 ];\n               trait_refs =\n               [{ Types.args = [];\n                  impl =\n                  Types.Builtin {\n                    trait =\n                    { Types.def_id =\n                      { Types.index = (2, 26413); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"marker\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Sized\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (27, 21034); krate = \"openssl3\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []})\n                        ]\n                      }};\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 26413); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (27, 21034); krate = \"openssl3\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"evp_pkey_st\");\n                               disambiguator = 0 }\n                              ]\n                            };\n                          generic_args = []; trait_refs = []})\n                      ]\n                    }\n                  }\n                 ]})\n           ]\n         }\n       }\n      ]}\n  }"

      <:
      Core.Option.t_Option (Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_evp_pkey_st))
    (fun temp_0_ ->
        let _:Prims.unit = temp_0_ in
        let res:Alloc.String.t_String =
          Alloc.Fmt.format (Core.Fmt.impl_2__new_v1 (sz 1)
                (sz 1)
                (let list = ["failed to read the private key: "] in
                  FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 1);
                  Rust_primitives.Hax.array_of_list 1 list)
                (let list =
                    [
                      Core.Fmt.Rt.impl_1__new_display #Alloc.String.t_String
                        (errstr () <: Alloc.String.t_String)
                      <:
                      Core.Fmt.Rt.t_Argument
                    ]
                  in
                  FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 1);
                  Rust_primitives.Hax.array_of_list 1 list)
              <:
              Core.Fmt.t_Arguments)
        in
        Core.Convert.f_into #(Sandwich_proto.Errors.t_PrivateKeyError & Alloc.String.t_String)
          #Sandwich.Error.t_Error
          #FStar.Tactics.Typeclasses.solve
          ((Sandwich_proto.Errors.PrivateKeyError_PRIVATEKEYERROR_MALFORMED
              <:
              Sandwich_proto.Errors.t_PrivateKeyError),
            res
            <:
            (Sandwich_proto.Errors.t_PrivateKeyError & Alloc.String.t_String)))

let v_X509_from_BIO
      (lib_ctx: Sandwich.Implementation.Openssl3_impl.t_LibCtx)
      (bio: Core.Ptr.Non_null.t_NonNull Openssl3.t_bio_st)
      (format: Sandwich_api_proto.Encoding_format.t_ASN1EncodingFormat)
     =
  match
    Core.Option.impl__ok_or #(Core.Ptr.Non_null.t_NonNull Openssl3.t_x509_st)
      #(Sandwich_proto.Errors.t_SystemError & string)
      (Rust_primitives.Hax.failure "(RefMut) Fatal error: something we considered as impossible occurred! \027[1mPlease report this by submitting an issue on GitHub!\027[0m\nDetails: expected an arrow type here"
          "rust_primitives::hax::failure(\"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\"core::ptr::non_null::impl_3__new\")::<openssl3::t_x509_st>(rust_primitives::hax::failure(\"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\"rust_primitives::hax::failure(\\n        \\\"(AST import) Unsafe blocks are not allowed.\\\",\\n        \\\"{ Types.attributes = [];\\\\n  contents =\\\\n  Types.Block {\\\\n    expr =\\\\n    (Some { Types.attributes = [];\\\\n            contents =\\\\n            Types.Call {\\\\n              args =\\\\n              [{ Types.attributes = [];\\\\n                 contents =\\\\n                 Types.Call {\\\\n                   args =\\\\n                   [{ Types.attributes = [];\\\\n                      contents =\\\\n                      Types.Call {\\\\n                        args =\\\\n                        [{ Types.attributes = [];\\\\n                           contents =\\\\n                           Types.Borrow {\\\\n                             arg =\\\\n                             { Types.attributes = [];\\\\n                               contents =\\\\n                               Types.Deref {\\\\n                                 arg =\\\\n                                 { Types.attributes = [];\\\\n                                   contents =\\\\n                                   Types.VarRef {\\\\n                                     id =\\\\n                                     { Types.id =\\\\n                                       { Types.local_id = \\\\\\\"2\\\\\\\";\\\\n                                         owner =\\\\n                                         { Types.index = (0, 181);\\\\n                                           krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                           path =\\\\n                                           [{ Types.data =\\\\n                                              (Types.TypeNs \\\\\\\"implementation\\\\\\\");\\\\n                                              disambiguator = 0 };\\\\n                                             { Types.data =\\\\n                                               (Types.TypeNs \\\\\\\"openssl3_impl\\\\\\\");\\\\n                                               disambiguator = 0 };\\\\n                                             { Types.data =\\\\n                                               (Types.TypeNs \\\\\\\"support\\\\\\\");\\\\n                                               disambiguator = 0 };\\\\n                                             { Types.data =\\\\n                                               (Types.ValueNs \\\\\\\"X509_from_BIO\\\\\\\");\\\\n                                               disambiguator = 0 }\\\\n                                             ]\\\\n                                           }\\\\n                                         };\\\\n                                       name = \\\\\\\"lib_ctx\\\\\\\" }};\\\\n                                   hir_id = None;\\\\n                                   span =\\\\n                                   { Types.filename =\\\\n                                     (Types.Real\\\\n                                        (Types.LocalPath\\\\n                                           \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                                     hi = { Types.col = \\\\\\\"59\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n                                     lo = { Types.col = \\\\\\\"52\\\\\\\"; line = \\\\\\\"159\\\\\\\" }\\\\n                                     };\\\\n                                   ty =\\\\n                                   (Types.Ref\\\\n                                      ({ Types.kind = Types.ReErased },\\\\n                                       Types.Adt {\\\\n                                         def_id =\\\\n                                         { Types.index = (0, 536);\\\\n                                           krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                           path =\\\\n                                           [{ Types.data =\\\\n                                              (Types.TypeNs \\\\\\\"implementation\\\\\\\");\\\\n                                              disambiguator = 0 };\\\\n                                             { Types.data =\\\\n                                               (Types.TypeNs \\\\\\\"openssl3_impl\\\\\\\");\\\\n                                               disambiguator = 0 };\\\\n                                             { Types.data =\\\\n                                               (Types.TypeNs \\\\\\\"LibCtx\\\\\\\");\\\\n                                               disambiguator = 0 }\\\\n                                             ]\\\\n                                           };\\\\n                                         generic_args =\\\\n                                         [(Types.Lifetime\\\\n                                             { Types.kind = Types.ReErased })\\\\n                                           ];\\\\n                                         trait_refs = []},\\\\n                                       false))\\\\n                                   }};\\\\n                               hir_id = None;\\\\n                               span =\\\\n                               { Types.filename =\\\\n                                 (Types.Real\\\\n                                    (Types.LocalPath\\\\n                                       \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                                 hi = { Types.col = \\\\\\\"59\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n                                 lo = { Types.col = \\\\\\\"52\\\\\\\"; line = \\\\\\\"159\\\\\\\" } };\\\\n                               ty =\\\\n                               Types.Adt {\\\\n                                 def_id =\\\\n                                 { Types.index = (0, 536);\\\\n                                   krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                   path =\\\\n                                   [{ Types.data =\\\\n                                      (Types.TypeNs \\\\\\\"implementation\\\\\\\");\\\\n                                      disambiguator = 0 };\\\\n                                     { Types.data =\\\\n                                       (Types.TypeNs \\\\\\\"openssl3_impl\\\\\\\");\\\\n                                       disambiguator = 0 };\\\\n                                     { Types.data = (Types.TypeNs \\\\\\\"LibCtx\\\\\\\");\\\\n                                       disambiguator = 0 }\\\\n                                     ]\\\\n                                   };\\\\n                                 generic_args =\\\\n                                 [(Types.Lifetime\\\\n                                     { Types.kind = Types.ReErased })\\\\n                                   ];\\\\n                                 trait_refs = []}\\\\n                               };\\\\n                             borrow_kind = Types.Shared};\\\\n                           hir_id = (Some (\\\\\\\"181\\\\\\\", \\\\\\\"25\\\\\\\"));\\\\n                           span =\\\\n                           { Types.filename =\\\\n                             (Types.Real\\\\n                                (Types.LocalPath\\\\n                                   \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                             hi = { Types.col = \\\\\\\"59\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n                             lo = { Types.col = \\\\\\\"52\\\\\\\"; line = \\\\\\\"159\\\\\\\" } };\\\\n                           ty =\\\\n                           (Types.Ref\\\\n                              ({ Types.kind = Types.ReErased },\\\\n                               Types.Adt {\\\\n                                 def_id =\\\\n                                 { Types.index = (0, 536);\\\\n                                   krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                   path =\\\\n                                   [{ Types.data =\\\\n                                      (Types.TypeNs \\\\\\\"implementation\\\\\\\");\\\\n                                      disambiguator = 0 };\\\\n                                     { Types.data =\\\\n                                       (Types.TypeNs \\\\\\\"openssl3_impl\\\\\\\");\\\\n                                       disambiguator = 0 };\\\\n                                     { Types.data = (Types.TypeNs \\\\\\\"LibCtx\\\\\\\");\\\\n                                       disambiguator = 0 }\\\\n                                     ]\\\\n                                   };\\\\n                                 generic_args =\\\\n                                 [(Types.Lifetime\\\\n                                     { Types.kind = Types.ReErased })\\\\n                                   ];\\\\n                                 trait_refs = []},\\\\n                               false))\\\\n                           }\\\\n                          ];\\\\n                        bounds_impls = [];\\\\n                        fn_span =\\\\n                        { Types.filename =\\\\n                          (Types.Real\\\\n                             (Types.LocalPath\\\\n                                \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                          hi = { Types.col = \\\\\\\"72\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n                          lo = { Types.col = \\\\\\\"60\\\\\\\"; line = \\\\\\\"159\\\\\\\" } };\\\\n                        from_hir_call = true;\\\\n                        fun' =\\\\n                        { Types.attributes = [];\\\\n                          contents =\\\\n                          Types.GlobalName {\\\\n                            id =\\\\n                            { Types.index = (0, 545); krate = \\\\\\\"sandwich\\\\\\\";\\\\n                              path =\\\\n                              [{ Types.data = (Types.TypeNs \\\\\\\"implementation\\\\\\\");\\\\n                                 disambiguator = 0 };\\\\n                                { Types.data = (Types.TypeNs \\\\\\\"openssl3_impl\\\\\\\");\\\\n                                  disambiguator = 0 };\\\\n                                { Types.data = Types.Impl; disambiguator = 3\\\\n                                  };\\\\n                                { Types.data = (Types.ValueNs \\\\\\\"as_nonnull\\\\\\\");\\\\n                                  disambiguator = 0 }\\\\n                                ]\\\\n                              }};\\\\n                          hir_id = None;\\\\n                          span =\\\\n                          { Types.filename =\\\\n                            (Types.Real\\\\n                               (Types.LocalPath\\\\n                                  \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                            hi = { Types.col = \\\\\\\"70\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n                            lo = { Types.col = \\\\\\\"60\\\\\\\"; line = \\\\\\\"159\\\\\\\" } };\\\\n                          ty =\\\\n                          (Types.Arrow\\\\n                             { Types.bound_vars =\\\\n                               [(Types.Region\\\\n                                   (Types.BrNamed\\\\n                                      ({ Types.index = (0, 1655);\\\\n                                         krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                         path =\\\\n                                         [{ Types.data =\\\\n                                            (Types.TypeNs \\\\\\\"implementation\\\\\\\");\\\\n                                            disambiguator = 0 };\\\\n                                           { Types.data =\\\\n                                             (Types.TypeNs \\\\\\\"openssl3_impl\\\\\\\");\\\\n                                             disambiguator = 0 };\\\\n                                           { Types.data = Types.Impl;\\\\n                                             disambiguator = 3 };\\\\n                                           { Types.data =\\\\n                                             (Types.ValueNs \\\\\\\"as_nonnull\\\\\\\");\\\\n                                             disambiguator = 0 };\\\\n                                           { Types.data =\\\\n                                             (Types.LifetimeNs \\\\\\\"'_\\\\\\\");\\\\n                                             disambiguator = 0 }\\\\n                                           ]\\\\n                                         },\\\\n                                       \\\\\\\"'_\\\\\\\")))\\\\n                                 ];\\\\n                               value =\\\\n                               { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                                 c_variadic = false;\\\\n                                 inputs =\\\\n                                 [(Types.Ref\\\\n                                     ({ Types.kind =\\\\n                                        (Types.ReBound\\\\n                                           (\\\\\\\"0\\\\\\\",\\\\n                                            { Types.kind =\\\\n                                              (Types.BrNamed\\\\n                                                 ({ Types.index = (0, 1655);\\\\n                                                    krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                                    path =\\\\n                                                    [{ Types.data =\\\\n                                                       (Types.TypeNs\\\\n                                                          \\\\\\\"implementation\\\\\\\");\\\\n                                                       disambiguator = 0 };\\\\n                                                      { Types.data =\\\\n                                                        (Types.TypeNs\\\\n                                                           \\\\\\\"openssl3_impl\\\\\\\");\\\\n                                                        disambiguator = 0 };\\\\n                                                      { Types.data =\\\\n                                                        Types.Impl;\\\\n                                                        disambiguator = 3 };\\\\n                                                      { Types.data =\\\\n                                                        (Types.ValueNs\\\\n                                                           \\\\\\\"as_nonnull\\\\\\\");\\\\n                                                        disambiguator = 0 };\\\\n                                                      { Types.data =\\\\n                                                        (Types.LifetimeNs\\\\n                                                           \\\\\\\"'_\\\\\\\");\\\\n                                                        disambiguator = 0 }\\\\n                                                      ]\\\\n                                                    },\\\\n                                                  \\\\\\\"'_\\\\\\\"));\\\\n                                              var = \\\\\\\"0\\\\\\\" }))\\\\n                                        },\\\\n                                      Types.Adt {\\\\n                                        def_id =\\\\n                                        { Types.index = (0, 536);\\\\n                                          krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                          path =\\\\n                                          [{ Types.data =\\\\n                                             (Types.TypeNs \\\\\\\"implementation\\\\\\\");\\\\n                                             disambiguator = 0 };\\\\n                                            { Types.data =\\\\n                                              (Types.TypeNs \\\\\\\"openssl3_impl\\\\\\\");\\\\n                                              disambiguator = 0 };\\\\n                                            { Types.data =\\\\n                                              (Types.TypeNs \\\\\\\"LibCtx\\\\\\\");\\\\n                                              disambiguator = 0 }\\\\n                                            ]\\\\n                                          };\\\\n                                        generic_args =\\\\n                                        [(Types.Lifetime\\\\n                                            { Types.kind = Types.ReErased })\\\\n                                          ];\\\\n                                        trait_refs = []},\\\\n                                      false))\\\\n                                   ];\\\\n                                 output =\\\\n                                 Types.Adt {\\\\n                                   def_id =\\\\n                                   { Types.index = (2, 2222); krate = \\\\\\\"core\\\\\\\";\\\\n                                     path =\\\\n                                     [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                                        disambiguator = 0 };\\\\n                                       { Types.data =\\\\n                                         (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                                         disambiguator = 0 };\\\\n                                       { Types.data =\\\\n                                         (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                                         disambiguator = 0 }\\\\n                                       ]\\\\n                                     };\\\\n                                   generic_args =\\\\n                                   [(Types.Type\\\\n                                       Types.Adt {\\\\n                                         def_id =\\\\n                                         { Types.index = (27, 21556);\\\\n                                           krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                           path =\\\\n                                           [{ Types.data =\\\\n                                              (Types.TypeNs \\\\\\\"ossl_lib_ctx_st\\\\\\\");\\\\n                                              disambiguator = 0 }\\\\n                                             ]\\\\n                                           };\\\\n                                         generic_args = []; trait_refs = []})\\\\n                                     ];\\\\n                                   trait_refs = []};\\\\n                                 safety = Types.Safe }\\\\n                               })\\\\n                          };\\\\n                        generic_args =\\\\n                        [(Types.Lifetime { Types.kind = Types.ReErased })];\\\\n                        trait = None;\\\\n                        ty =\\\\n                        (Types.Arrow\\\\n                           { Types.bound_vars =\\\\n                             [(Types.Region\\\\n                                 (Types.BrNamed\\\\n                                    ({ Types.index = (0, 1655);\\\\n                                       krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                       path =\\\\n                                       [{ Types.data =\\\\n                                          (Types.TypeNs \\\\\\\"implementation\\\\\\\");\\\\n                                          disambiguator = 0 };\\\\n                                         { Types.data =\\\\n                                           (Types.TypeNs \\\\\\\"openssl3_impl\\\\\\\");\\\\n                                           disambiguator = 0 };\\\\n                                         { Types.data = Types.Impl;\\\\n                                           disambiguator = 3 };\\\\n                                         { Types.data =\\\\n                                           (Types.ValueNs \\\\\\\"as_nonnull\\\\\\\");\\\\n                                           disambiguator = 0 };\\\\n                                         { Types.data =\\\\n                                           (Types.LifetimeNs \\\\\\\"'_\\\\\\\");\\\\n                                           disambiguator = 0 }\\\\n                                         ]\\\\n                                       },\\\\n                                     \\\\\\\"'_\\\\\\\")))\\\\n                               ];\\\\n                             value =\\\\n                             { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                               c_variadic = false;\\\\n                               inputs =\\\\n                               [(Types.Ref\\\\n                                   ({ Types.kind =\\\\n                                      (Types.ReBound\\\\n                                         (\\\\\\\"0\\\\\\\",\\\\n                                          { Types.kind =\\\\n                                            (Types.BrNamed\\\\n                                               ({ Types.index = (0, 1655);\\\\n                                                  krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                                  path =\\\\n                                                  [{ Types.data =\\\\n                                                     (Types.TypeNs\\\\n                                                        \\\\\\\"implementation\\\\\\\");\\\\n                                                     disambiguator = 0 };\\\\n                                                    { Types.data =\\\\n                                                      (Types.TypeNs\\\\n                                                         \\\\\\\"openssl3_impl\\\\\\\");\\\\n                                                      disambiguator = 0 };\\\\n                                                    { Types.data = Types.Impl;\\\\n                                                      disambiguator = 3 };\\\\n                                                    { Types.data =\\\\n                                                      (Types.ValueNs\\\\n                                                         \\\\\\\"as_nonnull\\\\\\\");\\\\n                                                      disambiguator = 0 };\\\\n                                                    { Types.data =\\\\n                                                      (Types.LifetimeNs \\\\\\\"'_\\\\\\\");\\\\n                                                      disambiguator = 0 }\\\\n                                                    ]\\\\n                                                  },\\\\n                                                \\\\\\\"'_\\\\\\\"));\\\\n                                            var = \\\\\\\"0\\\\\\\" }))\\\\n                                      },\\\\n                                    Types.Adt {\\\\n                                      def_id =\\\\n                                      { Types.index = (0, 536);\\\\n                                        krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                        path =\\\\n                                        [{ Types.data =\\\\n                                           (Types.TypeNs \\\\\\\"implementation\\\\\\\");\\\\n                                           disambiguator = 0 };\\\\n                                          { Types.data =\\\\n                                            (Types.TypeNs \\\\\\\"openssl3_impl\\\\\\\");\\\\n                                            disambiguator = 0 };\\\\n                                          { Types.data =\\\\n                                            (Types.TypeNs \\\\\\\"LibCtx\\\\\\\");\\\\n                                            disambiguator = 0 }\\\\n                                          ]\\\\n                                        };\\\\n                                      generic_args =\\\\n                                      [(Types.Lifetime\\\\n                                          { Types.kind = Types.ReErased })\\\\n                                        ];\\\\n                                      trait_refs = []},\\\\n                                    false))\\\\n                                 ];\\\\n                               output =\\\\n                               Types.Adt {\\\\n                                 def_id =\\\\n                                 { Types.index = (2, 2222); krate = \\\\\\\"core\\\\\\\";\\\\n                                   path =\\\\n                                   [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                                      disambiguator = 0 };\\\\n                                     { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                                       disambiguator = 0 };\\\\n                                     { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                                       disambiguator = 0 }\\\\n                                     ]\\\\n                                   };\\\\n                                 generic_args =\\\\n                                 [(Types.Type\\\\n                                     Types.Adt {\\\\n                                       def_id =\\\\n                                       { Types.index = (27, 21556);\\\\n                                         krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                         path =\\\\n                                         [{ Types.data =\\\\n                                            (Types.TypeNs \\\\\\\"ossl_lib_ctx_st\\\\\\\");\\\\n                                            disambiguator = 0 }\\\\n                                           ]\\\\n                                         };\\\\n                                       generic_args = []; trait_refs = []})\\\\n                                   ];\\\\n                                 trait_refs = []};\\\\n                               safety = Types.Safe }\\\\n                             })};\\\\n                      hir_id = (Some (\\\\\\\"181\\\\\\\", \\\\\\\"23\\\\\\\"));\\\\n                      span =\\\\n                      { Types.filename =\\\\n                        (Types.Real\\\\n                           (Types.LocalPath\\\\n                              \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                        hi = { Types.col = \\\\\\\"72\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n                        lo = { Types.col = \\\\\\\"52\\\\\\\"; line = \\\\\\\"159\\\\\\\" } };\\\\n                      ty =\\\\n                      Types.Adt {\\\\n                        def_id =\\\\n                        { Types.index = (2, 2222); krate = \\\\\\\"core\\\\\\\";\\\\n                          path =\\\\n                          [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                             disambiguator = 0 };\\\\n                            { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                              disambiguator = 0 };\\\\n                            { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                              disambiguator = 0 }\\\\n                            ]\\\\n                          };\\\\n                        generic_args =\\\\n                        [(Types.Type\\\\n                            Types.Adt {\\\\n                              def_id =\\\\n                              { Types.index = (27, 21556);\\\\n                                krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                path =\\\\n                                [{ Types.data =\\\\n                                   (Types.TypeNs \\\\\\\"ossl_lib_ctx_st\\\\\\\");\\\\n                                   disambiguator = 0 }\\\\n                                  ]\\\\n                                };\\\\n                              generic_args = []; trait_refs = []})\\\\n                          ];\\\\n                        trait_refs = []}\\\\n                      }\\\\n                     ];\\\\n                   bounds_impls = [];\\\\n                   fn_span =\\\\n                   { Types.filename =\\\\n                     (Types.Real\\\\n                        (Types.LocalPath\\\\n                           \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                     hi = { Types.col = \\\\\\\"81\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n                     lo = { Types.col = \\\\\\\"73\\\\\\\"; line = \\\\\\\"159\\\\\\\" } };\\\\n                   from_hir_call = true;\\\\n                   fun' =\\\\n                   { Types.attributes = [];\\\\n                     contents =\\\\n                     Types.GlobalName {\\\\n                       id =\\\\n                       { Types.index = (2, 2245); krate = \\\\\\\"core\\\\\\\";\\\\n                         path =\\\\n                         [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                            disambiguator = 0 };\\\\n                           { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                             disambiguator = 0 };\\\\n                           { Types.data = Types.Impl; disambiguator = 3 };\\\\n                           { Types.data = (Types.ValueNs \\\\\\\"as_ptr\\\\\\\");\\\\n                             disambiguator = 0 }\\\\n                           ]\\\\n                         }};\\\\n                     hir_id = None;\\\\n                     span =\\\\n                     { Types.filename =\\\\n                       (Types.Real\\\\n                          (Types.LocalPath\\\\n                             \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                       hi = { Types.col = \\\\\\\"79\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n                       lo = { Types.col = \\\\\\\"73\\\\\\\"; line = \\\\\\\"159\\\\\\\" } };\\\\n                     ty =\\\\n                     (Types.Arrow\\\\n                        { Types.bound_vars = [];\\\\n                          value =\\\\n                          { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                            c_variadic = false;\\\\n                            inputs =\\\\n                            [Types.Adt {\\\\n                               def_id =\\\\n                               { Types.index = (2, 2222); krate = \\\\\\\"core\\\\\\\";\\\\n                                 path =\\\\n                                 [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                                    disambiguator = 0 };\\\\n                                   { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                                     disambiguator = 0 };\\\\n                                   { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                                     disambiguator = 0 }\\\\n                                   ]\\\\n                                 };\\\\n                               generic_args =\\\\n                               [(Types.Type\\\\n                                   Types.Adt {\\\\n                                     def_id =\\\\n                                     { Types.index = (27, 21556);\\\\n                                       krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                       path =\\\\n                                       [{ Types.data =\\\\n                                          (Types.TypeNs \\\\\\\"ossl_lib_ctx_st\\\\\\\");\\\\n                                          disambiguator = 0 }\\\\n                                         ]\\\\n                                       };\\\\n                                     generic_args = []; trait_refs = []})\\\\n                                 ];\\\\n                               trait_refs = []}\\\\n                              ];\\\\n                            output =\\\\n                            (Types.RawPtr\\\\n                               (Types.Adt {\\\\n                                  def_id =\\\\n                                  { Types.index = (27, 21556);\\\\n                                    krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                    path =\\\\n                                    [{ Types.data =\\\\n                                       (Types.TypeNs \\\\\\\"ossl_lib_ctx_st\\\\\\\");\\\\n                                       disambiguator = 0 }\\\\n                                      ]\\\\n                                    };\\\\n                                  generic_args = []; trait_refs = []},\\\\n                                true));\\\\n                            safety = Types.Safe }\\\\n                          })\\\\n                     };\\\\n                   generic_args =\\\\n                   [(Types.Type\\\\n                       Types.Adt {\\\\n                         def_id =\\\\n                         { Types.index = (27, 21556); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                           path =\\\\n                           [{ Types.data = (Types.TypeNs \\\\\\\"ossl_lib_ctx_st\\\\\\\");\\\\n                              disambiguator = 0 }\\\\n                             ]\\\\n                           };\\\\n                         generic_args = []; trait_refs = []})\\\\n                     ];\\\\n                   trait = None;\\\\n                   ty =\\\\n                   (Types.Arrow\\\\n                      { Types.bound_vars = [];\\\\n                        value =\\\\n                        { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                          c_variadic = false;\\\\n                          inputs =\\\\n                          [Types.Adt {\\\\n                             def_id =\\\\n                             { Types.index = (2, 2222); krate = \\\\\\\"core\\\\\\\";\\\\n                               path =\\\\n                               [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                                  disambiguator = 0 };\\\\n                                 { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                                   disambiguator = 0 };\\\\n                                 { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                                   disambiguator = 0 }\\\\n                                 ]\\\\n                               };\\\\n                             generic_args =\\\\n                             [(Types.Type\\\\n                                 Types.Adt {\\\\n                                   def_id =\\\\n                                   { Types.index = (27, 21556);\\\\n                                     krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                     path =\\\\n                                     [{ Types.data =\\\\n                                        (Types.TypeNs \\\\\\\"ossl_lib_ctx_st\\\\\\\");\\\\n                                        disambiguator = 0 }\\\\n                                       ]\\\\n                                     };\\\\n                                   generic_args = []; trait_refs = []})\\\\n                               ];\\\\n                             trait_refs = []}\\\\n                            ];\\\\n                          output =\\\\n                          (Types.RawPtr\\\\n                             (Types.Adt {\\\\n                                def_id =\\\\n                                { Types.index = (27, 21556);\\\\n                                  krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                  path =\\\\n                                  [{ Types.data =\\\\n                                     (Types.TypeNs \\\\\\\"ossl_lib_ctx_st\\\\\\\");\\\\n                                     disambiguator = 0 }\\\\n                                    ]\\\\n                                  };\\\\n                                generic_args = []; trait_refs = []},\\\\n                              true));\\\\n                          safety = Types.Safe }\\\\n                        })};\\\\n                 hir_id = (Some (\\\\\\\"181\\\\\\\", \\\\\\\"21\\\\\\\"));\\\\n                 span =\\\\n                 { Types.filename =\\\\n                   (Types.Real\\\\n                      (Types.LocalPath\\\\n                         \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                   hi = { Types.col = \\\\\\\"81\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n                   lo = { Types.col = \\\\\\\"52\\\\\\\"; line = \\\\\\\"159\\\\\\\" } };\\\\n                 ty =\\\\n                 (Types.RawPtr\\\\n                    (Types.Adt {\\\\n                       def_id =\\\\n                       { Types.index = (27, 21556); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                         path =\\\\n                         [{ Types.data = (Types.TypeNs \\\\\\\"ossl_lib_ctx_st\\\\\\\");\\\\n                            disambiguator = 0 }\\\\n                           ]\\\\n                         };\\\\n                       generic_args = []; trait_refs = []},\\\\n                     true))\\\\n                 };\\\\n                { Types.attributes = [];\\\\n                  contents =\\\\n                  Types.Call {args = [];\\\\n                    bounds_impls =\\\\n                    [{ Types.args = [];\\\\n                       impl =\\\\n                       Types.Builtin {\\\\n                         trait =\\\\n                         { Types.def_id =\\\\n                           { Types.index = (2, 2148); krate = \\\\\\\"core\\\\\\\";\\\\n                             path =\\\\n                             [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                                disambiguator = 0 };\\\\n                               { Types.data = (Types.TypeNs \\\\\\\"metadata\\\\\\\");\\\\n                                 disambiguator = 0 };\\\\n                               { Types.data = (Types.TypeNs \\\\\\\"Thin\\\\\\\");\\\\n                                 disambiguator = 0 }\\\\n                               ]\\\\n                             };\\\\n                           generic_args = [(Types.Type (Types.Int Types.I8))]\\\\n                           }};\\\\n                       trait =\\\\n                       { Types.def_id =\\\\n                         { Types.index = (2, 2148); krate = \\\\\\\"core\\\\\\\";\\\\n                           path =\\\\n                           [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                              disambiguator = 0 };\\\\n                             { Types.data = (Types.TypeNs \\\\\\\"metadata\\\\\\\");\\\\n                               disambiguator = 0 };\\\\n                             { Types.data = (Types.TypeNs \\\\\\\"Thin\\\\\\\");\\\\n                               disambiguator = 0 }\\\\n                             ]\\\\n                           };\\\\n                         generic_args = [(Types.Type (Types.Int Types.I8))] }\\\\n                       }\\\\n                      ];\\\\n                    fn_span =\\\\n                    { Types.filename =\\\\n                      (Types.Real\\\\n                         (Types.LocalPath\\\\n                            \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                      hi = { Types.col = \\\\\\\"94\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n                      lo = { Types.col = \\\\\\\"83\\\\\\\"; line = \\\\\\\"159\\\\\\\" } };\\\\n                    from_hir_call = true;\\\\n                    fun' =\\\\n                    { Types.attributes = [];\\\\n                      contents =\\\\n                      Types.GlobalName {\\\\n                        id =\\\\n                        { Types.index = (2, 2598); krate = \\\\\\\"core\\\\\\\";\\\\n                          path =\\\\n                          [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                             disambiguator = 0 };\\\\n                            { Types.data = (Types.ValueNs \\\\\\\"null\\\\\\\");\\\\n                              disambiguator = 0 }\\\\n                            ]\\\\n                          }};\\\\n                      hir_id = None;\\\\n                      span =\\\\n                      { Types.filename =\\\\n                        (Types.Real\\\\n                           (Types.LocalPath\\\\n                              \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                        hi = { Types.col = \\\\\\\"92\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n                        lo = { Types.col = \\\\\\\"83\\\\\\\"; line = \\\\\\\"159\\\\\\\" } };\\\\n                      ty =\\\\n                      (Types.Arrow\\\\n                         { Types.bound_vars = [];\\\\n                           value =\\\\n                           { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                             c_variadic = false; inputs = [];\\\\n                             output =\\\\n                             (Types.RawPtr ((Types.Int Types.I8), false));\\\\n                             safety = Types.Safe }\\\\n                           })\\\\n                      };\\\\n                    generic_args = [(Types.Type (Types.Int Types.I8))];\\\\n                    trait = None;\\\\n                    ty =\\\\n                    (Types.Arrow\\\\n                       { Types.bound_vars = [];\\\\n                         value =\\\\n                         { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                           c_variadic = false; inputs = [];\\\\n                           output =\\\\n                           (Types.RawPtr ((Types.Int Types.I8), false));\\\\n                           safety = Types.Safe }\\\\n                         })};\\\\n                  hir_id = (Some (\\\\\\\"181\\\\\\\", \\\\\\\"27\\\\\\\"));\\\\n                  span =\\\\n                  { Types.filename =\\\\n                    (Types.Real\\\\n                       (Types.LocalPath\\\\n                          \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                    hi = { Types.col = \\\\\\\"94\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n                    lo = { Types.col = \\\\\\\"83\\\\\\\"; line = \\\\\\\"159\\\\\\\" } };\\\\n                  ty = (Types.RawPtr ((Types.Int Types.I8), false)) }\\\\n                ];\\\\n              bounds_impls = [];\\\\n              fn_span =\\\\n              { Types.filename =\\\\n                (Types.Real\\\\n                   (Types.LocalPath\\\\n                      \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                hi = { Types.col = \\\\\\\"95\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n                lo = { Types.col = \\\\\\\"30\\\\\\\"; line = \\\\\\\"159\\\\\\\" } };\\\\n              from_hir_call = true;\\\\n              fun' =\\\\n              { Types.attributes = [];\\\\n                contents =\\\\n                Types.GlobalName {\\\\n                  id =\\\\n                  { Types.index = (27, 16967); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                    path =\\\\n                    [{ Types.data = Types.ForeignMod; disambiguator = 2632 };\\\\n                      { Types.data = (Types.ValueNs \\\\\\\"X509_new_ex\\\\\\\");\\\\n                        disambiguator = 0 }\\\\n                      ]\\\\n                    }};\\\\n                hir_id = None;\\\\n                span =\\\\n                { Types.filename =\\\\n                  (Types.Real\\\\n                     (Types.LocalPath\\\\n                        \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n                  hi = { Types.col = \\\\\\\"51\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n                  lo = { Types.col = \\\\\\\"30\\\\\\\"; line = \\\\\\\"159\\\\\\\" } };\\\\n                ty =\\\\n                (Types.Arrow\\\\n                   { Types.bound_vars = [];\\\\n                     value =\\\\n                     { Types.abi = Types.Abi {todo = \\\\\\\"C { unwind: false }\\\\\\\"};\\\\n                       c_variadic = false;\\\\n                       inputs =\\\\n                       [(Types.RawPtr\\\\n                           (Types.Adt {\\\\n                              def_id =\\\\n                              { Types.index = (27, 21556);\\\\n                                krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                path =\\\\n                                [{ Types.data =\\\\n                                   (Types.TypeNs \\\\\\\"ossl_lib_ctx_st\\\\\\\");\\\\n                                   disambiguator = 0 }\\\\n                                  ]\\\\n                                };\\\\n                              generic_args = []; trait_refs = []},\\\\n                            true));\\\\n                         (Types.RawPtr ((Types.Int Types.I8), false))];\\\\n                       output =\\\\n                       (Types.RawPtr\\\\n                          (Types.Adt {\\\\n                             def_id =\\\\n                             { Types.index = (27, 21223); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                               path =\\\\n                               [{ Types.data = (Types.TypeNs \\\\\\\"x509_st\\\\\\\");\\\\n                                  disambiguator = 0 }\\\\n                                 ]\\\\n                               };\\\\n                             generic_args = []; trait_refs = []},\\\\n                           true));\\\\n                       safety = Types.Unsafe }\\\\n                     })\\\\n                };\\\\n              generic_args = []; trait = None;\\\\n              ty =\\\\n              (Types.Arrow\\\\n                 { Types.bound_vars = [];\\\\n                   value =\\\\n                   { Types.abi = Types.Abi {todo = \\\\\\\"C { unwind: false }\\\\\\\"};\\\\n                     c_variadic = false;\\\\n                     inputs =\\\\n                     [(Types.RawPtr\\\\n                         (Types.Adt {\\\\n                            def_id =\\\\n                            { Types.index = (27, 21556); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                              path =\\\\n                              [{ Types.data =\\\\n                                 (Types.TypeNs \\\\\\\"ossl_lib_ctx_st\\\\\\\");\\\\n                                 disambiguator = 0 }\\\\n                                ]\\\\n                              };\\\\n                            generic_args = []; trait_refs = []},\\\\n                          true));\\\\n                       (Types.RawPtr ((Types.Int Types.I8), false))];\\\\n                     output =\\\\n                     (Types.RawPtr\\\\n                        (Types.Adt {\\\\n                           def_id =\\\\n                           { Types.index = (27, 21223); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                             path =\\\\n                             [{ Types.data = (Types.TypeNs \\\\\\\"x509_st\\\\\\\");\\\\n                                disambiguator = 0 }\\\\n                               ]\\\\n                             };\\\\n                           generic_args = []; trait_refs = []},\\\\n                         true));\\\\n                     safety = Types.Unsafe }\\\\n                   })};\\\\n            hir_id = (Some (\\\\\\\"181\\\\\\\", \\\\\\\"17\\\\\\\"));\\\\n            span =\\\\n            { Types.filename =\\\\n              (Types.Real\\\\n                 (Types.LocalPath\\\\n                    \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n              hi = { Types.col = \\\\\\\"95\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n              lo = { Types.col = \\\\\\\"30\\\\\\\"; line = \\\\\\\"159\\\\\\\" } };\\\\n            ty =\\\\n            (Types.RawPtr\\\\n               (Types.Adt {\\\\n                  def_id =\\\\n                  { Types.index = (27, 21223); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                    path =\\\\n                    [{ Types.data = (Types.TypeNs \\\\\\\"x509_st\\\\\\\");\\\\n                       disambiguator = 0 }\\\\n                      ]\\\\n                    };\\\\n                  generic_args = []; trait_refs = []},\\\\n                true))\\\\n            });\\\\n    region_scope = { Types.data = Types.Node; id = \\\\\\\"31\\\\\\\" };\\\\n    safety_mode = Types.ExplicitUnsafe;\\\\n    span =\\\\n    { Types.filename =\\\\n      (Types.Real\\\\n         (Types.LocalPath \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n      hi = { Types.col = \\\\\\\"97\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n      lo = { Types.col = \\\\\\\"21\\\\\\\"; line = \\\\\\\"159\\\\\\\" } };\\\\n    stmts = []; targeted_by_break = false};\\\\n  hir_id = (Some (\\\\\\\"181\\\\\\\", \\\\\\\"16\\\\\\\"));\\\\n  span =\\\\n  { Types.filename =\\\\n    (Types.Real\\\\n       (Types.LocalPath \\\\\\\"rust/implementation/openssl3_impl/support.rs\\\\\\\"));\\\\n    hi = { Types.col = \\\\\\\"97\\\\\\\"; line = \\\\\\\"159\\\\\\\" };\\\\n    lo = { Types.col = \\\\\\\"21\\\\\\\"; line = \\\\\\\"159\\\\\\\" } };\\\\n  ty =\\\\n  (Types.RawPtr\\\\n     (Types.Adt {\\\\n        def_id =\\\\n        { Types.index = (27, 21223); krate = \\\\\\\"openssl3\\\\\\\";\\\\n          path =\\\\n          [{ Types.data = (Types.TypeNs \\\\\\\"x509_st\\\\\\\"); disambiguator = 0 }] };\\\\n        generic_args = []; trait_refs = []},\\\\n      true))\\\\n  }\\\",\\n    )\"))"

        <:
        Core.Option.t_Option (Core.Ptr.Non_null.t_NonNull Openssl3.t_x509_st))
      ((Sandwich_proto.Errors.SystemError_SYSTEMERROR_MEMORY <: Sandwich_proto.Errors.t_SystemError),
        "failed to allocate a new `X509` object"
        <:
        (Sandwich_proto.Errors.t_SystemError & string))
  with
  | Core.Result.Result_Ok x509 ->
    Rust_primitives.Hax.failure "(reject_RawOrMutPointer) ExplicitRejection { reason: \"a node of kind [Raw_pointer] have been found in the AST\" }"
      "{\n        let mut inplace_ptr: raw_pointer!() = {\n            core::ptr::non_null::impl_3__as_ptr::<openssl3::t_x509_st>(x509)\n        };\n        {\n            let ptr: raw_pointer!() = {\n                (match (format) {\n                    sandwich_api_proto::encoding_format::ASN1EncodingFormat_ENCODING_FORMAT_PEM => {\n                        let _: core::ptr::non_null::t_NonNull<openssl3::t_x509_st> = {\n                            (match (core::ops::try_trait::f_branch(\n                                core::option::impl__ok_or_else::<\n                                    core::ptr::non_null::t_NonNull<openssl3::t_x509_st>,\n                                    tuple2<\n                                        sandwich_proto::errors::t_CertificateError,\n                                        alloc::string::t_String,\n                                    >,\n                                    arrow!(\n                                        tuple0 -> tuple2 <\n                                        sandwich_proto::errors::t_CertificateError,\n                                        alloc::string::t_String >\n                                    ),\n                                >(\n                                    core::ptr::non_null::impl_3__new::<\n                                        openssl3::t_x509_st,\n                                    >(\n                                        rust_primitives::hax::failure(\n                                            \"(AST import) Unsafe blocks are not allowed.\",\n                                            \"{ Types.attributes = [];\\n  contents =\\n  Types.Block {\\n    expr =\\n    (Some { Types.attributes = [];\\n            contents =\\n            Types.Call {\\n              args =\\n              [{ Types.attributes = [];\\n                 contents =\\n                 Types.Call {\\n                   args =\\n                   [{ Types.attributes = [];\\n                      contents =\\n                      Types.VarRef {\\n                        id =\\n                        { Types.id =\\n                          { Types.local_id = \\\"4\\\";\\n                            owner =\\n                            { Types.index = (0, 181); krate = \\\"sandwich\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"implementation\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"openssl3_impl\\\");\\n                                  disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"support\\\");\\n                                  disambiguator = 0 };\\n                                { Types.data =\\n                                  (Types.ValueNs \\\"X509_from_BIO\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              }\\n                            };\\n                          name = \\\"bio\\\" }};\\n                      hir_id = (Some (\\\"181\\\", \\\"89\\\"));\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath\\n                              \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                        hi = { Types.col = \\\"47\\\"; line = \\\"169\\\" };\\n                        lo = { Types.col = \\\"44\\\"; line = \\\"169\\\" } };\\n                      ty =\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.index = (2, 2222); krate = \\\"core\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                              disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"NonNull\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args =\\n                        [(Types.Type\\n                            Types.Adt {\\n                              def_id =\\n                              { Types.index = (27, 20890);\\n                                krate = \\\"openssl3\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                   disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []; trait_refs = []})\\n                          ];\\n                        trait_refs = []}\\n                      }\\n                     ];\\n                   bounds_impls = [];\\n                   fn_span =\\n                   { Types.filename =\\n                     (Types.Real\\n                        (Types.LocalPath\\n                           \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                     hi = { Types.col = \\\"56\\\"; line = \\\"169\\\" };\\n                     lo = { Types.col = \\\"48\\\"; line = \\\"169\\\" } };\\n                   from_hir_call = true;\\n                   fun' =\\n                   { Types.attributes = [];\\n                     contents =\\n                     Types.GlobalName {\\n                       id =\\n                       { Types.index = (2, 2245); krate = \\\"core\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                            disambiguator = 0 };\\n                           { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                             disambiguator = 0 };\\n                           { Types.data = Types.Impl; disambiguator = 3 };\\n                           { Types.data = (Types.ValueNs \\\"as_ptr\\\");\\n                             disambiguator = 0 }\\n                           ]\\n                         }};\\n                     hir_id = None;\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath\\n                             \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                       hi = { Types.col = \\\"54\\\"; line = \\\"169\\\" };\\n                       lo = { Types.col = \\\"48\\\"; line = \\\"169\\\" } };\\n                     ty =\\n                     (Types.Arrow\\n                        { Types.bound_vars = [];\\n                          value =\\n                          { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                            c_variadic = false;\\n                            inputs =\\n                            [Types.Adt {\\n                               def_id =\\n                               { Types.index = (2, 2222); krate = \\\"core\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                    disambiguator = 0 };\\n                                   { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                                     disambiguator = 0 };\\n                                   { Types.data = (Types.TypeNs \\\"NonNull\\\");\\n                                     disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args =\\n                               [(Types.Type\\n                                   Types.Adt {\\n                                     def_id =\\n                                     { Types.index = (27, 20890);\\n                                       krate = \\\"openssl3\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.TypeNs \\\"bio_st\\\");\\n                                          disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     generic_args = []; trait_refs = []})\\n                                 ];\\n                               trait_refs = []}\\n                              ];\\n                            output =\\n                            (Types.RawPtr\\n                               (Types.Adt {\\n                                  def_id =\\n                                  { Types.index = (27, 20890);\\n                                    krate = \\\"openssl3\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                       disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args = []; trait_refs = []},\\n                                true));\\n                            safety = Types.Safe }\\n                          })\\n                     };\\n                   generic_args =\\n                   [(Types.Type\\n                       Types.Adt {\\n                         def_id =\\n                         { Types.index = (27, 20890); krate = \\\"openssl3\\\";\\n                           path =\\n                           [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                              disambiguator = 0 }\\n                             ]\\n                           };\\n                         generic_args = []; trait_refs = []})\\n                     ];\\n                   trait = None;\\n                   ty =\\n                   (Types.Arrow\\n                      { Types.bound_vars = [];\\n                        value =\\n                        { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                          c_variadic = false;\\n                          inputs =\\n                          [Types.Adt {\\n                             def_id =\\n                             { Types.index = (2, 2222); krate = \\\"core\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                                   disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"NonNull\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args =\\n                             [(Types.Type\\n                                 Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (27, 20890);\\n                                     krate = \\\"openssl3\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                        disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args = []; trait_refs = []})\\n                               ];\\n                             trait_refs = []}\\n                            ];\\n                          output =\\n                          (Types.RawPtr\\n                             (Types.Adt {\\n                                def_id =\\n                                { Types.index = (27, 20890);\\n                                  krate = \\\"openssl3\\\";\\n                                  path =\\n                                  [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  };\\n                                generic_args = []; trait_refs = []},\\n                              true));\\n                          safety = Types.Safe }\\n                        })};\\n                 hir_id = (Some (\\\"181\\\", \\\"87\\\"));\\n                 span =\\n                 { Types.filename =\\n                   (Types.Real\\n                      (Types.LocalPath\\n                         \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                   hi = { Types.col = \\\"56\\\"; line = \\\"169\\\" };\\n                   lo = { Types.col = \\\"44\\\"; line = \\\"169\\\" } };\\n                 ty =\\n                 (Types.RawPtr\\n                    (Types.Adt {\\n                       def_id =\\n                       { Types.index = (27, 20890); krate = \\\"openssl3\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                            disambiguator = 0 }\\n                           ]\\n                         };\\n                       generic_args = []; trait_refs = []},\\n                     true))\\n                 };\\n                { Types.attributes = [];\\n                  contents =\\n                  Types.AddressOf {\\n                    arg =\\n                    { Types.attributes = [];\\n                      contents =\\n                      Types.Deref {\\n                        arg =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.Borrow {\\n                            arg =\\n                            { Types.attributes = [];\\n                              contents =\\n                              Types.VarRef {\\n                                id =\\n                                { Types.id =\\n                                  { Types.local_id = \\\"63\\\";\\n                                    owner =\\n                                    { Types.index = (0, 181);\\n                                      krate = \\\"sandwich\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"implementation\\\");\\n                                         disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.TypeNs \\\"openssl3_impl\\\");\\n                                          disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.TypeNs \\\"support\\\");\\n                                          disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.ValueNs \\\"X509_from_BIO\\\");\\n                                          disambiguator = 0 }\\n                                        ]\\n                                      }\\n                                    };\\n                                  name = \\\"inplace_ptr\\\" }};\\n                              hir_id = (Some (\\\"181\\\", \\\"92\\\"));\\n                              span =\\n                              { Types.filename =\\n                                (Types.Real\\n                                   (Types.LocalPath\\n                                      \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                                hi = { Types.col = \\\"74\\\"; line = \\\"169\\\" };\\n                                lo = { Types.col = \\\"63\\\"; line = \\\"169\\\" } };\\n                              ty =\\n                              (Types.RawPtr\\n                                 (Types.Adt {\\n                                    def_id =\\n                                    { Types.index = (27, 21223);\\n                                      krate = \\\"openssl3\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"x509_st\\\");\\n                                         disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args = []; trait_refs = []},\\n                                  true))\\n                              };\\n                            borrow_kind = Types.Mut {kind = Types.Default}};\\n                          hir_id = None;\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath\\n                                  \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                            hi = { Types.col = \\\"74\\\"; line = \\\"169\\\" };\\n                            lo = { Types.col = \\\"58\\\"; line = \\\"169\\\" } };\\n                          ty =\\n                          (Types.Ref\\n                             ({ Types.kind = Types.ReErased },\\n                              (Types.RawPtr\\n                                 (Types.Adt {\\n                                    def_id =\\n                                    { Types.index = (27, 21223);\\n                                      krate = \\\"openssl3\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"x509_st\\\");\\n                                         disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args = []; trait_refs = []},\\n                                  true)),\\n                              true))\\n                          }};\\n                      hir_id = None;\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath\\n                              \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                        hi = { Types.col = \\\"74\\\"; line = \\\"169\\\" };\\n                        lo = { Types.col = \\\"58\\\"; line = \\\"169\\\" } };\\n                      ty =\\n                      (Types.RawPtr\\n                         (Types.Adt {\\n                            def_id =\\n                            { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []; trait_refs = []},\\n                          true))\\n                      };\\n                    mutability = true};\\n                  hir_id = (Some (\\\"181\\\", \\\"91\\\"));\\n                  span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath\\n                          \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                    hi = { Types.col = \\\"74\\\"; line = \\\"169\\\" };\\n                    lo = { Types.col = \\\"58\\\"; line = \\\"169\\\" } };\\n                  ty =\\n                  (Types.RawPtr\\n                     ((Types.RawPtr\\n                         (Types.Adt {\\n                            def_id =\\n                            { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []; trait_refs = []},\\n                          true)),\\n                      true))\\n                  };\\n                { Types.attributes = [];\\n                  contents =\\n                  (Types.Adt\\n                     { Types.base = None; fields = [];\\n                       info =\\n                       { Types.typ =\\n                         { Types.index = (2, 36174); krate = \\\"core\\\";\\n                           path =\\n                           [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                              disambiguator = 0 };\\n                             { Types.data = (Types.TypeNs \\\"Option\\\");\\n                               disambiguator = 0 }\\n                             ]\\n                           };\\n                         typ_is_record = false; typ_is_struct = false;\\n                         type_namespace =\\n                         { Types.index = (2, 36174); krate = \\\"core\\\";\\n                           path =\\n                           [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                              disambiguator = 0 }\\n                             ]\\n                           };\\n                         variant =\\n                         { Types.index = (2, 36176); krate = \\\"core\\\";\\n                           path =\\n                           [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                              disambiguator = 0 };\\n                             { Types.data = (Types.TypeNs \\\"Option\\\");\\n                               disambiguator = 0 };\\n                             { Types.data = (Types.TypeNs \\\"None\\\");\\n                               disambiguator = 0 }\\n                             ]\\n                           };\\n                         variant_index = \\\"0\\\"; variant_is_record = false };\\n                       user_ty = None });\\n                  hir_id = (Some (\\\"181\\\", \\\"94\\\"));\\n                  span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath\\n                          \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                    hi = { Types.col = \\\"80\\\"; line = \\\"169\\\" };\\n                    lo = { Types.col = \\\"76\\\"; line = \\\"169\\\" } };\\n                  ty =\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.index = (2, 36174); krate = \\\"core\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"Option\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args =\\n                    [(Types.Type\\n                        (Types.Arrow\\n                           { Types.bound_vars = [];\\n                             value =\\n                             { Types.abi =\\n                               Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                               c_variadic = false;\\n                               inputs =\\n                               [(Types.RawPtr ((Types.Int Types.I8), true));\\n                                 (Types.Int Types.I32);\\n                                 (Types.Int Types.I32);\\n                                 (Types.RawPtr\\n                                    (Types.Adt {\\n                                       def_id =\\n                                       { Types.index = (2, 5307);\\n                                         krate = \\\"core\\\";\\n                                         path =\\n                                         [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                                            disambiguator = 0 };\\n                                           { Types.data =\\n                                             (Types.TypeNs \\\"c_void\\\");\\n                                             disambiguator = 0 }\\n                                           ]\\n                                         };\\n                                       generic_args = []; trait_refs = []},\\n                                     true))\\n                                 ];\\n                               output = (Types.Int Types.I32);\\n                               safety = Types.Unsafe }\\n                             }))\\n                      ];\\n                    trait_refs =\\n                    [{ Types.args = [];\\n                       impl =\\n                       Types.Builtin {\\n                         trait =\\n                         { Types.def_id =\\n                           { Types.index = (2, 26413); krate = \\\"core\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args =\\n                           [(Types.Type\\n                               (Types.Arrow\\n                                  { Types.bound_vars = [];\\n                                    value =\\n                                    { Types.abi =\\n                                      Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                                      c_variadic = false;\\n                                      inputs =\\n                                      [(Types.RawPtr\\n                                          ((Types.Int Types.I8), true));\\n                                        (Types.Int Types.I32);\\n                                        (Types.Int Types.I32);\\n                                        (Types.RawPtr\\n                                           (Types.Adt {\\n                                              def_id =\\n                                              { Types.index = (2, 5307);\\n                                                krate = \\\"core\\\";\\n                                                path =\\n                                                [{ Types.data =\\n                                                   (Types.TypeNs \\\"ffi\\\");\\n                                                   disambiguator = 0 };\\n                                                  { Types.data =\\n                                                    (Types.TypeNs \\\"c_void\\\");\\n                                                    disambiguator = 0 }\\n                                                  ]\\n                                                };\\n                                              generic_args = [];\\n                                              trait_refs = []},\\n                                            true))\\n                                        ];\\n                                      output = (Types.Int Types.I32);\\n                                      safety = Types.Unsafe }\\n                                    }))\\n                             ]\\n                           }};\\n                       trait =\\n                       { Types.def_id =\\n                         { Types.index = (2, 26413); krate = \\\"core\\\";\\n                           path =\\n                           [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                              disambiguator = 0 };\\n                             { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                               disambiguator = 0 }\\n                             ]\\n                           };\\n                         generic_args =\\n                         [(Types.Type\\n                             (Types.Arrow\\n                                { Types.bound_vars = [];\\n                                  value =\\n                                  { Types.abi =\\n                                    Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                                    c_variadic = false;\\n                                    inputs =\\n                                    [(Types.RawPtr\\n                                        ((Types.Int Types.I8), true));\\n                                      (Types.Int Types.I32);\\n                                      (Types.Int Types.I32);\\n                                      (Types.RawPtr\\n                                         (Types.Adt {\\n                                            def_id =\\n                                            { Types.index = (2, 5307);\\n                                              krate = \\\"core\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs \\\"ffi\\\");\\n                                                 disambiguator = 0 };\\n                                                { Types.data =\\n                                                  (Types.TypeNs \\\"c_void\\\");\\n                                                  disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args = [];\\n                                            trait_refs = []},\\n                                          true))\\n                                      ];\\n                                    output = (Types.Int Types.I32);\\n                                    safety = Types.Unsafe }\\n                                  }))\\n                           ]\\n                         }\\n                       }\\n                      ]}\\n                  };\\n                { Types.attributes = [];\\n                  contents =\\n                  Types.Call {args = [];\\n                    bounds_impls =\\n                    [{ Types.args = [];\\n                       impl =\\n                       Types.Builtin {\\n                         trait =\\n                         { Types.def_id =\\n                           { Types.index = (2, 2148); krate = \\\"core\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"metadata\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"Thin\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args =\\n                           [(Types.Type\\n                               Types.Adt {\\n                                 def_id =\\n                                 { Types.index = (2, 5307); krate = \\\"core\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"c_void\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args = []; trait_refs = []})\\n                             ]\\n                           }};\\n                       trait =\\n                       { Types.def_id =\\n                         { Types.index = (2, 2148); krate = \\\"core\\\";\\n                           path =\\n                           [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                              disambiguator = 0 };\\n                             { Types.data = (Types.TypeNs \\\"metadata\\\");\\n                               disambiguator = 0 };\\n                             { Types.data = (Types.TypeNs \\\"Thin\\\");\\n                               disambiguator = 0 }\\n                             ]\\n                           };\\n                         generic_args =\\n                         [(Types.Type\\n                             Types.Adt {\\n                               def_id =\\n                               { Types.index = (2, 5307); krate = \\\"core\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                                    disambiguator = 0 };\\n                                   { Types.data = (Types.TypeNs \\\"c_void\\\");\\n                                     disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args = []; trait_refs = []})\\n                           ]\\n                         }\\n                       }\\n                      ];\\n                    fn_span =\\n                    { Types.filename =\\n                      (Types.Real\\n                         (Types.LocalPath\\n                            \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                      hi = { Types.col = \\\"97\\\"; line = \\\"169\\\" };\\n                      lo = { Types.col = \\\"82\\\"; line = \\\"169\\\" } };\\n                    from_hir_call = true;\\n                    fun' =\\n                    { Types.attributes = [];\\n                      contents =\\n                      Types.GlobalName {\\n                        id =\\n                        { Types.index = (2, 2600); krate = \\\"core\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.ValueNs \\\"null_mut\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          }};\\n                      hir_id = None;\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath\\n                              \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                        hi = { Types.col = \\\"95\\\"; line = \\\"169\\\" };\\n                        lo = { Types.col = \\\"82\\\"; line = \\\"169\\\" } };\\n                      ty =\\n                      (Types.Arrow\\n                         { Types.bound_vars = [];\\n                           value =\\n                           { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                             c_variadic = false; inputs = [];\\n                             output =\\n                             (Types.RawPtr\\n                                (Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (2, 5307); krate = \\\"core\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                                        disambiguator = 0 };\\n                                       { Types.data = (Types.TypeNs \\\"c_void\\\");\\n                                         disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args = []; trait_refs = []},\\n                                 true));\\n                             safety = Types.Safe }\\n                           })\\n                      };\\n                    generic_args =\\n                    [(Types.Type\\n                        Types.Adt {\\n                          def_id =\\n                          { Types.index = (2, 5307); krate = \\\"core\\\";\\n                            path =\\n                            [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                               disambiguator = 0 };\\n                              { Types.data = (Types.TypeNs \\\"c_void\\\");\\n                                disambiguator = 0 }\\n                              ]\\n                            };\\n                          generic_args = []; trait_refs = []})\\n                      ];\\n                    trait = None;\\n                    ty =\\n                    (Types.Arrow\\n                       { Types.bound_vars = [];\\n                         value =\\n                         { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                           c_variadic = false; inputs = [];\\n                           output =\\n                           (Types.RawPtr\\n                              (Types.Adt {\\n                                 def_id =\\n                                 { Types.index = (2, 5307); krate = \\\"core\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"c_void\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args = []; trait_refs = []},\\n                               true));\\n                           safety = Types.Safe }\\n                         })};\\n                  hir_id = (Some (\\\"181\\\", \\\"96\\\"));\\n                  span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath\\n                          \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                    hi = { Types.col = \\\"97\\\"; line = \\\"169\\\" };\\n                    lo = { Types.col = \\\"82\\\"; line = \\\"169\\\" } };\\n                  ty =\\n                  (Types.RawPtr\\n                     (Types.Adt {\\n                        def_id =\\n                        { Types.index = (2, 5307); krate = \\\"core\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"c_void\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args = []; trait_refs = []},\\n                      true))\\n                  }\\n                ];\\n              bounds_impls = [];\\n              fn_span =\\n              { Types.filename =\\n                (Types.Real\\n                   (Types.LocalPath\\n                      \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                hi = { Types.col = \\\"98\\\"; line = \\\"169\\\" };\\n                lo = { Types.col = \\\"16\\\"; line = \\\"169\\\" } };\\n              from_hir_call = true;\\n              fun' =\\n              { Types.attributes = [];\\n                contents =\\n                Types.GlobalName {\\n                  id =\\n                  { Types.index = (27, 17653); krate = \\\"openssl3\\\";\\n                    path =\\n                    [{ Types.data = Types.ForeignMod; disambiguator = 2975 };\\n                      { Types.data = (Types.ValueNs \\\"PEM_read_bio_X509\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real\\n                     (Types.LocalPath\\n                        \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                  hi = { Types.col = \\\"43\\\"; line = \\\"169\\\" };\\n                  lo = { Types.col = \\\"16\\\"; line = \\\"169\\\" } };\\n                ty =\\n                (Types.Arrow\\n                   { Types.bound_vars = [];\\n                     value =\\n                     { Types.abi = Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                       c_variadic = false;\\n                       inputs =\\n                       [(Types.RawPtr\\n                           (Types.Adt {\\n                              def_id =\\n                              { Types.index = (27, 20890);\\n                                krate = \\\"openssl3\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                   disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []; trait_refs = []},\\n                            true));\\n                         (Types.RawPtr\\n                            ((Types.RawPtr\\n                                (Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (27, 21223);\\n                                     krate = \\\"openssl3\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                        disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args = []; trait_refs = []},\\n                                 true)),\\n                             true));\\n                         Types.Adt {\\n                           def_id =\\n                           { Types.index = (2, 36174); krate = \\\"core\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"Option\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args =\\n                           [(Types.Type\\n                               (Types.Arrow\\n                                  { Types.bound_vars = [];\\n                                    value =\\n                                    { Types.abi =\\n                                      Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                                      c_variadic = false;\\n                                      inputs =\\n                                      [(Types.RawPtr\\n                                          ((Types.Int Types.I8), true));\\n                                        (Types.Int Types.I32);\\n                                        (Types.Int Types.I32);\\n                                        (Types.RawPtr\\n                                           (Types.Adt {\\n                                              def_id =\\n                                              { Types.index = (2, 5307);\\n                                                krate = \\\"core\\\";\\n                                                path =\\n                                                [{ Types.data =\\n                                                   (Types.TypeNs \\\"ffi\\\");\\n                                                   disambiguator = 0 };\\n                                                  { Types.data =\\n                                                    (Types.TypeNs \\\"c_void\\\");\\n                                                    disambiguator = 0 }\\n                                                  ]\\n                                                };\\n                                              generic_args = [];\\n                                              trait_refs = []},\\n                                            true))\\n                                        ];\\n                                      output = (Types.Int Types.I32);\\n                                      safety = Types.Unsafe }\\n                                    }))\\n                             ];\\n                           trait_refs =\\n                           [{ Types.args = [];\\n                              impl =\\n                              Types.Builtin {\\n                                trait =\\n                                { Types.def_id =\\n                                  { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                        disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args =\\n                                  [(Types.Type\\n                                      (Types.Arrow\\n                                         { Types.bound_vars = [];\\n                                           value =\\n                                           { Types.abi =\\n                                             Types.Abi {\\n                                               todo = \\\"C { unwind: false }\\\"};\\n                                             c_variadic = false;\\n                                             inputs =\\n                                             [(Types.RawPtr\\n                                                 ((Types.Int Types.I8), true));\\n                                               (Types.Int Types.I32);\\n                                               (Types.Int Types.I32);\\n                                               (Types.RawPtr\\n                                                  (Types.Adt {\\n                                                     def_id =\\n                                                     { Types.index =\\n                                                       (2, 5307);\\n                                                       krate = \\\"core\\\";\\n                                                       path =\\n                                                       [{ Types.data =\\n                                                          (Types.TypeNs \\\"ffi\\\");\\n                                                          disambiguator = 0 };\\n                                                         { Types.data =\\n                                                           (Types.TypeNs\\n                                                              \\\"c_void\\\");\\n                                                           disambiguator = 0\\n                                                           }\\n                                                         ]\\n                                                       };\\n                                                     generic_args = [];\\n                                                     trait_refs = []},\\n                                                   true))\\n                                               ];\\n                                             output = (Types.Int Types.I32);\\n                                             safety = Types.Unsafe }\\n                                           }))\\n                                    ]\\n                                  }};\\n                              trait =\\n                              { Types.def_id =\\n                                { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                  path =\\n                                  [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                     disambiguator = 0 };\\n                                    { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                      disambiguator = 0 }\\n                                    ]\\n                                  };\\n                                generic_args =\\n                                [(Types.Type\\n                                    (Types.Arrow\\n                                       { Types.bound_vars = [];\\n                                         value =\\n                                         { Types.abi =\\n                                           Types.Abi {\\n                                             todo = \\\"C { unwind: false }\\\"};\\n                                           c_variadic = false;\\n                                           inputs =\\n                                           [(Types.RawPtr\\n                                               ((Types.Int Types.I8), true));\\n                                             (Types.Int Types.I32);\\n                                             (Types.Int Types.I32);\\n                                             (Types.RawPtr\\n                                                (Types.Adt {\\n                                                   def_id =\\n                                                   { Types.index = (2, 5307);\\n                                                     krate = \\\"core\\\";\\n                                                     path =\\n                                                     [{ Types.data =\\n                                                        (Types.TypeNs \\\"ffi\\\");\\n                                                        disambiguator = 0 };\\n                                                       { Types.data =\\n                                                         (Types.TypeNs\\n                                                            \\\"c_void\\\");\\n                                                         disambiguator = 0 }\\n                                                       ]\\n                                                     };\\n                                                   generic_args = [];\\n                                                   trait_refs = []},\\n                                                 true))\\n                                             ];\\n                                           output = (Types.Int Types.I32);\\n                                           safety = Types.Unsafe }\\n                                         }))\\n                                  ]\\n                                }\\n                              }\\n                             ]};\\n                         (Types.RawPtr\\n                            (Types.Adt {\\n                               def_id =\\n                               { Types.index = (2, 5307); krate = \\\"core\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                                    disambiguator = 0 };\\n                                   { Types.data = (Types.TypeNs \\\"c_void\\\");\\n                                     disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args = []; trait_refs = []},\\n                             true))\\n                         ];\\n                       output =\\n                       (Types.RawPtr\\n                          (Types.Adt {\\n                             def_id =\\n                             { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                  disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []; trait_refs = []},\\n                           true));\\n                       safety = Types.Unsafe }\\n                     })\\n                };\\n              generic_args = []; trait = None;\\n              ty =\\n              (Types.Arrow\\n                 { Types.bound_vars = [];\\n                   value =\\n                   { Types.abi = Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                     c_variadic = false;\\n                     inputs =\\n                     [(Types.RawPtr\\n                         (Types.Adt {\\n                            def_id =\\n                            { Types.index = (27, 20890); krate = \\\"openssl3\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []; trait_refs = []},\\n                          true));\\n                       (Types.RawPtr\\n                          ((Types.RawPtr\\n                              (Types.Adt {\\n                                 def_id =\\n                                 { Types.index = (27, 21223);\\n                                   krate = \\\"openssl3\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                      disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args = []; trait_refs = []},\\n                               true)),\\n                           true));\\n                       Types.Adt {\\n                         def_id =\\n                         { Types.index = (2, 36174); krate = \\\"core\\\";\\n                           path =\\n                           [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                              disambiguator = 0 };\\n                             { Types.data = (Types.TypeNs \\\"Option\\\");\\n                               disambiguator = 0 }\\n                             ]\\n                           };\\n                         generic_args =\\n                         [(Types.Type\\n                             (Types.Arrow\\n                                { Types.bound_vars = [];\\n                                  value =\\n                                  { Types.abi =\\n                                    Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                                    c_variadic = false;\\n                                    inputs =\\n                                    [(Types.RawPtr\\n                                        ((Types.Int Types.I8), true));\\n                                      (Types.Int Types.I32);\\n                                      (Types.Int Types.I32);\\n                                      (Types.RawPtr\\n                                         (Types.Adt {\\n                                            def_id =\\n                                            { Types.index = (2, 5307);\\n                                              krate = \\\"core\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs \\\"ffi\\\");\\n                                                 disambiguator = 0 };\\n                                                { Types.data =\\n                                                  (Types.TypeNs \\\"c_void\\\");\\n                                                  disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args = [];\\n                                            trait_refs = []},\\n                                          true))\\n                                      ];\\n                                    output = (Types.Int Types.I32);\\n                                    safety = Types.Unsafe }\\n                                  }))\\n                           ];\\n                         trait_refs =\\n                         [{ Types.args = [];\\n                            impl =\\n                            Types.Builtin {\\n                              trait =\\n                              { Types.def_id =\\n                                { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                  path =\\n                                  [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                     disambiguator = 0 };\\n                                    { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                      disambiguator = 0 }\\n                                    ]\\n                                  };\\n                                generic_args =\\n                                [(Types.Type\\n                                    (Types.Arrow\\n                                       { Types.bound_vars = [];\\n                                         value =\\n                                         { Types.abi =\\n                                           Types.Abi {\\n                                             todo = \\\"C { unwind: false }\\\"};\\n                                           c_variadic = false;\\n                                           inputs =\\n                                           [(Types.RawPtr\\n                                               ((Types.Int Types.I8), true));\\n                                             (Types.Int Types.I32);\\n                                             (Types.Int Types.I32);\\n                                             (Types.RawPtr\\n                                                (Types.Adt {\\n                                                   def_id =\\n                                                   { Types.index = (2, 5307);\\n                                                     krate = \\\"core\\\";\\n                                                     path =\\n                                                     [{ Types.data =\\n                                                        (Types.TypeNs \\\"ffi\\\");\\n                                                        disambiguator = 0 };\\n                                                       { Types.data =\\n                                                         (Types.TypeNs\\n                                                            \\\"c_void\\\");\\n                                                         disambiguator = 0 }\\n                                                       ]\\n                                                     };\\n                                                   generic_args = [];\\n                                                   trait_refs = []},\\n                                                 true))\\n                                             ];\\n                                           output = (Types.Int Types.I32);\\n                                           safety = Types.Unsafe }\\n                                         }))\\n                                  ]\\n                                }};\\n                            trait =\\n                            { Types.def_id =\\n                              { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                   disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                    disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args =\\n                              [(Types.Type\\n                                  (Types.Arrow\\n                                     { Types.bound_vars = [];\\n                                       value =\\n                                       { Types.abi =\\n                                         Types.Abi {\\n                                           todo = \\\"C { unwind: false }\\\"};\\n                                         c_variadic = false;\\n                                         inputs =\\n                                         [(Types.RawPtr\\n                                             ((Types.Int Types.I8), true));\\n                                           (Types.Int Types.I32);\\n                                           (Types.Int Types.I32);\\n                                           (Types.RawPtr\\n                                              (Types.Adt {\\n                                                 def_id =\\n                                                 { Types.index = (2, 5307);\\n                                                   krate = \\\"core\\\";\\n                                                   path =\\n                                                   [{ Types.data =\\n                                                      (Types.TypeNs \\\"ffi\\\");\\n                                                      disambiguator = 0 };\\n                                                     { Types.data =\\n                                                       (Types.TypeNs \\\"c_void\\\");\\n                                                       disambiguator = 0 }\\n                                                     ]\\n                                                   };\\n                                                 generic_args = [];\\n                                                 trait_refs = []},\\n                                               true))\\n                                           ];\\n                                         output = (Types.Int Types.I32);\\n                                         safety = Types.Unsafe }\\n                                       }))\\n                                ]\\n                              }\\n                            }\\n                           ]};\\n                       (Types.RawPtr\\n                          (Types.Adt {\\n                             def_id =\\n                             { Types.index = (2, 5307); krate = \\\"core\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"c_void\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []; trait_refs = []},\\n                           true))\\n                       ];\\n                     output =\\n                     (Types.RawPtr\\n                        (Types.Adt {\\n                           def_id =\\n                           { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []; trait_refs = []},\\n                         true));\\n                     safety = Types.Unsafe }\\n                   })};\\n            hir_id = (Some (\\\"181\\\", \\\"83\\\"));\\n            span =\\n            { Types.filename =\\n              (Types.Real\\n                 (Types.LocalPath\\n                    \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n              hi = { Types.col = \\\"98\\\"; line = \\\"169\\\" };\\n              lo = { Types.col = \\\"16\\\"; line = \\\"169\\\" } };\\n            ty =\\n            (Types.RawPtr\\n               (Types.Adt {\\n                  def_id =\\n                  { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                       disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []; trait_refs = []},\\n                true))\\n            });\\n    region_scope = { Types.data = Types.Node; id = \\\"100\\\" };\\n    safety_mode = Types.ExplicitUnsafe;\\n    span =\\n    { Types.filename =\\n      (Types.Real\\n         (Types.LocalPath \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n      hi = { Types.col = \\\"13\\\"; line = \\\"170\\\" };\\n      lo = { Types.col = \\\"25\\\"; line = \\\"168\\\" } };\\n    stmts = []; targeted_by_break = false};\\n  hir_id = (Some (\\\"181\\\", \\\"82\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real\\n       (Types.LocalPath \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n    hi = { Types.col = \\\"13\\\"; line = \\\"170\\\" };\\n    lo = { Types.col = \\\"25\\\"; line = \\\"168\\\" } };\\n  ty =\\n  (Types.RawPtr\\n     (Types.Adt {\\n        def_id =\\n        { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n          path =\\n          [{ Types.data = (Types.TypeNs \\\"x509_st\\\"); disambiguator = 0 }] };\\n        generic_args = []; trait_refs = []},\\n      true))\\n  }\",\n                                        ),\n                                    ),\n                                    (|_| {\n                                        {\n                                            let _: tuple0 = {\n                                                rust_primitives::hax::failure(\n                                                    \"(AST import) Unsafe blocks are not allowed.\",\n                                                    \"{ Types.attributes = [];\\n  contents =\\n  Types.Block {\\n    expr =\\n    (Some { Types.attributes = [];\\n            contents =\\n            Types.Call {\\n              args =\\n              [{ Types.attributes = [];\\n                 contents =\\n                 Types.UpvarRef {\\n                   closure_def_id =\\n                   { Types.index = (0, 184); krate = \\\"sandwich\\\";\\n                     path =\\n                     [{ Types.data = (Types.TypeNs \\\"implementation\\\");\\n                        disambiguator = 0 };\\n                       { Types.data = (Types.TypeNs \\\"openssl3_impl\\\");\\n                         disambiguator = 0 };\\n                       { Types.data = (Types.TypeNs \\\"support\\\");\\n                         disambiguator = 0 };\\n                       { Types.data = (Types.ValueNs \\\"X509_from_BIO\\\");\\n                         disambiguator = 0 };\\n                       { Types.data = Types.Closure; disambiguator = 0 }]\\n                     };\\n                   var_hir_id =\\n                   { Types.id =\\n                     { Types.local_id = \\\"63\\\";\\n                       owner =\\n                       { Types.index = (0, 181); krate = \\\"sandwich\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"implementation\\\");\\n                            disambiguator = 0 };\\n                           { Types.data = (Types.TypeNs \\\"openssl3_impl\\\");\\n                             disambiguator = 0 };\\n                           { Types.data = (Types.TypeNs \\\"support\\\");\\n                             disambiguator = 0 };\\n                           { Types.data = (Types.ValueNs \\\"X509_from_BIO\\\");\\n                             disambiguator = 0 }\\n                           ]\\n                         }\\n                       };\\n                     name = \\\"inplace_ptr\\\" }};\\n                 hir_id = (Some (\\\"181\\\", \\\"108\\\"));\\n                 span =\\n                 { Types.filename =\\n                   (Types.Real\\n                      (Types.LocalPath\\n                         \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                   hi = { Types.col = \\\"56\\\"; line = \\\"172\\\" };\\n                   lo = { Types.col = \\\"45\\\"; line = \\\"172\\\" } };\\n                 ty =\\n                 (Types.RawPtr\\n                    (Types.Adt {\\n                       def_id =\\n                       { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                            disambiguator = 0 }\\n                           ]\\n                         };\\n                       generic_args = []; trait_refs = []},\\n                     true))\\n                 }\\n                ];\\n              bounds_impls = [];\\n              fn_span =\\n              { Types.filename =\\n                (Types.Real\\n                   (Types.LocalPath\\n                      \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                hi = { Types.col = \\\"57\\\"; line = \\\"172\\\" };\\n                lo = { Types.col = \\\"25\\\"; line = \\\"172\\\" } };\\n              from_hir_call = true;\\n              fun' =\\n              { Types.attributes = [];\\n                contents =\\n                Types.GlobalName {\\n                  id =\\n                  { Types.index = (27, 16959); krate = \\\"openssl3\\\";\\n                    path =\\n                    [{ Types.data = Types.ForeignMod; disambiguator = 2628 };\\n                      { Types.data = (Types.ValueNs \\\"X509_free\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real\\n                     (Types.LocalPath\\n                        \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                  hi = { Types.col = \\\"44\\\"; line = \\\"172\\\" };\\n                  lo = { Types.col = \\\"25\\\"; line = \\\"172\\\" } };\\n                ty =\\n                (Types.Arrow\\n                   { Types.bound_vars = [];\\n                     value =\\n                     { Types.abi = Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                       c_variadic = false;\\n                       inputs =\\n                       [(Types.RawPtr\\n                           (Types.Adt {\\n                              def_id =\\n                              { Types.index = (27, 21223);\\n                                krate = \\\"openssl3\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                   disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []; trait_refs = []},\\n                            true))\\n                         ];\\n                       output = (Types.Tuple []); safety = Types.Unsafe }\\n                     })\\n                };\\n              generic_args = []; trait = None;\\n              ty =\\n              (Types.Arrow\\n                 { Types.bound_vars = [];\\n                   value =\\n                   { Types.abi = Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                     c_variadic = false;\\n                     inputs =\\n                     [(Types.RawPtr\\n                         (Types.Adt {\\n                            def_id =\\n                            { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []; trait_refs = []},\\n                          true))\\n                       ];\\n                     output = (Types.Tuple []); safety = Types.Unsafe }\\n                   })};\\n            hir_id = (Some (\\\"181\\\", \\\"104\\\"));\\n            span =\\n            { Types.filename =\\n              (Types.Real\\n                 (Types.LocalPath\\n                    \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n              hi = { Types.col = \\\"57\\\"; line = \\\"172\\\" };\\n              lo = { Types.col = \\\"25\\\"; line = \\\"172\\\" } };\\n            ty = (Types.Tuple []) });\\n    region_scope = { Types.data = Types.Node; id = \\\"110\\\" };\\n    safety_mode = Types.ExplicitUnsafe;\\n    span =\\n    { Types.filename =\\n      (Types.Real\\n         (Types.LocalPath \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n      hi = { Types.col = \\\"59\\\"; line = \\\"172\\\" };\\n      lo = { Types.col = \\\"16\\\"; line = \\\"172\\\" } };\\n    stmts = []; targeted_by_break = false};\\n  hir_id = (Some (\\\"181\\\", \\\"103\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real\\n       (Types.LocalPath \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n    hi = { Types.col = \\\"59\\\"; line = \\\"172\\\" };\\n    lo = { Types.col = \\\"16\\\"; line = \\\"172\\\" } };\\n  ty = (Types.Tuple []) }\",\n                                                )\n                                            };\n                                            {\n                                                Tuple2(\n                                                    sandwich_proto::errors::CertificateError_CERTIFICATEERROR_MALFORMED(),\n                                                    {\n                                                        let res: alloc::string::t_String = {\n                                                            alloc::fmt::format(\n                                                                core::fmt::impl_2__new_v1::<\n                                                                    lifetime!(something),\n                                                                    generic_value!(todo),\n                                                                    generic_value!(todo),\n                                                                >(\n                                                                    &(deref(&([\"failed to read the certificate: \"]))),\n                                                                    &(deref(\n                                                                        &([\n                                                                            core::fmt::rt::impl_1__new_display::<\n                                                                                lifetime!(something),\n                                                                                alloc::string::t_String,\n                                                                            >(\n                                                                                &(deref(\n                                                                                    &(sandwich::implementation::openssl3_impl::support::errstr(\n                                                                                        Tuple0,\n                                                                                    )),\n                                                                                )),\n                                                                            ),\n                                                                        ]),\n                                                                    )),\n                                                                ),\n                                                            )\n                                                        };\n                                                        { res }\n                                                    },\n                                                )\n                                            }\n                                        }\n                                    }),\n                                ),\n                            )) {\n                                core::ops::control_flow::ControlFlow_Break(residual) => {\n                                    rust_primitives::hax::never_to_any(\n                                        (return core::ops::try_trait::f_from_residual(residual)),\n                                    )\n                                }\n                                core::ops::control_flow::ControlFlow_Continue(val) => val,\n                            })\n                        };\n                        { inplace_ptr }\n                    }\n                    sandwich_api_proto::encoding_format::ASN1EncodingFormat_ENCODING_FORMAT_DER => {\n                        let _: core::ptr::non_null::t_NonNull<openssl3::t_x509_st> = {\n                            (match (core::ops::try_trait::f_branch(\n                                core::option::impl__ok_or_else::<\n                                    core::ptr::non_null::t_NonNull<openssl3::t_x509_st>,\n                                    tuple2<\n                                        sandwich_proto::errors::t_CertificateError,\n                                        alloc::string::t_String,\n                                    >,\n                                    arrow!(\n                                        tuple0 -> tuple2 <\n                                        sandwich_proto::errors::t_CertificateError,\n                                        alloc::string::t_String >\n                                    ),\n                                >(\n                                    core::ptr::non_null::impl_3__new::<\n                                        openssl3::t_x509_st,\n                                    >(\n                                        rust_primitives::hax::failure(\n                                            \"(AST import) Unsafe blocks are not allowed.\",\n                                            \"{ Types.attributes = [];\\n  contents =\\n  Types.Block {\\n    expr =\\n    (Some { Types.attributes = [];\\n            contents =\\n            Types.Call {\\n              args =\\n              [{ Types.attributes = [];\\n                 contents =\\n                 Types.Call {\\n                   args =\\n                   [{ Types.attributes = [];\\n                      contents =\\n                      Types.VarRef {\\n                        id =\\n                        { Types.id =\\n                          { Types.local_id = \\\"4\\\";\\n                            owner =\\n                            { Types.index = (0, 181); krate = \\\"sandwich\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"implementation\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"openssl3_impl\\\");\\n                                  disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"support\\\");\\n                                  disambiguator = 0 };\\n                                { Types.data =\\n                                  (Types.ValueNs \\\"X509_from_BIO\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              }\\n                            };\\n                          name = \\\"bio\\\" }};\\n                      hir_id = (Some (\\\"181\\\", \\\"191\\\"));\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath\\n                              \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                        hi = { Types.col = \\\"60\\\"; line = \\\"181\\\" };\\n                        lo = { Types.col = \\\"57\\\"; line = \\\"181\\\" } };\\n                      ty =\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.index = (2, 2222); krate = \\\"core\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                              disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"NonNull\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args =\\n                        [(Types.Type\\n                            Types.Adt {\\n                              def_id =\\n                              { Types.index = (27, 20890);\\n                                krate = \\\"openssl3\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                   disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []; trait_refs = []})\\n                          ];\\n                        trait_refs = []}\\n                      }\\n                     ];\\n                   bounds_impls = [];\\n                   fn_span =\\n                   { Types.filename =\\n                     (Types.Real\\n                        (Types.LocalPath\\n                           \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                     hi = { Types.col = \\\"69\\\"; line = \\\"181\\\" };\\n                     lo = { Types.col = \\\"61\\\"; line = \\\"181\\\" } };\\n                   from_hir_call = true;\\n                   fun' =\\n                   { Types.attributes = [];\\n                     contents =\\n                     Types.GlobalName {\\n                       id =\\n                       { Types.index = (2, 2245); krate = \\\"core\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                            disambiguator = 0 };\\n                           { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                             disambiguator = 0 };\\n                           { Types.data = Types.Impl; disambiguator = 3 };\\n                           { Types.data = (Types.ValueNs \\\"as_ptr\\\");\\n                             disambiguator = 0 }\\n                           ]\\n                         }};\\n                     hir_id = None;\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath\\n                             \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                       hi = { Types.col = \\\"67\\\"; line = \\\"181\\\" };\\n                       lo = { Types.col = \\\"61\\\"; line = \\\"181\\\" } };\\n                     ty =\\n                     (Types.Arrow\\n                        { Types.bound_vars = [];\\n                          value =\\n                          { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                            c_variadic = false;\\n                            inputs =\\n                            [Types.Adt {\\n                               def_id =\\n                               { Types.index = (2, 2222); krate = \\\"core\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                    disambiguator = 0 };\\n                                   { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                                     disambiguator = 0 };\\n                                   { Types.data = (Types.TypeNs \\\"NonNull\\\");\\n                                     disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args =\\n                               [(Types.Type\\n                                   Types.Adt {\\n                                     def_id =\\n                                     { Types.index = (27, 20890);\\n                                       krate = \\\"openssl3\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.TypeNs \\\"bio_st\\\");\\n                                          disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     generic_args = []; trait_refs = []})\\n                                 ];\\n                               trait_refs = []}\\n                              ];\\n                            output =\\n                            (Types.RawPtr\\n                               (Types.Adt {\\n                                  def_id =\\n                                  { Types.index = (27, 20890);\\n                                    krate = \\\"openssl3\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                       disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args = []; trait_refs = []},\\n                                true));\\n                            safety = Types.Safe }\\n                          })\\n                     };\\n                   generic_args =\\n                   [(Types.Type\\n                       Types.Adt {\\n                         def_id =\\n                         { Types.index = (27, 20890); krate = \\\"openssl3\\\";\\n                           path =\\n                           [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                              disambiguator = 0 }\\n                             ]\\n                           };\\n                         generic_args = []; trait_refs = []})\\n                     ];\\n                   trait = None;\\n                   ty =\\n                   (Types.Arrow\\n                      { Types.bound_vars = [];\\n                        value =\\n                        { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                          c_variadic = false;\\n                          inputs =\\n                          [Types.Adt {\\n                             def_id =\\n                             { Types.index = (2, 2222); krate = \\\"core\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                                   disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"NonNull\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args =\\n                             [(Types.Type\\n                                 Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (27, 20890);\\n                                     krate = \\\"openssl3\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                        disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args = []; trait_refs = []})\\n                               ];\\n                             trait_refs = []}\\n                            ];\\n                          output =\\n                          (Types.RawPtr\\n                             (Types.Adt {\\n                                def_id =\\n                                { Types.index = (27, 20890);\\n                                  krate = \\\"openssl3\\\";\\n                                  path =\\n                                  [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  };\\n                                generic_args = []; trait_refs = []},\\n                              true));\\n                          safety = Types.Safe }\\n                        })};\\n                 hir_id = (Some (\\\"181\\\", \\\"189\\\"));\\n                 span =\\n                 { Types.filename =\\n                   (Types.Real\\n                      (Types.LocalPath\\n                         \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                   hi = { Types.col = \\\"69\\\"; line = \\\"181\\\" };\\n                   lo = { Types.col = \\\"57\\\"; line = \\\"181\\\" } };\\n                 ty =\\n                 (Types.RawPtr\\n                    (Types.Adt {\\n                       def_id =\\n                       { Types.index = (27, 20890); krate = \\\"openssl3\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                            disambiguator = 0 }\\n                           ]\\n                         };\\n                       generic_args = []; trait_refs = []},\\n                     true))\\n                 };\\n                { Types.attributes = [];\\n                  contents =\\n                  Types.AddressOf {\\n                    arg =\\n                    { Types.attributes = [];\\n                      contents =\\n                      Types.Deref {\\n                        arg =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.Borrow {\\n                            arg =\\n                            { Types.attributes = [];\\n                              contents =\\n                              Types.VarRef {\\n                                id =\\n                                { Types.id =\\n                                  { Types.local_id = \\\"63\\\";\\n                                    owner =\\n                                    { Types.index = (0, 181);\\n                                      krate = \\\"sandwich\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"implementation\\\");\\n                                         disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.TypeNs \\\"openssl3_impl\\\");\\n                                          disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.TypeNs \\\"support\\\");\\n                                          disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.ValueNs \\\"X509_from_BIO\\\");\\n                                          disambiguator = 0 }\\n                                        ]\\n                                      }\\n                                    };\\n                                  name = \\\"inplace_ptr\\\" }};\\n                              hir_id = (Some (\\\"181\\\", \\\"194\\\"));\\n                              span =\\n                              { Types.filename =\\n                                (Types.Real\\n                                   (Types.LocalPath\\n                                      \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                                hi = { Types.col = \\\"87\\\"; line = \\\"181\\\" };\\n                                lo = { Types.col = \\\"76\\\"; line = \\\"181\\\" } };\\n                              ty =\\n                              (Types.RawPtr\\n                                 (Types.Adt {\\n                                    def_id =\\n                                    { Types.index = (27, 21223);\\n                                      krate = \\\"openssl3\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"x509_st\\\");\\n                                         disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args = []; trait_refs = []},\\n                                  true))\\n                              };\\n                            borrow_kind = Types.Mut {kind = Types.Default}};\\n                          hir_id = None;\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath\\n                                  \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                            hi = { Types.col = \\\"87\\\"; line = \\\"181\\\" };\\n                            lo = { Types.col = \\\"71\\\"; line = \\\"181\\\" } };\\n                          ty =\\n                          (Types.Ref\\n                             ({ Types.kind = Types.ReErased },\\n                              (Types.RawPtr\\n                                 (Types.Adt {\\n                                    def_id =\\n                                    { Types.index = (27, 21223);\\n                                      krate = \\\"openssl3\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"x509_st\\\");\\n                                         disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args = []; trait_refs = []},\\n                                  true)),\\n                              true))\\n                          }};\\n                      hir_id = None;\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath\\n                              \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                        hi = { Types.col = \\\"87\\\"; line = \\\"181\\\" };\\n                        lo = { Types.col = \\\"71\\\"; line = \\\"181\\\" } };\\n                      ty =\\n                      (Types.RawPtr\\n                         (Types.Adt {\\n                            def_id =\\n                            { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []; trait_refs = []},\\n                          true))\\n                      };\\n                    mutability = true};\\n                  hir_id = (Some (\\\"181\\\", \\\"193\\\"));\\n                  span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath\\n                          \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                    hi = { Types.col = \\\"87\\\"; line = \\\"181\\\" };\\n                    lo = { Types.col = \\\"71\\\"; line = \\\"181\\\" } };\\n                  ty =\\n                  (Types.RawPtr\\n                     ((Types.RawPtr\\n                         (Types.Adt {\\n                            def_id =\\n                            { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []; trait_refs = []},\\n                          true)),\\n                      true))\\n                  }\\n                ];\\n              bounds_impls = [];\\n              fn_span =\\n              { Types.filename =\\n                (Types.Real\\n                   (Types.LocalPath\\n                      \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                hi = { Types.col = \\\"88\\\"; line = \\\"181\\\" };\\n                lo = { Types.col = \\\"34\\\"; line = \\\"181\\\" } };\\n              from_hir_call = true;\\n              fun' =\\n              { Types.attributes = [];\\n                contents =\\n                Types.GlobalName {\\n                  id =\\n                  { Types.index = (27, 16711); krate = \\\"openssl3\\\";\\n                    path =\\n                    [{ Types.data = Types.ForeignMod; disambiguator = 2504 };\\n                      { Types.data = (Types.ValueNs \\\"d2i_X509_bio\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real\\n                     (Types.LocalPath\\n                        \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                  hi = { Types.col = \\\"56\\\"; line = \\\"181\\\" };\\n                  lo = { Types.col = \\\"34\\\"; line = \\\"181\\\" } };\\n                ty =\\n                (Types.Arrow\\n                   { Types.bound_vars = [];\\n                     value =\\n                     { Types.abi = Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                       c_variadic = false;\\n                       inputs =\\n                       [(Types.RawPtr\\n                           (Types.Adt {\\n                              def_id =\\n                              { Types.index = (27, 20890);\\n                                krate = \\\"openssl3\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                   disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []; trait_refs = []},\\n                            true));\\n                         (Types.RawPtr\\n                            ((Types.RawPtr\\n                                (Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (27, 21223);\\n                                     krate = \\\"openssl3\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                        disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args = []; trait_refs = []},\\n                                 true)),\\n                             true))\\n                         ];\\n                       output =\\n                       (Types.RawPtr\\n                          (Types.Adt {\\n                             def_id =\\n                             { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                  disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []; trait_refs = []},\\n                           true));\\n                       safety = Types.Unsafe }\\n                     })\\n                };\\n              generic_args = []; trait = None;\\n              ty =\\n              (Types.Arrow\\n                 { Types.bound_vars = [];\\n                   value =\\n                   { Types.abi = Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                     c_variadic = false;\\n                     inputs =\\n                     [(Types.RawPtr\\n                         (Types.Adt {\\n                            def_id =\\n                            { Types.index = (27, 20890); krate = \\\"openssl3\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"bio_st\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []; trait_refs = []},\\n                          true));\\n                       (Types.RawPtr\\n                          ((Types.RawPtr\\n                              (Types.Adt {\\n                                 def_id =\\n                                 { Types.index = (27, 21223);\\n                                   krate = \\\"openssl3\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                      disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args = []; trait_refs = []},\\n                               true)),\\n                           true))\\n                       ];\\n                     output =\\n                     (Types.RawPtr\\n                        (Types.Adt {\\n                           def_id =\\n                           { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []; trait_refs = []},\\n                         true));\\n                     safety = Types.Unsafe }\\n                   })};\\n            hir_id = (Some (\\\"181\\\", \\\"185\\\"));\\n            span =\\n            { Types.filename =\\n              (Types.Real\\n                 (Types.LocalPath\\n                    \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n              hi = { Types.col = \\\"88\\\"; line = \\\"181\\\" };\\n              lo = { Types.col = \\\"34\\\"; line = \\\"181\\\" } };\\n            ty =\\n            (Types.RawPtr\\n               (Types.Adt {\\n                  def_id =\\n                  { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                       disambiguator = 0 }\\n                      ]\\n                    };\\n                  generic_args = []; trait_refs = []},\\n                true))\\n            });\\n    region_scope = { Types.data = Types.Node; id = \\\"196\\\" };\\n    safety_mode = Types.ExplicitUnsafe;\\n    span =\\n    { Types.filename =\\n      (Types.Real\\n         (Types.LocalPath \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n      hi = { Types.col = \\\"90\\\"; line = \\\"181\\\" };\\n      lo = { Types.col = \\\"25\\\"; line = \\\"181\\\" } };\\n    stmts = []; targeted_by_break = false};\\n  hir_id = (Some (\\\"181\\\", \\\"184\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real\\n       (Types.LocalPath \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n    hi = { Types.col = \\\"90\\\"; line = \\\"181\\\" };\\n    lo = { Types.col = \\\"25\\\"; line = \\\"181\\\" } };\\n  ty =\\n  (Types.RawPtr\\n     (Types.Adt {\\n        def_id =\\n        { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n          path =\\n          [{ Types.data = (Types.TypeNs \\\"x509_st\\\"); disambiguator = 0 }] };\\n        generic_args = []; trait_refs = []},\\n      true))\\n  }\",\n                                        ),\n                                    ),\n                                    (|_| {\n                                        {\n                                            let _: tuple0 = {\n                                                rust_primitives::hax::failure(\n                                                    \"(AST import) Unsafe blocks are not allowed.\",\n                                                    \"{ Types.attributes = [];\\n  contents =\\n  Types.Block {\\n    expr =\\n    (Some { Types.attributes = [];\\n            contents =\\n            Types.Call {\\n              args =\\n              [{ Types.attributes = [];\\n                 contents =\\n                 Types.UpvarRef {\\n                   closure_def_id =\\n                   { Types.index = (0, 185); krate = \\\"sandwich\\\";\\n                     path =\\n                     [{ Types.data = (Types.TypeNs \\\"implementation\\\");\\n                        disambiguator = 0 };\\n                       { Types.data = (Types.TypeNs \\\"openssl3_impl\\\");\\n                         disambiguator = 0 };\\n                       { Types.data = (Types.TypeNs \\\"support\\\");\\n                         disambiguator = 0 };\\n                       { Types.data = (Types.ValueNs \\\"X509_from_BIO\\\");\\n                         disambiguator = 0 };\\n                       { Types.data = Types.Closure; disambiguator = 1 }]\\n                     };\\n                   var_hir_id =\\n                   { Types.id =\\n                     { Types.local_id = \\\"63\\\";\\n                       owner =\\n                       { Types.index = (0, 181); krate = \\\"sandwich\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"implementation\\\");\\n                            disambiguator = 0 };\\n                           { Types.data = (Types.TypeNs \\\"openssl3_impl\\\");\\n                             disambiguator = 0 };\\n                           { Types.data = (Types.TypeNs \\\"support\\\");\\n                             disambiguator = 0 };\\n                           { Types.data = (Types.ValueNs \\\"X509_from_BIO\\\");\\n                             disambiguator = 0 }\\n                           ]\\n                         }\\n                       };\\n                     name = \\\"inplace_ptr\\\" }};\\n                 hir_id = (Some (\\\"181\\\", \\\"204\\\"));\\n                 span =\\n                 { Types.filename =\\n                   (Types.Real\\n                      (Types.LocalPath\\n                         \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                   hi = { Types.col = \\\"60\\\"; line = \\\"183\\\" };\\n                   lo = { Types.col = \\\"49\\\"; line = \\\"183\\\" } };\\n                 ty =\\n                 (Types.RawPtr\\n                    (Types.Adt {\\n                       def_id =\\n                       { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                            disambiguator = 0 }\\n                           ]\\n                         };\\n                       generic_args = []; trait_refs = []},\\n                     true))\\n                 }\\n                ];\\n              bounds_impls = [];\\n              fn_span =\\n              { Types.filename =\\n                (Types.Real\\n                   (Types.LocalPath\\n                      \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                hi = { Types.col = \\\"61\\\"; line = \\\"183\\\" };\\n                lo = { Types.col = \\\"29\\\"; line = \\\"183\\\" } };\\n              from_hir_call = true;\\n              fun' =\\n              { Types.attributes = [];\\n                contents =\\n                Types.GlobalName {\\n                  id =\\n                  { Types.index = (27, 16959); krate = \\\"openssl3\\\";\\n                    path =\\n                    [{ Types.data = Types.ForeignMod; disambiguator = 2628 };\\n                      { Types.data = (Types.ValueNs \\\"X509_free\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real\\n                     (Types.LocalPath\\n                        \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                  hi = { Types.col = \\\"48\\\"; line = \\\"183\\\" };\\n                  lo = { Types.col = \\\"29\\\"; line = \\\"183\\\" } };\\n                ty =\\n                (Types.Arrow\\n                   { Types.bound_vars = [];\\n                     value =\\n                     { Types.abi = Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                       c_variadic = false;\\n                       inputs =\\n                       [(Types.RawPtr\\n                           (Types.Adt {\\n                              def_id =\\n                              { Types.index = (27, 21223);\\n                                krate = \\\"openssl3\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                   disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []; trait_refs = []},\\n                            true))\\n                         ];\\n                       output = (Types.Tuple []); safety = Types.Unsafe }\\n                     })\\n                };\\n              generic_args = []; trait = None;\\n              ty =\\n              (Types.Arrow\\n                 { Types.bound_vars = [];\\n                   value =\\n                   { Types.abi = Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                     c_variadic = false;\\n                     inputs =\\n                     [(Types.RawPtr\\n                         (Types.Adt {\\n                            def_id =\\n                            { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []; trait_refs = []},\\n                          true))\\n                       ];\\n                     output = (Types.Tuple []); safety = Types.Unsafe }\\n                   })};\\n            hir_id = (Some (\\\"181\\\", \\\"200\\\"));\\n            span =\\n            { Types.filename =\\n              (Types.Real\\n                 (Types.LocalPath\\n                    \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n              hi = { Types.col = \\\"61\\\"; line = \\\"183\\\" };\\n              lo = { Types.col = \\\"29\\\"; line = \\\"183\\\" } };\\n            ty = (Types.Tuple []) });\\n    region_scope = { Types.data = Types.Node; id = \\\"206\\\" };\\n    safety_mode = Types.ExplicitUnsafe;\\n    span =\\n    { Types.filename =\\n      (Types.Real\\n         (Types.LocalPath \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n      hi = { Types.col = \\\"63\\\"; line = \\\"183\\\" };\\n      lo = { Types.col = \\\"20\\\"; line = \\\"183\\\" } };\\n    stmts = []; targeted_by_break = false};\\n  hir_id = (Some (\\\"181\\\", \\\"199\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real\\n       (Types.LocalPath \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n    hi = { Types.col = \\\"63\\\"; line = \\\"183\\\" };\\n    lo = { Types.col = \\\"20\\\"; line = \\\"183\\\" } };\\n  ty = (Types.Tuple []) }\",\n                                                )\n                                            };\n                                            {\n                                                Tuple2(\n                                                    sandwich_proto::errors::CertificateError_CERTIFICATEERROR_MALFORMED(),\n                                                    {\n                                                        let res: alloc::string::t_String = {\n                                                            alloc::fmt::format(\n                                                                core::fmt::impl_2__new_v1::<\n                                                                    lifetime!(something),\n                                                                    generic_value!(todo),\n                                                                    generic_value!(todo),\n                                                                >(\n                                                                    &(deref(&([\"failed to read the certificate: \"]))),\n                                                                    &(deref(\n                                                                        &([\n                                                                            core::fmt::rt::impl_1__new_display::<\n                                                                                lifetime!(something),\n                                                                                alloc::string::t_String,\n                                                                            >(\n                                                                                &(deref(\n                                                                                    &(sandwich::implementation::openssl3_impl::support::errstr(\n                                                                                        Tuple0,\n                                                                                    )),\n                                                                                )),\n                                                                            ),\n                                                                        ]),\n                                                                    )),\n                                                                ),\n                                                            )\n                                                        };\n                                                        { res }\n                                                    },\n                                                )\n                                            }\n                                        }\n                                    }),\n                                ),\n                            )) {\n                                core::ops::control_flow::ControlFlow_Break(residual) => {\n                                    rust_primitives::hax::never_to_any(\n                                        (return core::ops::try_trait::f_from_residual(residual)),\n                                    )\n                                }\n                                core::ops::control_flow::ControlFlow_Continue(val) => val,\n                            })\n                        };\n                        { inplace_ptr }\n                    }\n                })\n            };\n            {\n                core::result::Result_Ok(\n                    rust_primitives::hax::failure(\n                        \"(AST import) Unsafe blocks are not allowed.\",\n                        \"{ Types.attributes = [];\\n  contents =\\n  Types.Block {\\n    expr =\\n    (Some { Types.attributes = [];\\n            contents =\\n            Types.Call {\\n              args =\\n              [{ Types.attributes = [];\\n                 contents =\\n                 Types.VarRef {\\n                   id =\\n                   { Types.id =\\n                     { Types.local_id = \\\"267\\\";\\n                       owner =\\n                       { Types.index = (0, 181); krate = \\\"sandwich\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"implementation\\\");\\n                            disambiguator = 0 };\\n                           { Types.data = (Types.TypeNs \\\"openssl3_impl\\\");\\n                             disambiguator = 0 };\\n                           { Types.data = (Types.TypeNs \\\"support\\\");\\n                             disambiguator = 0 };\\n                           { Types.data = (Types.ValueNs \\\"X509_from_BIO\\\");\\n                             disambiguator = 0 }\\n                           ]\\n                         }\\n                       };\\n                     name = \\\"ptr\\\" }};\\n                 hir_id = (Some (\\\"181\\\", \\\"278\\\"));\\n                 span =\\n                 { Types.filename =\\n                   (Types.Real\\n                      (Types.LocalPath\\n                         \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                   hi = { Types.col = \\\"40\\\"; line = \\\"192\\\" };\\n                   lo = { Types.col = \\\"37\\\"; line = \\\"192\\\" } };\\n                 ty =\\n                 (Types.RawPtr\\n                    (Types.Adt {\\n                       def_id =\\n                       { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                            disambiguator = 0 }\\n                           ]\\n                         };\\n                       generic_args = []; trait_refs = []},\\n                     true))\\n                 };\\n                { Types.attributes = [];\\n                  contents =\\n                  Types.PointerCoercion {\\n                    cast = (Types.ClosureFnPointer Types.Safe);\\n                    source =\\n                    { Types.attributes = [];\\n                      contents =\\n                      Types.Closure {\\n                        body =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.Call {\\n                            args =\\n                            [{ Types.attributes = [];\\n                               contents =\\n                               Types.VarRef {\\n                                 id =\\n                                 { Types.id =\\n                                   { Types.local_id = \\\"282\\\";\\n                                     owner =\\n                                     { Types.index = (0, 181);\\n                                       krate = \\\"sandwich\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.TypeNs \\\"implementation\\\");\\n                                          disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"openssl3_impl\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"support\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.ValueNs \\\"X509_from_BIO\\\");\\n                                           disambiguator = 0 }\\n                                         ]\\n                                       }\\n                                     };\\n                                   name = \\\"x\\\" }};\\n                               hir_id = (Some (\\\"181\\\", \\\"287\\\"));\\n                               span =\\n                               { Types.filename =\\n                                 (Types.Real\\n                                    (Types.LocalPath\\n                                       \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                                 hi = { Types.col = \\\"67\\\"; line = \\\"192\\\" };\\n                                 lo = { Types.col = \\\"66\\\"; line = \\\"192\\\" } };\\n                               ty =\\n                               (Types.RawPtr\\n                                  (Types.Adt {\\n                                     def_id =\\n                                     { Types.index = (27, 21223);\\n                                       krate = \\\"openssl3\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.TypeNs \\\"x509_st\\\");\\n                                          disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     generic_args = []; trait_refs = []},\\n                                   true))\\n                               }\\n                              ];\\n                            bounds_impls = [];\\n                            fn_span =\\n                            { Types.filename =\\n                              (Types.Real\\n                                 (Types.LocalPath\\n                                    \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                              hi = { Types.col = \\\"68\\\"; line = \\\"192\\\" };\\n                              lo = { Types.col = \\\"46\\\"; line = \\\"192\\\" } };\\n                            from_hir_call = true;\\n                            fun' =\\n                            { Types.attributes = [];\\n                              contents =\\n                              Types.GlobalName {\\n                                id =\\n                                { Types.index = (27, 16959);\\n                                  krate = \\\"openssl3\\\";\\n                                  path =\\n                                  [{ Types.data = Types.ForeignMod;\\n                                     disambiguator = 2628 };\\n                                    { Types.data =\\n                                      (Types.ValueNs \\\"X509_free\\\");\\n                                      disambiguator = 0 }\\n                                    ]\\n                                  }};\\n                              hir_id = None;\\n                              span =\\n                              { Types.filename =\\n                                (Types.Real\\n                                   (Types.LocalPath\\n                                      \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                                hi = { Types.col = \\\"65\\\"; line = \\\"192\\\" };\\n                                lo = { Types.col = \\\"46\\\"; line = \\\"192\\\" } };\\n                              ty =\\n                              (Types.Arrow\\n                                 { Types.bound_vars = [];\\n                                   value =\\n                                   { Types.abi =\\n                                     Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                                     c_variadic = false;\\n                                     inputs =\\n                                     [(Types.RawPtr\\n                                         (Types.Adt {\\n                                            def_id =\\n                                            { Types.index = (27, 21223);\\n                                              krate = \\\"openssl3\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs \\\"x509_st\\\");\\n                                                 disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args = [];\\n                                            trait_refs = []},\\n                                          true))\\n                                       ];\\n                                     output = (Types.Tuple []);\\n                                     safety = Types.Unsafe }\\n                                   })\\n                              };\\n                            generic_args = []; trait = None;\\n                            ty =\\n                            (Types.Arrow\\n                               { Types.bound_vars = [];\\n                                 value =\\n                                 { Types.abi =\\n                                   Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                                   c_variadic = false;\\n                                   inputs =\\n                                   [(Types.RawPtr\\n                                       (Types.Adt {\\n                                          def_id =\\n                                          { Types.index = (27, 21223);\\n                                            krate = \\\"openssl3\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs \\\"x509_st\\\");\\n                                               disambiguator = 0 }\\n                                              ]\\n                                            };\\n                                          generic_args = []; trait_refs = []},\\n                                        true))\\n                                     ];\\n                                   output = (Types.Tuple []);\\n                                   safety = Types.Unsafe }\\n                                 })};\\n                          hir_id = (Some (\\\"181\\\", \\\"283\\\"));\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath\\n                                  \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                            hi = { Types.col = \\\"68\\\"; line = \\\"192\\\" };\\n                            lo = { Types.col = \\\"46\\\"; line = \\\"192\\\" } };\\n                          ty = (Types.Tuple []) };\\n                        movability = None;\\n                        params =\\n                        [{ Types.attributes = []; hir_id = None; pat = None;\\n                           self_kind = None;\\n                           ty =\\n                           (Types.Ref\\n                              ({ Types.kind = Types.ReErased },\\n                               (Types.Arrow\\n                                  { Types.bound_vars = [];\\n                                    value =\\n                                    { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                                      c_variadic = false;\\n                                      inputs =\\n                                      [(Types.RawPtr\\n                                          (Types.Adt {\\n                                             def_id =\\n                                             { Types.index = (27, 21223);\\n                                               krate = \\\"openssl3\\\";\\n                                               path =\\n                                               [{ Types.data =\\n                                                  (Types.TypeNs \\\"x509_st\\\");\\n                                                  disambiguator = 0 }\\n                                                 ]\\n                                               };\\n                                             generic_args = [];\\n                                             trait_refs = []},\\n                                           true))\\n                                        ];\\n                                      output = (Types.Tuple []);\\n                                      safety = Types.Safe }\\n                                    }),\\n                               false));\\n                           ty_span = None };\\n                          { Types.attributes = [];\\n                            hir_id =\\n                            (Some { Types.local_id = \\\"281\\\";\\n                                    owner =\\n                                    { Types.index = (0, 181);\\n                                      krate = \\\"sandwich\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"implementation\\\");\\n                                         disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.TypeNs \\\"openssl3_impl\\\");\\n                                          disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.TypeNs \\\"support\\\");\\n                                          disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.ValueNs \\\"X509_from_BIO\\\");\\n                                          disambiguator = 0 }\\n                                        ]\\n                                      }\\n                                    });\\n                            pat =\\n                            (Some { Types.attributes = [];\\n                                    contents =\\n                                    Types.Binding {is_primary = true;\\n                                      mode =\\n                                      { Types.by_ref = Types.No;\\n                                        mutability = false };\\n                                      subpattern = None;\\n                                      ty =\\n                                      (Types.RawPtr\\n                                         (Types.Adt {\\n                                            def_id =\\n                                            { Types.index = (27, 21223);\\n                                              krate = \\\"openssl3\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs \\\"x509_st\\\");\\n                                                 disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args = [];\\n                                            trait_refs = []},\\n                                          true));\\n                                      var =\\n                                      { Types.id =\\n                                        { Types.local_id = \\\"282\\\";\\n                                          owner =\\n                                          { Types.index = (0, 181);\\n                                            krate = \\\"sandwich\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs \\\"implementation\\\");\\n                                               disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"openssl3_impl\\\");\\n                                                disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"support\\\");\\n                                                disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.ValueNs\\n                                                   \\\"X509_from_BIO\\\");\\n                                                disambiguator = 0 }\\n                                              ]\\n                                            }\\n                                          };\\n                                        name = \\\"x\\\" }};\\n                                    hir_id = None;\\n                                    span =\\n                                    { Types.filename =\\n                                      (Types.Real\\n                                         (Types.LocalPath\\n                                            \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                                      hi = { Types.col = \\\"44\\\"; line = \\\"192\\\" };\\n                                      lo = { Types.col = \\\"43\\\"; line = \\\"192\\\" }\\n                                      };\\n                                    ty =\\n                                    (Types.RawPtr\\n                                       (Types.Adt {\\n                                          def_id =\\n                                          { Types.index = (27, 21223);\\n                                            krate = \\\"openssl3\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs \\\"x509_st\\\");\\n                                               disambiguator = 0 }\\n                                              ]\\n                                            };\\n                                          generic_args = []; trait_refs = []},\\n                                        true))\\n                                    });\\n                            self_kind = None;\\n                            ty =\\n                            (Types.RawPtr\\n                               (Types.Adt {\\n                                  def_id =\\n                                  { Types.index = (27, 21223);\\n                                    krate = \\\"openssl3\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                       disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args = []; trait_refs = []},\\n                                true));\\n                            ty_span = None }\\n                          ];\\n                        upvars = []};\\n                      hir_id = None;\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath\\n                              \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                        hi = { Types.col = \\\"68\\\"; line = \\\"192\\\" };\\n                        lo = { Types.col = \\\"42\\\"; line = \\\"192\\\" } };\\n                      ty =\\n                      (Types.Arrow\\n                         { Types.bound_vars = [];\\n                           value =\\n                           { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                             c_variadic = false;\\n                             inputs =\\n                             [(Types.RawPtr\\n                                 (Types.Adt {\\n                                    def_id =\\n                                    { Types.index = (27, 21223);\\n                                      krate = \\\"openssl3\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"x509_st\\\");\\n                                         disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args = []; trait_refs = []},\\n                                  true))\\n                               ];\\n                             output = (Types.Tuple []); safety = Types.Safe }\\n                           })\\n                      }};\\n                  hir_id = (Some (\\\"181\\\", \\\"280\\\"));\\n                  span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath\\n                          \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                    hi = { Types.col = \\\"68\\\"; line = \\\"192\\\" };\\n                    lo = { Types.col = \\\"42\\\"; line = \\\"192\\\" } };\\n                  ty =\\n                  (Types.Arrow\\n                     { Types.bound_vars = [];\\n                       value =\\n                       { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                         c_variadic = false;\\n                         inputs =\\n                         [(Types.RawPtr\\n                             (Types.Adt {\\n                                def_id =\\n                                { Types.index = (27, 21223);\\n                                  krate = \\\"openssl3\\\";\\n                                  path =\\n                                  [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  };\\n                                generic_args = []; trait_refs = []},\\n                              true))\\n                           ];\\n                         output = (Types.Tuple []); safety = Types.Safe }\\n                       })\\n                  }\\n                ];\\n              bounds_impls = [];\\n              fn_span =\\n              { Types.filename =\\n                (Types.Real\\n                   (Types.LocalPath\\n                      \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                hi = { Types.col = \\\"69\\\"; line = \\\"192\\\" };\\n                lo = { Types.col = \\\"16\\\"; line = \\\"192\\\" } };\\n              from_hir_call = true;\\n              fun' =\\n              { Types.attributes = [];\\n                contents =\\n                Types.GlobalName {\\n                  id =\\n                  { Types.index = (0, 643); krate = \\\"sandwich\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"support\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                        disambiguator = 0 };\\n                      { Types.data = Types.Impl; disambiguator = 2 };\\n                      { Types.data = (Types.ValueNs \\\"new_unchecked\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real\\n                     (Types.LocalPath\\n                        \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n                  hi = { Types.col = \\\"36\\\"; line = \\\"192\\\" };\\n                  lo = { Types.col = \\\"16\\\"; line = \\\"192\\\" } };\\n                ty =\\n                (Types.Arrow\\n                   { Types.bound_vars = [];\\n                     value =\\n                     { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                       c_variadic = false;\\n                       inputs =\\n                       [(Types.RawPtr\\n                           (Types.Adt {\\n                              def_id =\\n                              { Types.index = (27, 21223);\\n                                krate = \\\"openssl3\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                   disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []; trait_refs = []},\\n                            true));\\n                         (Types.Arrow\\n                            { Types.bound_vars = [];\\n                              value =\\n                              { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                                c_variadic = false;\\n                                inputs =\\n                                [(Types.RawPtr\\n                                    (Types.Adt {\\n                                       def_id =\\n                                       { Types.index = (27, 21223);\\n                                         krate = \\\"openssl3\\\";\\n                                         path =\\n                                         [{ Types.data =\\n                                            (Types.TypeNs \\\"x509_st\\\");\\n                                            disambiguator = 0 }\\n                                           ]\\n                                         };\\n                                       generic_args = []; trait_refs = []},\\n                                     true))\\n                                  ];\\n                                output = (Types.Tuple []);\\n                                safety = Types.Safe }\\n                              })\\n                         ];\\n                       output =\\n                       Types.Adt {\\n                         def_id =\\n                         { Types.index = (0, 628); krate = \\\"sandwich\\\";\\n                           path =\\n                           [{ Types.data = (Types.TypeNs \\\"support\\\");\\n                              disambiguator = 0 };\\n                             { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                               disambiguator = 0 };\\n                             { Types.data = (Types.TypeNs \\\"Pimpl\\\");\\n                               disambiguator = 0 }\\n                             ]\\n                           };\\n                         generic_args =\\n                         [(Types.Lifetime { Types.kind = Types.ReErased });\\n                           (Types.Type\\n                              Types.Adt {\\n                                def_id =\\n                                { Types.index = (27, 21223);\\n                                  krate = \\\"openssl3\\\";\\n                                  path =\\n                                  [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  };\\n                                generic_args = []; trait_refs = []})\\n                           ];\\n                         trait_refs =\\n                         [{ Types.args = [];\\n                            impl =\\n                            Types.Builtin {\\n                              trait =\\n                              { Types.def_id =\\n                                { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                  path =\\n                                  [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                     disambiguator = 0 };\\n                                    { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                      disambiguator = 0 }\\n                                    ]\\n                                  };\\n                                generic_args =\\n                                [(Types.Type\\n                                    Types.Adt {\\n                                      def_id =\\n                                      { Types.index = (27, 21223);\\n                                        krate = \\\"openssl3\\\";\\n                                        path =\\n                                        [{ Types.data =\\n                                           (Types.TypeNs \\\"x509_st\\\");\\n                                           disambiguator = 0 }\\n                                          ]\\n                                        };\\n                                      generic_args = []; trait_refs = []})\\n                                  ]\\n                                }};\\n                            trait =\\n                            { Types.def_id =\\n                              { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                   disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                    disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args =\\n                              [(Types.Type\\n                                  Types.Adt {\\n                                    def_id =\\n                                    { Types.index = (27, 21223);\\n                                      krate = \\\"openssl3\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"x509_st\\\");\\n                                         disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args = []; trait_refs = []})\\n                                ]\\n                              }\\n                            }\\n                           ]};\\n                       safety = Types.Unsafe }\\n                     })\\n                };\\n              generic_args =\\n              [(Types.Lifetime { Types.kind = Types.ReErased });\\n                (Types.Type\\n                   Types.Adt {\\n                     def_id =\\n                     { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                       path =\\n                       [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                          disambiguator = 0 }\\n                         ]\\n                       };\\n                     generic_args = []; trait_refs = []})\\n                ];\\n              trait = None;\\n              ty =\\n              (Types.Arrow\\n                 { Types.bound_vars = [];\\n                   value =\\n                   { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                     c_variadic = false;\\n                     inputs =\\n                     [(Types.RawPtr\\n                         (Types.Adt {\\n                            def_id =\\n                            { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []; trait_refs = []},\\n                          true));\\n                       (Types.Arrow\\n                          { Types.bound_vars = [];\\n                            value =\\n                            { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                              c_variadic = false;\\n                              inputs =\\n                              [(Types.RawPtr\\n                                  (Types.Adt {\\n                                     def_id =\\n                                     { Types.index = (27, 21223);\\n                                       krate = \\\"openssl3\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.TypeNs \\\"x509_st\\\");\\n                                          disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     generic_args = []; trait_refs = []},\\n                                   true))\\n                                ];\\n                              output = (Types.Tuple []); safety = Types.Safe\\n                              }\\n                            })\\n                       ];\\n                     output =\\n                     Types.Adt {\\n                       def_id =\\n                       { Types.index = (0, 628); krate = \\\"sandwich\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"support\\\");\\n                            disambiguator = 0 };\\n                           { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                             disambiguator = 0 };\\n                           { Types.data = (Types.TypeNs \\\"Pimpl\\\");\\n                             disambiguator = 0 }\\n                           ]\\n                         };\\n                       generic_args =\\n                       [(Types.Lifetime { Types.kind = Types.ReErased });\\n                         (Types.Type\\n                            Types.Adt {\\n                              def_id =\\n                              { Types.index = (27, 21223);\\n                                krate = \\\"openssl3\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                   disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []; trait_refs = []})\\n                         ];\\n                       trait_refs =\\n                       [{ Types.args = [];\\n                          impl =\\n                          Types.Builtin {\\n                            trait =\\n                            { Types.def_id =\\n                              { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                   disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                    disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args =\\n                              [(Types.Type\\n                                  Types.Adt {\\n                                    def_id =\\n                                    { Types.index = (27, 21223);\\n                                      krate = \\\"openssl3\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"x509_st\\\");\\n                                         disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args = []; trait_refs = []})\\n                                ]\\n                              }};\\n                          trait =\\n                          { Types.def_id =\\n                            { Types.index = (2, 26413); krate = \\\"core\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args =\\n                            [(Types.Type\\n                                Types.Adt {\\n                                  def_id =\\n                                  { Types.index = (27, 21223);\\n                                    krate = \\\"openssl3\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                       disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args = []; trait_refs = []})\\n                              ]\\n                            }\\n                          }\\n                         ]};\\n                     safety = Types.Unsafe }\\n                   })};\\n            hir_id = (Some (\\\"181\\\", \\\"272\\\"));\\n            span =\\n            { Types.filename =\\n              (Types.Real\\n                 (Types.LocalPath\\n                    \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n              hi = { Types.col = \\\"69\\\"; line = \\\"192\\\" };\\n              lo = { Types.col = \\\"16\\\"; line = \\\"192\\\" } };\\n            ty =\\n            Types.Adt {\\n              def_id =\\n              { Types.index = (0, 628); krate = \\\"sandwich\\\";\\n                path =\\n                [{ Types.data = (Types.TypeNs \\\"support\\\"); disambiguator = 0 };\\n                  { Types.data = (Types.TypeNs \\\"pimpl\\\"); disambiguator = 0 };\\n                  { Types.data = (Types.TypeNs \\\"Pimpl\\\"); disambiguator = 0 }]\\n                };\\n              generic_args =\\n              [(Types.Lifetime { Types.kind = Types.ReErased });\\n                (Types.Type\\n                   Types.Adt {\\n                     def_id =\\n                     { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                       path =\\n                       [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                          disambiguator = 0 }\\n                         ]\\n                       };\\n                     generic_args = []; trait_refs = []})\\n                ];\\n              trait_refs =\\n              [{ Types.args = [];\\n                 impl =\\n                 Types.Builtin {\\n                   trait =\\n                   { Types.def_id =\\n                     { Types.index = (2, 26413); krate = \\\"core\\\";\\n                       path =\\n                       [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                          disambiguator = 0 };\\n                         { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                           disambiguator = 0 }\\n                         ]\\n                       };\\n                     generic_args =\\n                     [(Types.Type\\n                         Types.Adt {\\n                           def_id =\\n                           { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                                disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []; trait_refs = []})\\n                       ]\\n                     }};\\n                 trait =\\n                 { Types.def_id =\\n                   { Types.index = (2, 26413); krate = \\\"core\\\";\\n                     path =\\n                     [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                        disambiguator = 0 };\\n                       { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                         disambiguator = 0 }\\n                       ]\\n                     };\\n                   generic_args =\\n                   [(Types.Type\\n                       Types.Adt {\\n                         def_id =\\n                         { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                           path =\\n                           [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                              disambiguator = 0 }\\n                             ]\\n                           };\\n                         generic_args = []; trait_refs = []})\\n                     ]\\n                   }\\n                 }\\n                ]}\\n            });\\n    region_scope = { Types.data = Types.Node; id = \\\"290\\\" };\\n    safety_mode = Types.ExplicitUnsafe;\\n    span =\\n    { Types.filename =\\n      (Types.Real\\n         (Types.LocalPath \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n      hi = { Types.col = \\\"71\\\"; line = \\\"192\\\" };\\n      lo = { Types.col = \\\"7\\\"; line = \\\"192\\\" } };\\n    stmts = []; targeted_by_break = false};\\n  hir_id = (Some (\\\"181\\\", \\\"271\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real\\n       (Types.LocalPath \\\"rust/implementation/openssl3_impl/support.rs\\\"));\\n    hi = { Types.col = \\\"71\\\"; line = \\\"192\\\" };\\n    lo = { Types.col = \\\"7\\\"; line = \\\"192\\\" } };\\n  ty =\\n  Types.Adt {\\n    def_id =\\n    { Types.index = (0, 628); krate = \\\"sandwich\\\";\\n      path =\\n      [{ Types.data = (Types.TypeNs \\\"support\\\"); disambiguator = 0 };\\n        { Types.data = (Types.TypeNs \\\"pimpl\\\"); disambiguator = 0 };\\n        { Types.data = (Types.TypeNs \\\"Pimpl\\\"); disambiguator = 0 }]\\n      };\\n    generic_args =\\n    [(Types.Lifetime { Types.kind = Types.ReErased });\\n      (Types.Type\\n         Types.Adt {\\n           def_id =\\n           { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n             path =\\n             [{ Types.data = (Types.TypeNs \\\"x509_st\\\"); disambiguator = 0 }] };\\n           generic_args = []; trait_refs = []})\\n      ];\\n    trait_refs =\\n    [{ Types.args = [];\\n       impl =\\n       Types.Builtin {\\n         trait =\\n         { Types.def_id =\\n           { Types.index = (2, 26413); krate = \\\"core\\\";\\n             path =\\n             [{ Types.data = (Types.TypeNs \\\"marker\\\"); disambiguator = 0 };\\n               { Types.data = (Types.TypeNs \\\"Sized\\\"); disambiguator = 0 }]\\n             };\\n           generic_args =\\n           [(Types.Type\\n               Types.Adt {\\n                 def_id =\\n                 { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                   path =\\n                   [{ Types.data = (Types.TypeNs \\\"x509_st\\\");\\n                      disambiguator = 0 }\\n                     ]\\n                   };\\n                 generic_args = []; trait_refs = []})\\n             ]\\n           }};\\n       trait =\\n       { Types.def_id =\\n         { Types.index = (2, 26413); krate = \\\"core\\\";\\n           path =\\n           [{ Types.data = (Types.TypeNs \\\"marker\\\"); disambiguator = 0 };\\n             { Types.data = (Types.TypeNs \\\"Sized\\\"); disambiguator = 0 }]\\n           };\\n         generic_args =\\n         [(Types.Type\\n             Types.Adt {\\n               def_id =\\n               { Types.index = (27, 21223); krate = \\\"openssl3\\\";\\n                 path =\\n                 [{ Types.data = (Types.TypeNs \\\"x509_st\\\"); disambiguator = 0\\n                    }\\n                   ]\\n                 };\\n               generic_args = []; trait_refs = []})\\n           ]\\n         }\\n       }\\n      ]}\\n  }\",\n                    ),\n                )\n            }\n        }\n    }"

  | Core.Result.Result_Err err ->
    Core.Result.Result_Err (Core.Convert.f_from #FStar.Tactics.Typeclasses.solve err)
    <:
    Core.Result.t_Result (Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_x509_st) Sandwich.Error.t_Error
