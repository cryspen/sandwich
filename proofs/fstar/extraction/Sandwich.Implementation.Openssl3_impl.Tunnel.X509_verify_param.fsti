module Sandwich.Implementation.Openssl3_impl.Tunnel.X509_verify_param
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

let _ =
  (* This module has implicit dependencies, here we make them explicit. *)
  (* The implicit dependencies arise from typeclasses instances. *)
  let open Sandwich.Error in
  let open Sandwich.Error.Code in
  let open Sandwich_api_proto.Verifiers.Sanmatcher in
  ()

/// Wrapper around the X509_VERIFY_PARAM object.
type t_X509VerifyParam =
  | X509VerifyParam :
      Core.Ptr.Non_null.t_NonNull Openssl3.t_X509_VERIFY_PARAM_st ->
      Core.Marker.t_PhantomData Openssl3.t_X509_VERIFY_PARAM_st
    -> t_X509VerifyParam

/// Sets the depth for the certificate chain validation.
val impl_3__set_certificate_chain_validation_depth
      (#impl_765196419_: Type0)
      {| i1: Core.Convert.t_Into impl_765196419_ i32 |}
      (self: t_X509VerifyParam)
      (depth: impl_765196419_)
    : Prims.Pure Prims.unit Prims.l_True (fun _ -> Prims.l_True)

/// Updates the depth for the certificate validation using the
/// `X509Verifier` configuration object.
val impl_3__update_certificate_chain_validation_depth_from_x509_verifier
      (self: t_X509VerifyParam)
      (x509_verifier: Core.Option.t_Option Sandwich_api_proto.Verifiers.t_X509Verifier)
    : Prims.Pure Prims.unit Prims.l_True (fun _ -> Prims.l_True)

val impl_3__add_san__create_cstring
      (#impl_488124255_: Type0)
      {| i1: Core.Convert.t_AsRef impl_488124255_ string |}
      (value: impl_488124255_)
    : Prims.Pure (Core.Result.t_Result Alloc.Ffi.C_str.t_CString Sandwich.Error.t_Error)
      Prims.l_True
      (fun _ -> Prims.l_True)

/// Adds a Subject Alternative Name (SAN).
val impl_3__add_san (self: t_X509VerifyParam) (san: Sandwich_api_proto.Verifiers.Sanmatcher.t_San)
    : Prims.Pure (Core.Result.t_Result Prims.unit Sandwich.Error.t_Error)
      Prims.l_True
      (fun _ -> Prims.l_True)

/// Enable a flag.
/// This function calls `X509_VERIFY_PARAM_set_flags` to enable a flag.
/// Even if the function's name is `set_flags`, it actually does a OR
/// between the existing flags and the given flag.
val impl_3__enable_flag
      (#impl_101696938_: Type0)
      {| i3: Core.Convert.t_Into impl_101696938_ u64 |}
      (self: t_X509VerifyParam)
      (flag: impl_101696938_)
    : Prims.Pure (Core.Result.t_Result Prims.unit Sandwich.Error.t_Error)
      Prims.l_True
      (fun _ -> Prims.l_True)

/// Enables CRL checking for the entire chain of certificates.
val impl_3__enable_crl_check_for_all_certificates (self: t_X509VerifyParam)
    : Prims.Pure (Core.Result.t_Result Prims.unit Sandwich.Error.t_Error)
      Prims.l_True
      (fun _ -> Prims.l_True)

/// Enables the strict verification for X509.
val impl_3__enable_strict_x509_verification (self: t_X509VerifyParam)
    : Prims.Pure (Core.Result.t_Result Prims.unit Sandwich.Error.t_Error)
      Prims.l_True
      (fun _ -> Prims.l_True)

/// Enables the trusted first feature.
/// When enabled, certificate authority certificates stored in the certificate
/// store (X509_STORE) will be used first during the certificate chain
/// validation.
val impl_3__enable_trusted_first_from_trust_store (self: t_X509VerifyParam)
    : Prims.Pure (Core.Result.t_Result Prims.unit Sandwich.Error.t_Error)
      Prims.l_True
      (fun _ -> Prims.l_True)

/// Applies the default parameters.
/// This function sets the following default values:
///  - Maximum depth for certificate chain validation
val impl_3__set_default_parameters (self: t_X509VerifyParam)
    : Prims.Pure (Core.Result.t_Result Prims.unit Sandwich.Error.t_Error)
      Prims.l_True
      (fun _ -> Prims.l_True)

/// Instantiates an [`X509VerifyParam`] from an SSL context.
[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl: Core.Convert.t_TryFrom t_X509VerifyParam
  (Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_ssl_ctx_st) =
  {
    f_Error = Sandwich.Error.t_Error;
    f_try_from_pre = (fun (ssl_ctx: Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_ssl_ctx_st) -> true);
    f_try_from_post
    =
    (fun
        (ssl_ctx: Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_ssl_ctx_st)
        (out: Core.Result.t_Result t_X509VerifyParam Sandwich.Error.t_Error)
        ->
        true);
    f_try_from
    =
    fun (ssl_ctx: Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_ssl_ctx_st) ->
      match
        Core.Option.impl__ok_or #(Core.Ptr.Non_null.t_NonNull Openssl3.t_X509_VERIFY_PARAM_st)
          #(Sandwich_proto.Errors.t_SystemError & string)
          (Rust_primitives.Hax.failure "(RefMut) Fatal error: something we considered as impossible occurred! \027[1mPlease report this by submitting an issue on GitHub!\027[0m\nDetails: expected an arrow type here"
              "rust_primitives::hax::failure(\"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\"core::ptr::non_null::impl_3__new\")::<openssl3::t_X509_VERIFY_PARAM_st>(rust_primitives::hax::failure(\"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\"rust_primitives::hax::failure(\\n        \\\"(AST import) Unsafe blocks are not allowed.\\\",\\n        \\\"{ Types.attributes = [];\\\\n  contents =\\\\n  Types.Block {\\\\n    expr =\\\\n    (Some { Types.attributes = [];\\\\n            contents =\\\\n            Types.Call {\\\\n              args =\\\\n              [{ Types.attributes = [];\\\\n                 contents =\\\\n                 Types.Call {\\\\n                   args =\\\\n                   [{ Types.attributes = [];\\\\n                      contents =\\\\n                      Types.Call {\\\\n                        args =\\\\n                        [{ Types.attributes = [];\\\\n                           contents =\\\\n                           Types.Borrow {\\\\n                             arg =\\\\n                             { Types.attributes = [];\\\\n                               contents =\\\\n                               Types.Deref {\\\\n                                 arg =\\\\n                                 { Types.attributes = [];\\\\n                                   contents =\\\\n                                   Types.VarRef {\\\\n                                     id =\\\\n                                     { Types.id =\\\\n                                       { Types.local_id = \\\\\\\"2\\\\\\\";\\\\n                                         owner =\\\\n                                         { Types.index = (0, 412);\\\\n                                           krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                           path =\\\\n                                           [{ Types.data =\\\\n                                              (Types.TypeNs \\\\\\\"implementation\\\\\\\");\\\\n                                              disambiguator = 0 };\\\\n                                             { Types.data =\\\\n                                               (Types.TypeNs \\\\\\\"openssl3_impl\\\\\\\");\\\\n                                               disambiguator = 0 };\\\\n                                             { Types.data =\\\\n                                               (Types.TypeNs \\\\\\\"tunnel\\\\\\\");\\\\n                                               disambiguator = 0 };\\\\n                                             { Types.data =\\\\n                                               (Types.TypeNs\\\\n                                                  \\\\\\\"x509_verify_param\\\\\\\");\\\\n                                               disambiguator = 0 };\\\\n                                             { Types.data = Types.Impl;\\\\n                                               disambiguator = 0 };\\\\n                                             { Types.data =\\\\n                                               (Types.ValueNs \\\\\\\"try_from\\\\\\\");\\\\n                                               disambiguator = 0 }\\\\n                                             ]\\\\n                                           }\\\\n                                         };\\\\n                                       name = \\\\\\\"ssl_ctx\\\\\\\" }};\\\\n                                   hir_id = None;\\\\n                                   span =\\\\n                                   { Types.filename =\\\\n                                     (Types.Real\\\\n                                        (Types.LocalPath\\\\n                                           \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                                     hi = { Types.col = \\\\\\\"70\\\\\\\"; line = \\\\\\\"32\\\\\\\" };\\\\n                                     lo = { Types.col = \\\\\\\"63\\\\\\\"; line = \\\\\\\"32\\\\\\\" } };\\\\n                                   ty =\\\\n                                   (Types.Ref\\\\n                                      ({ Types.kind = Types.ReErased },\\\\n                                       Types.Adt {\\\\n                                         def_id =\\\\n                                         { Types.index = (0, 616);\\\\n                                           krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                           path =\\\\n                                           [{ Types.data =\\\\n                                              (Types.TypeNs \\\\\\\"support\\\\\\\");\\\\n                                              disambiguator = 0 };\\\\n                                             { Types.data =\\\\n                                               (Types.TypeNs \\\\\\\"pimpl\\\\\\\");\\\\n                                               disambiguator = 0 };\\\\n                                             { Types.data =\\\\n                                               (Types.TypeNs \\\\\\\"Pimpl\\\\\\\");\\\\n                                               disambiguator = 0 }\\\\n                                             ]\\\\n                                           };\\\\n                                         generic_args =\\\\n                                         [(Types.Lifetime\\\\n                                             { Types.kind = Types.ReErased });\\\\n                                           (Types.Type\\\\n                                              Types.Adt {\\\\n                                                def_id =\\\\n                                                { Types.index = (27, 21403);\\\\n                                                  krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                                  path =\\\\n                                                  [{ Types.data =\\\\n                                                     (Types.TypeNs\\\\n                                                        \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                                     disambiguator = 0 }\\\\n                                                    ]\\\\n                                                  };\\\\n                                                generic_args = [];\\\\n                                                trait_refs = []})\\\\n                                           ];\\\\n                                         trait_refs =\\\\n                                         [{ Types.args = [];\\\\n                                            impl =\\\\n                                            Types.Builtin {\\\\n                                              trait =\\\\n                                              { Types.def_id =\\\\n                                                { Types.index = (2, 26413);\\\\n                                                  krate = \\\\\\\"core\\\\\\\";\\\\n                                                  path =\\\\n                                                  [{ Types.data =\\\\n                                                     (Types.TypeNs \\\\\\\"marker\\\\\\\");\\\\n                                                     disambiguator = 0 };\\\\n                                                    { Types.data =\\\\n                                                      (Types.TypeNs \\\\\\\"Sized\\\\\\\");\\\\n                                                      disambiguator = 0 }\\\\n                                                    ]\\\\n                                                  };\\\\n                                                generic_args =\\\\n                                                [(Types.Type\\\\n                                                    Types.Adt {\\\\n                                                      def_id =\\\\n                                                      { Types.index =\\\\n                                                        (27, 21403);\\\\n                                                        krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                                        path =\\\\n                                                        [{ Types.data =\\\\n                                                           (Types.TypeNs\\\\n                                                              \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                                           disambiguator = 0\\\\n                                                           }\\\\n                                                          ]\\\\n                                                        };\\\\n                                                      generic_args = [];\\\\n                                                      trait_refs = []})\\\\n                                                  ]\\\\n                                                }};\\\\n                                            trait =\\\\n                                            { Types.def_id =\\\\n                                              { Types.index = (2, 26413);\\\\n                                                krate = \\\\\\\"core\\\\\\\";\\\\n                                                path =\\\\n                                                [{ Types.data =\\\\n                                                   (Types.TypeNs \\\\\\\"marker\\\\\\\");\\\\n                                                   disambiguator = 0 };\\\\n                                                  { Types.data =\\\\n                                                    (Types.TypeNs \\\\\\\"Sized\\\\\\\");\\\\n                                                    disambiguator = 0 }\\\\n                                                  ]\\\\n                                                };\\\\n                                              generic_args =\\\\n                                              [(Types.Type\\\\n                                                  Types.Adt {\\\\n                                                    def_id =\\\\n                                                    { Types.index =\\\\n                                                      (27, 21403);\\\\n                                                      krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                                      path =\\\\n                                                      [{ Types.data =\\\\n                                                         (Types.TypeNs\\\\n                                                            \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                                         disambiguator = 0 }\\\\n                                                        ]\\\\n                                                      };\\\\n                                                    generic_args = [];\\\\n                                                    trait_refs = []})\\\\n                                                ]\\\\n                                              }\\\\n                                            }\\\\n                                           ]},\\\\n                                       false))\\\\n                                   }};\\\\n                               hir_id = None;\\\\n                               span =\\\\n                               { Types.filename =\\\\n                                 (Types.Real\\\\n                                    (Types.LocalPath\\\\n                                       \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                                 hi = { Types.col = \\\\\\\"70\\\\\\\"; line = \\\\\\\"32\\\\\\\" };\\\\n                                 lo = { Types.col = \\\\\\\"63\\\\\\\"; line = \\\\\\\"32\\\\\\\" } };\\\\n                               ty =\\\\n                               Types.Adt {\\\\n                                 def_id =\\\\n                                 { Types.index = (0, 616);\\\\n                                   krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                   path =\\\\n                                   [{ Types.data = (Types.TypeNs \\\\\\\"support\\\\\\\");\\\\n                                      disambiguator = 0 };\\\\n                                     { Types.data = (Types.TypeNs \\\\\\\"pimpl\\\\\\\");\\\\n                                       disambiguator = 0 };\\\\n                                     { Types.data = (Types.TypeNs \\\\\\\"Pimpl\\\\\\\");\\\\n                                       disambiguator = 0 }\\\\n                                     ]\\\\n                                   };\\\\n                                 generic_args =\\\\n                                 [(Types.Lifetime\\\\n                                     { Types.kind = Types.ReErased });\\\\n                                   (Types.Type\\\\n                                      Types.Adt {\\\\n                                        def_id =\\\\n                                        { Types.index = (27, 21403);\\\\n                                          krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                          path =\\\\n                                          [{ Types.data =\\\\n                                             (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                             disambiguator = 0 }\\\\n                                            ]\\\\n                                          };\\\\n                                        generic_args = []; trait_refs = []})\\\\n                                   ];\\\\n                                 trait_refs =\\\\n                                 [{ Types.args = [];\\\\n                                    impl =\\\\n                                    Types.Builtin {\\\\n                                      trait =\\\\n                                      { Types.def_id =\\\\n                                        { Types.index = (2, 26413);\\\\n                                          krate = \\\\\\\"core\\\\\\\";\\\\n                                          path =\\\\n                                          [{ Types.data =\\\\n                                             (Types.TypeNs \\\\\\\"marker\\\\\\\");\\\\n                                             disambiguator = 0 };\\\\n                                            { Types.data =\\\\n                                              (Types.TypeNs \\\\\\\"Sized\\\\\\\");\\\\n                                              disambiguator = 0 }\\\\n                                            ]\\\\n                                          };\\\\n                                        generic_args =\\\\n                                        [(Types.Type\\\\n                                            Types.Adt {\\\\n                                              def_id =\\\\n                                              { Types.index = (27, 21403);\\\\n                                                krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                                path =\\\\n                                                [{ Types.data =\\\\n                                                   (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                                   disambiguator = 0 }\\\\n                                                  ]\\\\n                                                };\\\\n                                              generic_args = [];\\\\n                                              trait_refs = []})\\\\n                                          ]\\\\n                                        }};\\\\n                                    trait =\\\\n                                    { Types.def_id =\\\\n                                      { Types.index = (2, 26413);\\\\n                                        krate = \\\\\\\"core\\\\\\\";\\\\n                                        path =\\\\n                                        [{ Types.data =\\\\n                                           (Types.TypeNs \\\\\\\"marker\\\\\\\");\\\\n                                           disambiguator = 0 };\\\\n                                          { Types.data =\\\\n                                            (Types.TypeNs \\\\\\\"Sized\\\\\\\");\\\\n                                            disambiguator = 0 }\\\\n                                          ]\\\\n                                        };\\\\n                                      generic_args =\\\\n                                      [(Types.Type\\\\n                                          Types.Adt {\\\\n                                            def_id =\\\\n                                            { Types.index = (27, 21403);\\\\n                                              krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                              path =\\\\n                                              [{ Types.data =\\\\n                                                 (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                                 disambiguator = 0 }\\\\n                                                ]\\\\n                                              };\\\\n                                            generic_args = [];\\\\n                                            trait_refs = []})\\\\n                                        ]\\\\n                                      }\\\\n                                    }\\\\n                                   ]}\\\\n                               };\\\\n                             borrow_kind = Types.Shared};\\\\n                           hir_id = (Some (\\\\\\\"412\\\\\\\", \\\\\\\"21\\\\\\\"));\\\\n                           span =\\\\n                           { Types.filename =\\\\n                             (Types.Real\\\\n                                (Types.LocalPath\\\\n                                   \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                             hi = { Types.col = \\\\\\\"70\\\\\\\"; line = \\\\\\\"32\\\\\\\" };\\\\n                             lo = { Types.col = \\\\\\\"63\\\\\\\"; line = \\\\\\\"32\\\\\\\" } };\\\\n                           ty =\\\\n                           (Types.Ref\\\\n                              ({ Types.kind = Types.ReErased },\\\\n                               Types.Adt {\\\\n                                 def_id =\\\\n                                 { Types.index = (0, 616);\\\\n                                   krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                   path =\\\\n                                   [{ Types.data = (Types.TypeNs \\\\\\\"support\\\\\\\");\\\\n                                      disambiguator = 0 };\\\\n                                     { Types.data = (Types.TypeNs \\\\\\\"pimpl\\\\\\\");\\\\n                                       disambiguator = 0 };\\\\n                                     { Types.data = (Types.TypeNs \\\\\\\"Pimpl\\\\\\\");\\\\n                                       disambiguator = 0 }\\\\n                                     ]\\\\n                                   };\\\\n                                 generic_args =\\\\n                                 [(Types.Lifetime\\\\n                                     { Types.kind = Types.ReErased });\\\\n                                   (Types.Type\\\\n                                      Types.Adt {\\\\n                                        def_id =\\\\n                                        { Types.index = (27, 21403);\\\\n                                          krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                          path =\\\\n                                          [{ Types.data =\\\\n                                             (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                             disambiguator = 0 }\\\\n                                            ]\\\\n                                          };\\\\n                                        generic_args = []; trait_refs = []})\\\\n                                   ];\\\\n                                 trait_refs =\\\\n                                 [{ Types.args = [];\\\\n                                    impl =\\\\n                                    Types.Builtin {\\\\n                                      trait =\\\\n                                      { Types.def_id =\\\\n                                        { Types.index = (2, 26413);\\\\n                                          krate = \\\\\\\"core\\\\\\\";\\\\n                                          path =\\\\n                                          [{ Types.data =\\\\n                                             (Types.TypeNs \\\\\\\"marker\\\\\\\");\\\\n                                             disambiguator = 0 };\\\\n                                            { Types.data =\\\\n                                              (Types.TypeNs \\\\\\\"Sized\\\\\\\");\\\\n                                              disambiguator = 0 }\\\\n                                            ]\\\\n                                          };\\\\n                                        generic_args =\\\\n                                        [(Types.Type\\\\n                                            Types.Adt {\\\\n                                              def_id =\\\\n                                              { Types.index = (27, 21403);\\\\n                                                krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                                path =\\\\n                                                [{ Types.data =\\\\n                                                   (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                                   disambiguator = 0 }\\\\n                                                  ]\\\\n                                                };\\\\n                                              generic_args = [];\\\\n                                              trait_refs = []})\\\\n                                          ]\\\\n                                        }};\\\\n                                    trait =\\\\n                                    { Types.def_id =\\\\n                                      { Types.index = (2, 26413);\\\\n                                        krate = \\\\\\\"core\\\\\\\";\\\\n                                        path =\\\\n                                        [{ Types.data =\\\\n                                           (Types.TypeNs \\\\\\\"marker\\\\\\\");\\\\n                                           disambiguator = 0 };\\\\n                                          { Types.data =\\\\n                                            (Types.TypeNs \\\\\\\"Sized\\\\\\\");\\\\n                                            disambiguator = 0 }\\\\n                                          ]\\\\n                                        };\\\\n                                      generic_args =\\\\n                                      [(Types.Type\\\\n                                          Types.Adt {\\\\n                                            def_id =\\\\n                                            { Types.index = (27, 21403);\\\\n                                              krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                              path =\\\\n                                              [{ Types.data =\\\\n                                                 (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                                 disambiguator = 0 }\\\\n                                                ]\\\\n                                              };\\\\n                                            generic_args = [];\\\\n                                            trait_refs = []})\\\\n                                        ]\\\\n                                      }\\\\n                                    }\\\\n                                   ]},\\\\n                               false))\\\\n                           }\\\\n                          ];\\\\n                        bounds_impls = [];\\\\n                        fn_span =\\\\n                        { Types.filename =\\\\n                          (Types.Real\\\\n                             (Types.LocalPath\\\\n                                \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                          hi = { Types.col = \\\\\\\"83\\\\\\\"; line = \\\\\\\"32\\\\\\\" };\\\\n                          lo = { Types.col = \\\\\\\"71\\\\\\\"; line = \\\\\\\"32\\\\\\\" } };\\\\n                        from_hir_call = true;\\\\n                        fun' =\\\\n                        { Types.attributes = [];\\\\n                          contents =\\\\n                          Types.GlobalName {\\\\n                            id =\\\\n                            { Types.index = (0, 632); krate = \\\\\\\"sandwich\\\\\\\";\\\\n                              path =\\\\n                              [{ Types.data = (Types.TypeNs \\\\\\\"support\\\\\\\");\\\\n                                 disambiguator = 0 };\\\\n                                { Types.data = (Types.TypeNs \\\\\\\"pimpl\\\\\\\");\\\\n                                  disambiguator = 0 };\\\\n                                { Types.data = Types.Impl; disambiguator = 2\\\\n                                  };\\\\n                                { Types.data = (Types.ValueNs \\\\\\\"as_nonnull\\\\\\\");\\\\n                                  disambiguator = 0 }\\\\n                                ]\\\\n                              }};\\\\n                          hir_id = None;\\\\n                          span =\\\\n                          { Types.filename =\\\\n                            (Types.Real\\\\n                               (Types.LocalPath\\\\n                                  \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                            hi = { Types.col = \\\\\\\"81\\\\\\\"; line = \\\\\\\"32\\\\\\\" };\\\\n                            lo = { Types.col = \\\\\\\"71\\\\\\\"; line = \\\\\\\"32\\\\\\\" } };\\\\n                          ty =\\\\n                          (Types.Arrow\\\\n                             { Types.bound_vars =\\\\n                               [(Types.Region\\\\n                                   (Types.BrNamed\\\\n                                      ({ Types.index = (0, 1666);\\\\n                                         krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                         path =\\\\n                                         [{ Types.data =\\\\n                                            (Types.TypeNs \\\\\\\"support\\\\\\\");\\\\n                                            disambiguator = 0 };\\\\n                                           { Types.data =\\\\n                                             (Types.TypeNs \\\\\\\"pimpl\\\\\\\");\\\\n                                             disambiguator = 0 };\\\\n                                           { Types.data = Types.Impl;\\\\n                                             disambiguator = 2 };\\\\n                                           { Types.data =\\\\n                                             (Types.ValueNs \\\\\\\"as_nonnull\\\\\\\");\\\\n                                             disambiguator = 0 };\\\\n                                           { Types.data =\\\\n                                             (Types.LifetimeNs \\\\\\\"'_\\\\\\\");\\\\n                                             disambiguator = 0 }\\\\n                                           ]\\\\n                                         },\\\\n                                       \\\\\\\"'_\\\\\\\")))\\\\n                                 ];\\\\n                               value =\\\\n                               { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                                 c_variadic = false;\\\\n                                 inputs =\\\\n                                 [(Types.Ref\\\\n                                     ({ Types.kind =\\\\n                                        (Types.ReBound\\\\n                                           (\\\\\\\"0\\\\\\\",\\\\n                                            { Types.kind =\\\\n                                              (Types.BrNamed\\\\n                                                 ({ Types.index = (0, 1666);\\\\n                                                    krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                                    path =\\\\n                                                    [{ Types.data =\\\\n                                                       (Types.TypeNs\\\\n                                                          \\\\\\\"support\\\\\\\");\\\\n                                                       disambiguator = 0 };\\\\n                                                      { Types.data =\\\\n                                                        (Types.TypeNs \\\\\\\"pimpl\\\\\\\");\\\\n                                                        disambiguator = 0 };\\\\n                                                      { Types.data =\\\\n                                                        Types.Impl;\\\\n                                                        disambiguator = 2 };\\\\n                                                      { Types.data =\\\\n                                                        (Types.ValueNs\\\\n                                                           \\\\\\\"as_nonnull\\\\\\\");\\\\n                                                        disambiguator = 0 };\\\\n                                                      { Types.data =\\\\n                                                        (Types.LifetimeNs\\\\n                                                           \\\\\\\"'_\\\\\\\");\\\\n                                                        disambiguator = 0 }\\\\n                                                      ]\\\\n                                                    },\\\\n                                                  \\\\\\\"'_\\\\\\\"));\\\\n                                              var = \\\\\\\"0\\\\\\\" }))\\\\n                                        },\\\\n                                      Types.Adt {\\\\n                                        def_id =\\\\n                                        { Types.index = (0, 616);\\\\n                                          krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                          path =\\\\n                                          [{ Types.data =\\\\n                                             (Types.TypeNs \\\\\\\"support\\\\\\\");\\\\n                                             disambiguator = 0 };\\\\n                                            { Types.data =\\\\n                                              (Types.TypeNs \\\\\\\"pimpl\\\\\\\");\\\\n                                              disambiguator = 0 };\\\\n                                            { Types.data =\\\\n                                              (Types.TypeNs \\\\\\\"Pimpl\\\\\\\");\\\\n                                              disambiguator = 0 }\\\\n                                            ]\\\\n                                          };\\\\n                                        generic_args =\\\\n                                        [(Types.Lifetime\\\\n                                            { Types.kind = Types.ReErased });\\\\n                                          (Types.Type\\\\n                                             Types.Adt {\\\\n                                               def_id =\\\\n                                               { Types.index = (27, 21403);\\\\n                                                 krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                                 path =\\\\n                                                 [{ Types.data =\\\\n                                                    (Types.TypeNs\\\\n                                                       \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                                    disambiguator = 0 }\\\\n                                                   ]\\\\n                                                 };\\\\n                                               generic_args = [];\\\\n                                               trait_refs = []})\\\\n                                          ];\\\\n                                        trait_refs =\\\\n                                        [{ Types.args = [];\\\\n                                           impl =\\\\n                                           Types.Builtin {\\\\n                                             trait =\\\\n                                             { Types.def_id =\\\\n                                               { Types.index = (2, 26413);\\\\n                                                 krate = \\\\\\\"core\\\\\\\";\\\\n                                                 path =\\\\n                                                 [{ Types.data =\\\\n                                                    (Types.TypeNs \\\\\\\"marker\\\\\\\");\\\\n                                                    disambiguator = 0 };\\\\n                                                   { Types.data =\\\\n                                                     (Types.TypeNs \\\\\\\"Sized\\\\\\\");\\\\n                                                     disambiguator = 0 }\\\\n                                                   ]\\\\n                                                 };\\\\n                                               generic_args =\\\\n                                               [(Types.Type\\\\n                                                   Types.Adt {\\\\n                                                     def_id =\\\\n                                                     { Types.index =\\\\n                                                       (27, 21403);\\\\n                                                       krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                                       path =\\\\n                                                       [{ Types.data =\\\\n                                                          (Types.TypeNs\\\\n                                                             \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                                          disambiguator = 0 }\\\\n                                                         ]\\\\n                                                       };\\\\n                                                     generic_args = [];\\\\n                                                     trait_refs = []})\\\\n                                                 ]\\\\n                                               }};\\\\n                                           trait =\\\\n                                           { Types.def_id =\\\\n                                             { Types.index = (2, 26413);\\\\n                                               krate = \\\\\\\"core\\\\\\\";\\\\n                                               path =\\\\n                                               [{ Types.data =\\\\n                                                  (Types.TypeNs \\\\\\\"marker\\\\\\\");\\\\n                                                  disambiguator = 0 };\\\\n                                                 { Types.data =\\\\n                                                   (Types.TypeNs \\\\\\\"Sized\\\\\\\");\\\\n                                                   disambiguator = 0 }\\\\n                                                 ]\\\\n                                               };\\\\n                                             generic_args =\\\\n                                             [(Types.Type\\\\n                                                 Types.Adt {\\\\n                                                   def_id =\\\\n                                                   { Types.index =\\\\n                                                     (27, 21403);\\\\n                                                     krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                                     path =\\\\n                                                     [{ Types.data =\\\\n                                                        (Types.TypeNs\\\\n                                                           \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                                        disambiguator = 0 }\\\\n                                                       ]\\\\n                                                     };\\\\n                                                   generic_args = [];\\\\n                                                   trait_refs = []})\\\\n                                               ]\\\\n                                             }\\\\n                                           }\\\\n                                          ]},\\\\n                                      false))\\\\n                                   ];\\\\n                                 output =\\\\n                                 Types.Adt {\\\\n                                   def_id =\\\\n                                   { Types.index = (2, 2222); krate = \\\\\\\"core\\\\\\\";\\\\n                                     path =\\\\n                                     [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                                        disambiguator = 0 };\\\\n                                       { Types.data =\\\\n                                         (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                                         disambiguator = 0 };\\\\n                                       { Types.data =\\\\n                                         (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                                         disambiguator = 0 }\\\\n                                       ]\\\\n                                     };\\\\n                                   generic_args =\\\\n                                   [(Types.Type\\\\n                                       Types.Adt {\\\\n                                         def_id =\\\\n                                         { Types.index = (27, 21403);\\\\n                                           krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                           path =\\\\n                                           [{ Types.data =\\\\n                                              (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                              disambiguator = 0 }\\\\n                                             ]\\\\n                                           };\\\\n                                         generic_args = []; trait_refs = []})\\\\n                                     ];\\\\n                                   trait_refs = []};\\\\n                                 safety = Types.Safe }\\\\n                               })\\\\n                          };\\\\n                        generic_args =\\\\n                        [(Types.Lifetime { Types.kind = Types.ReErased });\\\\n                          (Types.Type\\\\n                             Types.Adt {\\\\n                               def_id =\\\\n                               { Types.index = (27, 21403);\\\\n                                 krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                 path =\\\\n                                 [{ Types.data = (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                    disambiguator = 0 }\\\\n                                   ]\\\\n                                 };\\\\n                               generic_args = []; trait_refs = []})\\\\n                          ];\\\\n                        trait = None;\\\\n                        ty =\\\\n                        (Types.Arrow\\\\n                           { Types.bound_vars =\\\\n                             [(Types.Region\\\\n                                 (Types.BrNamed\\\\n                                    ({ Types.index = (0, 1666);\\\\n                                       krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                       path =\\\\n                                       [{ Types.data =\\\\n                                          (Types.TypeNs \\\\\\\"support\\\\\\\");\\\\n                                          disambiguator = 0 };\\\\n                                         { Types.data =\\\\n                                           (Types.TypeNs \\\\\\\"pimpl\\\\\\\");\\\\n                                           disambiguator = 0 };\\\\n                                         { Types.data = Types.Impl;\\\\n                                           disambiguator = 2 };\\\\n                                         { Types.data =\\\\n                                           (Types.ValueNs \\\\\\\"as_nonnull\\\\\\\");\\\\n                                           disambiguator = 0 };\\\\n                                         { Types.data =\\\\n                                           (Types.LifetimeNs \\\\\\\"'_\\\\\\\");\\\\n                                           disambiguator = 0 }\\\\n                                         ]\\\\n                                       },\\\\n                                     \\\\\\\"'_\\\\\\\")))\\\\n                               ];\\\\n                             value =\\\\n                             { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                               c_variadic = false;\\\\n                               inputs =\\\\n                               [(Types.Ref\\\\n                                   ({ Types.kind =\\\\n                                      (Types.ReBound\\\\n                                         (\\\\\\\"0\\\\\\\",\\\\n                                          { Types.kind =\\\\n                                            (Types.BrNamed\\\\n                                               ({ Types.index = (0, 1666);\\\\n                                                  krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                                  path =\\\\n                                                  [{ Types.data =\\\\n                                                     (Types.TypeNs \\\\\\\"support\\\\\\\");\\\\n                                                     disambiguator = 0 };\\\\n                                                    { Types.data =\\\\n                                                      (Types.TypeNs \\\\\\\"pimpl\\\\\\\");\\\\n                                                      disambiguator = 0 };\\\\n                                                    { Types.data = Types.Impl;\\\\n                                                      disambiguator = 2 };\\\\n                                                    { Types.data =\\\\n                                                      (Types.ValueNs\\\\n                                                         \\\\\\\"as_nonnull\\\\\\\");\\\\n                                                      disambiguator = 0 };\\\\n                                                    { Types.data =\\\\n                                                      (Types.LifetimeNs \\\\\\\"'_\\\\\\\");\\\\n                                                      disambiguator = 0 }\\\\n                                                    ]\\\\n                                                  },\\\\n                                                \\\\\\\"'_\\\\\\\"));\\\\n                                            var = \\\\\\\"0\\\\\\\" }))\\\\n                                      },\\\\n                                    Types.Adt {\\\\n                                      def_id =\\\\n                                      { Types.index = (0, 616);\\\\n                                        krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                        path =\\\\n                                        [{ Types.data =\\\\n                                           (Types.TypeNs \\\\\\\"support\\\\\\\");\\\\n                                           disambiguator = 0 };\\\\n                                          { Types.data =\\\\n                                            (Types.TypeNs \\\\\\\"pimpl\\\\\\\");\\\\n                                            disambiguator = 0 };\\\\n                                          { Types.data =\\\\n                                            (Types.TypeNs \\\\\\\"Pimpl\\\\\\\");\\\\n                                            disambiguator = 0 }\\\\n                                          ]\\\\n                                        };\\\\n                                      generic_args =\\\\n                                      [(Types.Lifetime\\\\n                                          { Types.kind = Types.ReErased });\\\\n                                        (Types.Type\\\\n                                           Types.Adt {\\\\n                                             def_id =\\\\n                                             { Types.index = (27, 21403);\\\\n                                               krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                               path =\\\\n                                               [{ Types.data =\\\\n                                                  (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                                  disambiguator = 0 }\\\\n                                                 ]\\\\n                                               };\\\\n                                             generic_args = [];\\\\n                                             trait_refs = []})\\\\n                                        ];\\\\n                                      trait_refs =\\\\n                                      [{ Types.args = [];\\\\n                                         impl =\\\\n                                         Types.Builtin {\\\\n                                           trait =\\\\n                                           { Types.def_id =\\\\n                                             { Types.index = (2, 26413);\\\\n                                               krate = \\\\\\\"core\\\\\\\";\\\\n                                               path =\\\\n                                               [{ Types.data =\\\\n                                                  (Types.TypeNs \\\\\\\"marker\\\\\\\");\\\\n                                                  disambiguator = 0 };\\\\n                                                 { Types.data =\\\\n                                                   (Types.TypeNs \\\\\\\"Sized\\\\\\\");\\\\n                                                   disambiguator = 0 }\\\\n                                                 ]\\\\n                                               };\\\\n                                             generic_args =\\\\n                                             [(Types.Type\\\\n                                                 Types.Adt {\\\\n                                                   def_id =\\\\n                                                   { Types.index =\\\\n                                                     (27, 21403);\\\\n                                                     krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                                     path =\\\\n                                                     [{ Types.data =\\\\n                                                        (Types.TypeNs\\\\n                                                           \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                                        disambiguator = 0 }\\\\n                                                       ]\\\\n                                                     };\\\\n                                                   generic_args = [];\\\\n                                                   trait_refs = []})\\\\n                                               ]\\\\n                                             }};\\\\n                                         trait =\\\\n                                         { Types.def_id =\\\\n                                           { Types.index = (2, 26413);\\\\n                                             krate = \\\\\\\"core\\\\\\\";\\\\n                                             path =\\\\n                                             [{ Types.data =\\\\n                                                (Types.TypeNs \\\\\\\"marker\\\\\\\");\\\\n                                                disambiguator = 0 };\\\\n                                               { Types.data =\\\\n                                                 (Types.TypeNs \\\\\\\"Sized\\\\\\\");\\\\n                                                 disambiguator = 0 }\\\\n                                               ]\\\\n                                             };\\\\n                                           generic_args =\\\\n                                           [(Types.Type\\\\n                                               Types.Adt {\\\\n                                                 def_id =\\\\n                                                 { Types.index = (27, 21403);\\\\n                                                   krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                                   path =\\\\n                                                   [{ Types.data =\\\\n                                                      (Types.TypeNs\\\\n                                                         \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                                      disambiguator = 0 }\\\\n                                                     ]\\\\n                                                   };\\\\n                                                 generic_args = [];\\\\n                                                 trait_refs = []})\\\\n                                             ]\\\\n                                           }\\\\n                                         }\\\\n                                        ]},\\\\n                                    false))\\\\n                                 ];\\\\n                               output =\\\\n                               Types.Adt {\\\\n                                 def_id =\\\\n                                 { Types.index = (2, 2222); krate = \\\\\\\"core\\\\\\\";\\\\n                                   path =\\\\n                                   [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                                      disambiguator = 0 };\\\\n                                     { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                                       disambiguator = 0 };\\\\n                                     { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                                       disambiguator = 0 }\\\\n                                     ]\\\\n                                   };\\\\n                                 generic_args =\\\\n                                 [(Types.Type\\\\n                                     Types.Adt {\\\\n                                       def_id =\\\\n                                       { Types.index = (27, 21403);\\\\n                                         krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                         path =\\\\n                                         [{ Types.data =\\\\n                                            (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                            disambiguator = 0 }\\\\n                                           ]\\\\n                                         };\\\\n                                       generic_args = []; trait_refs = []})\\\\n                                   ];\\\\n                                 trait_refs = []};\\\\n                               safety = Types.Safe }\\\\n                             })};\\\\n                      hir_id = (Some (\\\\\\\"412\\\\\\\", \\\\\\\"19\\\\\\\"));\\\\n                      span =\\\\n                      { Types.filename =\\\\n                        (Types.Real\\\\n                           (Types.LocalPath\\\\n                              \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                        hi = { Types.col = \\\\\\\"83\\\\\\\"; line = \\\\\\\"32\\\\\\\" };\\\\n                        lo = { Types.col = \\\\\\\"63\\\\\\\"; line = \\\\\\\"32\\\\\\\" } };\\\\n                      ty =\\\\n                      Types.Adt {\\\\n                        def_id =\\\\n                        { Types.index = (2, 2222); krate = \\\\\\\"core\\\\\\\";\\\\n                          path =\\\\n                          [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                             disambiguator = 0 };\\\\n                            { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                              disambiguator = 0 };\\\\n                            { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                              disambiguator = 0 }\\\\n                            ]\\\\n                          };\\\\n                        generic_args =\\\\n                        [(Types.Type\\\\n                            Types.Adt {\\\\n                              def_id =\\\\n                              { Types.index = (27, 21403);\\\\n                                krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                path =\\\\n                                [{ Types.data = (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                   disambiguator = 0 }\\\\n                                  ]\\\\n                                };\\\\n                              generic_args = []; trait_refs = []})\\\\n                          ];\\\\n                        trait_refs = []}\\\\n                      }\\\\n                     ];\\\\n                   bounds_impls = [];\\\\n                   fn_span =\\\\n                   { Types.filename =\\\\n                     (Types.Real\\\\n                        (Types.LocalPath\\\\n                           \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                     hi = { Types.col = \\\\\\\"92\\\\\\\"; line = \\\\\\\"32\\\\\\\" };\\\\n                     lo = { Types.col = \\\\\\\"84\\\\\\\"; line = \\\\\\\"32\\\\\\\" } };\\\\n                   from_hir_call = true;\\\\n                   fun' =\\\\n                   { Types.attributes = [];\\\\n                     contents =\\\\n                     Types.GlobalName {\\\\n                       id =\\\\n                       { Types.index = (2, 2245); krate = \\\\\\\"core\\\\\\\";\\\\n                         path =\\\\n                         [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                            disambiguator = 0 };\\\\n                           { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                             disambiguator = 0 };\\\\n                           { Types.data = Types.Impl; disambiguator = 3 };\\\\n                           { Types.data = (Types.ValueNs \\\\\\\"as_ptr\\\\\\\");\\\\n                             disambiguator = 0 }\\\\n                           ]\\\\n                         }};\\\\n                     hir_id = None;\\\\n                     span =\\\\n                     { Types.filename =\\\\n                       (Types.Real\\\\n                          (Types.LocalPath\\\\n                             \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                       hi = { Types.col = \\\\\\\"90\\\\\\\"; line = \\\\\\\"32\\\\\\\" };\\\\n                       lo = { Types.col = \\\\\\\"84\\\\\\\"; line = \\\\\\\"32\\\\\\\" } };\\\\n                     ty =\\\\n                     (Types.Arrow\\\\n                        { Types.bound_vars = [];\\\\n                          value =\\\\n                          { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                            c_variadic = false;\\\\n                            inputs =\\\\n                            [Types.Adt {\\\\n                               def_id =\\\\n                               { Types.index = (2, 2222); krate = \\\\\\\"core\\\\\\\";\\\\n                                 path =\\\\n                                 [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                                    disambiguator = 0 };\\\\n                                   { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                                     disambiguator = 0 };\\\\n                                   { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                                     disambiguator = 0 }\\\\n                                   ]\\\\n                                 };\\\\n                               generic_args =\\\\n                               [(Types.Type\\\\n                                   Types.Adt {\\\\n                                     def_id =\\\\n                                     { Types.index = (27, 21403);\\\\n                                       krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                       path =\\\\n                                       [{ Types.data =\\\\n                                          (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                          disambiguator = 0 }\\\\n                                         ]\\\\n                                       };\\\\n                                     generic_args = []; trait_refs = []})\\\\n                                 ];\\\\n                               trait_refs = []}\\\\n                              ];\\\\n                            output =\\\\n                            (Types.RawPtr\\\\n                               (Types.Adt {\\\\n                                  def_id =\\\\n                                  { Types.index = (27, 21403);\\\\n                                    krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                    path =\\\\n                                    [{ Types.data =\\\\n                                       (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                       disambiguator = 0 }\\\\n                                      ]\\\\n                                    };\\\\n                                  generic_args = []; trait_refs = []},\\\\n                                true));\\\\n                            safety = Types.Safe }\\\\n                          })\\\\n                     };\\\\n                   generic_args =\\\\n                   [(Types.Type\\\\n                       Types.Adt {\\\\n                         def_id =\\\\n                         { Types.index = (27, 21403); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                           path =\\\\n                           [{ Types.data = (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                              disambiguator = 0 }\\\\n                             ]\\\\n                           };\\\\n                         generic_args = []; trait_refs = []})\\\\n                     ];\\\\n                   trait = None;\\\\n                   ty =\\\\n                   (Types.Arrow\\\\n                      { Types.bound_vars = [];\\\\n                        value =\\\\n                        { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                          c_variadic = false;\\\\n                          inputs =\\\\n                          [Types.Adt {\\\\n                             def_id =\\\\n                             { Types.index = (2, 2222); krate = \\\\\\\"core\\\\\\\";\\\\n                               path =\\\\n                               [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                                  disambiguator = 0 };\\\\n                                 { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                                   disambiguator = 0 };\\\\n                                 { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                                   disambiguator = 0 }\\\\n                                 ]\\\\n                               };\\\\n                             generic_args =\\\\n                             [(Types.Type\\\\n                                 Types.Adt {\\\\n                                   def_id =\\\\n                                   { Types.index = (27, 21403);\\\\n                                     krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                     path =\\\\n                                     [{ Types.data =\\\\n                                        (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                        disambiguator = 0 }\\\\n                                       ]\\\\n                                     };\\\\n                                   generic_args = []; trait_refs = []})\\\\n                               ];\\\\n                             trait_refs = []}\\\\n                            ];\\\\n                          output =\\\\n                          (Types.RawPtr\\\\n                             (Types.Adt {\\\\n                                def_id =\\\\n                                { Types.index = (27, 21403);\\\\n                                  krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                  path =\\\\n                                  [{ Types.data = (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                     disambiguator = 0 }\\\\n                                    ]\\\\n                                  };\\\\n                                generic_args = []; trait_refs = []},\\\\n                              true));\\\\n                          safety = Types.Safe }\\\\n                        })};\\\\n                 hir_id = (Some (\\\\\\\"412\\\\\\\", \\\\\\\"17\\\\\\\"));\\\\n                 span =\\\\n                 { Types.filename =\\\\n                   (Types.Real\\\\n                      (Types.LocalPath\\\\n                         \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                   hi = { Types.col = \\\\\\\"92\\\\\\\"; line = \\\\\\\"32\\\\\\\" };\\\\n                   lo = { Types.col = \\\\\\\"63\\\\\\\"; line = \\\\\\\"32\\\\\\\" } };\\\\n                 ty =\\\\n                 (Types.RawPtr\\\\n                    (Types.Adt {\\\\n                       def_id =\\\\n                       { Types.index = (27, 21403); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                         path =\\\\n                         [{ Types.data = (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                            disambiguator = 0 }\\\\n                           ]\\\\n                         };\\\\n                       generic_args = []; trait_refs = []},\\\\n                     true))\\\\n                 }\\\\n                ];\\\\n              bounds_impls = [];\\\\n              fn_span =\\\\n              { Types.filename =\\\\n                (Types.Real\\\\n                   (Types.LocalPath\\\\n                      \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                hi = { Types.col = \\\\\\\"93\\\\\\\"; line = \\\\\\\"32\\\\\\\" };\\\\n                lo = { Types.col = \\\\\\\"34\\\\\\\"; line = \\\\\\\"32\\\\\\\" } };\\\\n              from_hir_call = true;\\\\n              fun' =\\\\n              { Types.attributes = [];\\\\n                contents =\\\\n                Types.GlobalName {\\\\n                  id =\\\\n                  { Types.index = (27, 18470); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                    path =\\\\n                    [{ Types.data = Types.ForeignMod; disambiguator = 3335 };\\\\n                      { Types.data = (Types.ValueNs \\\\\\\"SSL_CTX_get0_param\\\\\\\");\\\\n                        disambiguator = 0 }\\\\n                      ]\\\\n                    }};\\\\n                hir_id = None;\\\\n                span =\\\\n                { Types.filename =\\\\n                  (Types.Real\\\\n                     (Types.LocalPath\\\\n                        \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                  hi = { Types.col = \\\\\\\"62\\\\\\\"; line = \\\\\\\"32\\\\\\\" };\\\\n                  lo = { Types.col = \\\\\\\"34\\\\\\\"; line = \\\\\\\"32\\\\\\\" } };\\\\n                ty =\\\\n                (Types.Arrow\\\\n                   { Types.bound_vars = [];\\\\n                     value =\\\\n                     { Types.abi = Types.Abi {todo = \\\\\\\"C { unwind: false }\\\\\\\"};\\\\n                       c_variadic = false;\\\\n                       inputs =\\\\n                       [(Types.RawPtr\\\\n                           (Types.Adt {\\\\n                              def_id =\\\\n                              { Types.index = (27, 21403);\\\\n                                krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                path =\\\\n                                [{ Types.data = (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                   disambiguator = 0 }\\\\n                                  ]\\\\n                                };\\\\n                              generic_args = []; trait_refs = []},\\\\n                            true))\\\\n                         ];\\\\n                       output =\\\\n                       (Types.RawPtr\\\\n                          (Types.Adt {\\\\n                             def_id =\\\\n                             { Types.index = (27, 21322); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                               path =\\\\n                               [{ Types.data =\\\\n                                  (Types.TypeNs \\\\\\\"X509_VERIFY_PARAM_st\\\\\\\");\\\\n                                  disambiguator = 0 }\\\\n                                 ]\\\\n                               };\\\\n                             generic_args = []; trait_refs = []},\\\\n                           true));\\\\n                       safety = Types.Unsafe }\\\\n                     })\\\\n                };\\\\n              generic_args = []; trait = None;\\\\n              ty =\\\\n              (Types.Arrow\\\\n                 { Types.bound_vars = [];\\\\n                   value =\\\\n                   { Types.abi = Types.Abi {todo = \\\\\\\"C { unwind: false }\\\\\\\"};\\\\n                     c_variadic = false;\\\\n                     inputs =\\\\n                     [(Types.RawPtr\\\\n                         (Types.Adt {\\\\n                            def_id =\\\\n                            { Types.index = (27, 21403); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                              path =\\\\n                              [{ Types.data = (Types.TypeNs \\\\\\\"ssl_ctx_st\\\\\\\");\\\\n                                 disambiguator = 0 }\\\\n                                ]\\\\n                              };\\\\n                            generic_args = []; trait_refs = []},\\\\n                          true))\\\\n                       ];\\\\n                     output =\\\\n                     (Types.RawPtr\\\\n                        (Types.Adt {\\\\n                           def_id =\\\\n                           { Types.index = (27, 21322); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                             path =\\\\n                             [{ Types.data =\\\\n                                (Types.TypeNs \\\\\\\"X509_VERIFY_PARAM_st\\\\\\\");\\\\n                                disambiguator = 0 }\\\\n                               ]\\\\n                             };\\\\n                           generic_args = []; trait_refs = []},\\\\n                         true));\\\\n                     safety = Types.Unsafe }\\\\n                   })};\\\\n            hir_id = (Some (\\\\\\\"412\\\\\\\", \\\\\\\"13\\\\\\\"));\\\\n            span =\\\\n            { Types.filename =\\\\n              (Types.Real\\\\n                 (Types.LocalPath\\\\n                    \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n              hi = { Types.col = \\\\\\\"93\\\\\\\"; line = \\\\\\\"32\\\\\\\" };\\\\n              lo = { Types.col = \\\\\\\"34\\\\\\\"; line = \\\\\\\"32\\\\\\\" } };\\\\n            ty =\\\\n            (Types.RawPtr\\\\n               (Types.Adt {\\\\n                  def_id =\\\\n                  { Types.index = (27, 21322); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                    path =\\\\n                    [{ Types.data = (Types.TypeNs \\\\\\\"X509_VERIFY_PARAM_st\\\\\\\");\\\\n                       disambiguator = 0 }\\\\n                      ]\\\\n                    };\\\\n                  generic_args = []; trait_refs = []},\\\\n                true))\\\\n            });\\\\n    region_scope = { Types.data = Types.Node; id = \\\\\\\"23\\\\\\\" };\\\\n    safety_mode = Types.ExplicitUnsafe;\\\\n    span =\\\\n    { Types.filename =\\\\n      (Types.Real\\\\n         (Types.LocalPath\\\\n            \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n      hi = { Types.col = \\\\\\\"95\\\\\\\"; line = \\\\\\\"32\\\\\\\" };\\\\n      lo = { Types.col = \\\\\\\"25\\\\\\\"; line = \\\\\\\"32\\\\\\\" } };\\\\n    stmts = []; targeted_by_break = false};\\\\n  hir_id = (Some (\\\\\\\"412\\\\\\\", \\\\\\\"12\\\\\\\"));\\\\n  span =\\\\n  { Types.filename =\\\\n    (Types.Real\\\\n       (Types.LocalPath\\\\n          \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n    hi = { Types.col = \\\\\\\"95\\\\\\\"; line = \\\\\\\"32\\\\\\\" };\\\\n    lo = { Types.col = \\\\\\\"25\\\\\\\"; line = \\\\\\\"32\\\\\\\" } };\\\\n  ty =\\\\n  (Types.RawPtr\\\\n     (Types.Adt {\\\\n        def_id =\\\\n        { Types.index = (27, 21322); krate = \\\\\\\"openssl3\\\\\\\";\\\\n          path =\\\\n          [{ Types.data = (Types.TypeNs \\\\\\\"X509_VERIFY_PARAM_st\\\\\\\");\\\\n             disambiguator = 0 }\\\\n            ]\\\\n          };\\\\n        generic_args = []; trait_refs = []},\\\\n      true))\\\\n  }\\\",\\n    )\"))"

            <:
            Core.Option.t_Option (Core.Ptr.Non_null.t_NonNull Openssl3.t_X509_VERIFY_PARAM_st))
          ((Sandwich_proto.Errors.SystemError_SYSTEMERROR_MEMORY
              <:
              Sandwich_proto.Errors.t_SystemError),
            "no X509_VERIFY_PARAM attached to the given SSL context"
            <:
            (Sandwich_proto.Errors.t_SystemError & string))
      with
      | Core.Result.Result_Ok ptr ->
        Core.Result.Result_Ok
        (X509VerifyParam ptr
            (Core.Marker.PhantomData <: Core.Marker.t_PhantomData Openssl3.t_X509_VERIFY_PARAM_st)
          <:
          t_X509VerifyParam)
        <:
        Core.Result.t_Result t_X509VerifyParam Sandwich.Error.t_Error
      | Core.Result.Result_Err err ->
        Core.Result.Result_Err (Core.Convert.f_from #FStar.Tactics.Typeclasses.solve err)
        <:
        Core.Result.t_Result t_X509VerifyParam Sandwich.Error.t_Error
  }

/// Instantiates an [`X509VerifyParam`] from an SSL object.
[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_1: Core.Convert.t_TryFrom t_X509VerifyParam (Core.Ptr.Non_null.t_NonNull Openssl3.t_ssl_st) =
  {
    f_Error = Sandwich.Error.t_Error;
    f_try_from_pre = (fun (ssl: Core.Ptr.Non_null.t_NonNull Openssl3.t_ssl_st) -> true);
    f_try_from_post
    =
    (fun
        (ssl: Core.Ptr.Non_null.t_NonNull Openssl3.t_ssl_st)
        (out: Core.Result.t_Result t_X509VerifyParam Sandwich.Error.t_Error)
        ->
        true);
    f_try_from
    =
    fun (ssl: Core.Ptr.Non_null.t_NonNull Openssl3.t_ssl_st) ->
      match
        Core.Option.impl__ok_or #(Core.Ptr.Non_null.t_NonNull Openssl3.t_X509_VERIFY_PARAM_st)
          #(Sandwich_proto.Errors.t_SystemError & string)
          (Rust_primitives.Hax.failure "(RefMut) Fatal error: something we considered as impossible occurred! \027[1mPlease report this by submitting an issue on GitHub!\027[0m\nDetails: expected an arrow type here"
              "rust_primitives::hax::failure(\"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\"core::ptr::non_null::impl_3__new\")::<openssl3::t_X509_VERIFY_PARAM_st>(rust_primitives::hax::failure(\"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\"rust_primitives::hax::failure(\\n        \\\"(AST import) Unsafe blocks are not allowed.\\\",\\n        \\\"{ Types.attributes = [];\\\\n  contents =\\\\n  Types.Block {\\\\n    expr =\\\\n    (Some { Types.attributes = [];\\\\n            contents =\\\\n            Types.Call {\\\\n              args =\\\\n              [{ Types.attributes = [];\\\\n                 contents =\\\\n                 Types.Call {\\\\n                   args =\\\\n                   [{ Types.attributes = [];\\\\n                      contents =\\\\n                      Types.VarRef {\\\\n                        id =\\\\n                        { Types.id =\\\\n                          { Types.local_id = \\\\\\\"2\\\\\\\";\\\\n                            owner =\\\\n                            { Types.index = (0, 416); krate = \\\\\\\"sandwich\\\\\\\";\\\\n                              path =\\\\n                              [{ Types.data = (Types.TypeNs \\\\\\\"implementation\\\\\\\");\\\\n                                 disambiguator = 0 };\\\\n                                { Types.data = (Types.TypeNs \\\\\\\"openssl3_impl\\\\\\\");\\\\n                                  disambiguator = 0 };\\\\n                                { Types.data = (Types.TypeNs \\\\\\\"tunnel\\\\\\\");\\\\n                                  disambiguator = 0 };\\\\n                                { Types.data =\\\\n                                  (Types.TypeNs \\\\\\\"x509_verify_param\\\\\\\");\\\\n                                  disambiguator = 0 };\\\\n                                { Types.data = Types.Impl; disambiguator = 1\\\\n                                  };\\\\n                                { Types.data = (Types.ValueNs \\\\\\\"try_from\\\\\\\");\\\\n                                  disambiguator = 0 }\\\\n                                ]\\\\n                              }\\\\n                            };\\\\n                          name = \\\\\\\"ssl\\\\\\\" }};\\\\n                      hir_id = (Some (\\\\\\\"416\\\\\\\", \\\\\\\"19\\\\\\\"));\\\\n                      span =\\\\n                      { Types.filename =\\\\n                        (Types.Real\\\\n                           (Types.LocalPath\\\\n                              \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                        hi = { Types.col = \\\\\\\"68\\\\\\\"; line = \\\\\\\"46\\\\\\\" };\\\\n                        lo = { Types.col = \\\\\\\"65\\\\\\\"; line = \\\\\\\"46\\\\\\\" } };\\\\n                      ty =\\\\n                      Types.Adt {\\\\n                        def_id =\\\\n                        { Types.index = (2, 2222); krate = \\\\\\\"core\\\\\\\";\\\\n                          path =\\\\n                          [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                             disambiguator = 0 };\\\\n                            { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                              disambiguator = 0 };\\\\n                            { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                              disambiguator = 0 }\\\\n                            ]\\\\n                          };\\\\n                        generic_args =\\\\n                        [(Types.Type\\\\n                            Types.Adt {\\\\n                              def_id =\\\\n                              { Types.index = (27, 21394);\\\\n                                krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                path =\\\\n                                [{ Types.data = (Types.TypeNs \\\\\\\"ssl_st\\\\\\\");\\\\n                                   disambiguator = 0 }\\\\n                                  ]\\\\n                                };\\\\n                              generic_args = []; trait_refs = []})\\\\n                          ];\\\\n                        trait_refs = []}\\\\n                      }\\\\n                     ];\\\\n                   bounds_impls = [];\\\\n                   fn_span =\\\\n                   { Types.filename =\\\\n                     (Types.Real\\\\n                        (Types.LocalPath\\\\n                           \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                     hi = { Types.col = \\\\\\\"77\\\\\\\"; line = \\\\\\\"46\\\\\\\" };\\\\n                     lo = { Types.col = \\\\\\\"69\\\\\\\"; line = \\\\\\\"46\\\\\\\" } };\\\\n                   from_hir_call = true;\\\\n                   fun' =\\\\n                   { Types.attributes = [];\\\\n                     contents =\\\\n                     Types.GlobalName {\\\\n                       id =\\\\n                       { Types.index = (2, 2245); krate = \\\\\\\"core\\\\\\\";\\\\n                         path =\\\\n                         [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                            disambiguator = 0 };\\\\n                           { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                             disambiguator = 0 };\\\\n                           { Types.data = Types.Impl; disambiguator = 3 };\\\\n                           { Types.data = (Types.ValueNs \\\\\\\"as_ptr\\\\\\\");\\\\n                             disambiguator = 0 }\\\\n                           ]\\\\n                         }};\\\\n                     hir_id = None;\\\\n                     span =\\\\n                     { Types.filename =\\\\n                       (Types.Real\\\\n                          (Types.LocalPath\\\\n                             \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                       hi = { Types.col = \\\\\\\"75\\\\\\\"; line = \\\\\\\"46\\\\\\\" };\\\\n                       lo = { Types.col = \\\\\\\"69\\\\\\\"; line = \\\\\\\"46\\\\\\\" } };\\\\n                     ty =\\\\n                     (Types.Arrow\\\\n                        { Types.bound_vars = [];\\\\n                          value =\\\\n                          { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                            c_variadic = false;\\\\n                            inputs =\\\\n                            [Types.Adt {\\\\n                               def_id =\\\\n                               { Types.index = (2, 2222); krate = \\\\\\\"core\\\\\\\";\\\\n                                 path =\\\\n                                 [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                                    disambiguator = 0 };\\\\n                                   { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                                     disambiguator = 0 };\\\\n                                   { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                                     disambiguator = 0 }\\\\n                                   ]\\\\n                                 };\\\\n                               generic_args =\\\\n                               [(Types.Type\\\\n                                   Types.Adt {\\\\n                                     def_id =\\\\n                                     { Types.index = (27, 21394);\\\\n                                       krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                       path =\\\\n                                       [{ Types.data =\\\\n                                          (Types.TypeNs \\\\\\\"ssl_st\\\\\\\");\\\\n                                          disambiguator = 0 }\\\\n                                         ]\\\\n                                       };\\\\n                                     generic_args = []; trait_refs = []})\\\\n                                 ];\\\\n                               trait_refs = []}\\\\n                              ];\\\\n                            output =\\\\n                            (Types.RawPtr\\\\n                               (Types.Adt {\\\\n                                  def_id =\\\\n                                  { Types.index = (27, 21394);\\\\n                                    krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                    path =\\\\n                                    [{ Types.data = (Types.TypeNs \\\\\\\"ssl_st\\\\\\\");\\\\n                                       disambiguator = 0 }\\\\n                                      ]\\\\n                                    };\\\\n                                  generic_args = []; trait_refs = []},\\\\n                                true));\\\\n                            safety = Types.Safe }\\\\n                          })\\\\n                     };\\\\n                   generic_args =\\\\n                   [(Types.Type\\\\n                       Types.Adt {\\\\n                         def_id =\\\\n                         { Types.index = (27, 21394); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                           path =\\\\n                           [{ Types.data = (Types.TypeNs \\\\\\\"ssl_st\\\\\\\");\\\\n                              disambiguator = 0 }\\\\n                             ]\\\\n                           };\\\\n                         generic_args = []; trait_refs = []})\\\\n                     ];\\\\n                   trait = None;\\\\n                   ty =\\\\n                   (Types.Arrow\\\\n                      { Types.bound_vars = [];\\\\n                        value =\\\\n                        { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                          c_variadic = false;\\\\n                          inputs =\\\\n                          [Types.Adt {\\\\n                             def_id =\\\\n                             { Types.index = (2, 2222); krate = \\\\\\\"core\\\\\\\";\\\\n                               path =\\\\n                               [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                                  disambiguator = 0 };\\\\n                                 { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                                   disambiguator = 0 };\\\\n                                 { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                                   disambiguator = 0 }\\\\n                                 ]\\\\n                               };\\\\n                             generic_args =\\\\n                             [(Types.Type\\\\n                                 Types.Adt {\\\\n                                   def_id =\\\\n                                   { Types.index = (27, 21394);\\\\n                                     krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                     path =\\\\n                                     [{ Types.data = (Types.TypeNs \\\\\\\"ssl_st\\\\\\\");\\\\n                                        disambiguator = 0 }\\\\n                                       ]\\\\n                                     };\\\\n                                   generic_args = []; trait_refs = []})\\\\n                               ];\\\\n                             trait_refs = []}\\\\n                            ];\\\\n                          output =\\\\n                          (Types.RawPtr\\\\n                             (Types.Adt {\\\\n                                def_id =\\\\n                                { Types.index = (27, 21394);\\\\n                                  krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                  path =\\\\n                                  [{ Types.data = (Types.TypeNs \\\\\\\"ssl_st\\\\\\\");\\\\n                                     disambiguator = 0 }\\\\n                                    ]\\\\n                                  };\\\\n                                generic_args = []; trait_refs = []},\\\\n                              true));\\\\n                          safety = Types.Safe }\\\\n                        })};\\\\n                 hir_id = (Some (\\\\\\\"416\\\\\\\", \\\\\\\"17\\\\\\\"));\\\\n                 span =\\\\n                 { Types.filename =\\\\n                   (Types.Real\\\\n                      (Types.LocalPath\\\\n                         \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                   hi = { Types.col = \\\\\\\"77\\\\\\\"; line = \\\\\\\"46\\\\\\\" };\\\\n                   lo = { Types.col = \\\\\\\"65\\\\\\\"; line = \\\\\\\"46\\\\\\\" } };\\\\n                 ty =\\\\n                 (Types.RawPtr\\\\n                    (Types.Adt {\\\\n                       def_id =\\\\n                       { Types.index = (27, 21394); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                         path =\\\\n                         [{ Types.data = (Types.TypeNs \\\\\\\"ssl_st\\\\\\\");\\\\n                            disambiguator = 0 }\\\\n                           ]\\\\n                         };\\\\n                       generic_args = []; trait_refs = []},\\\\n                     true))\\\\n                 }\\\\n                ];\\\\n              bounds_impls = [];\\\\n              fn_span =\\\\n              { Types.filename =\\\\n                (Types.Real\\\\n                   (Types.LocalPath\\\\n                      \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                hi = { Types.col = \\\\\\\"78\\\\\\\"; line = \\\\\\\"46\\\\\\\" };\\\\n                lo = { Types.col = \\\\\\\"40\\\\\\\"; line = \\\\\\\"46\\\\\\\" } };\\\\n              from_hir_call = true;\\\\n              fun' =\\\\n              { Types.attributes = [];\\\\n                contents =\\\\n                Types.GlobalName {\\\\n                  id =\\\\n                  { Types.index = (27, 18472); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                    path =\\\\n                    [{ Types.data = Types.ForeignMod; disambiguator = 3336 };\\\\n                      { Types.data = (Types.ValueNs \\\\\\\"SSL_get0_param\\\\\\\");\\\\n                        disambiguator = 0 }\\\\n                      ]\\\\n                    }};\\\\n                hir_id = None;\\\\n                span =\\\\n                { Types.filename =\\\\n                  (Types.Real\\\\n                     (Types.LocalPath\\\\n                        \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n                  hi = { Types.col = \\\\\\\"64\\\\\\\"; line = \\\\\\\"46\\\\\\\" };\\\\n                  lo = { Types.col = \\\\\\\"40\\\\\\\"; line = \\\\\\\"46\\\\\\\" } };\\\\n                ty =\\\\n                (Types.Arrow\\\\n                   { Types.bound_vars = [];\\\\n                     value =\\\\n                     { Types.abi = Types.Abi {todo = \\\\\\\"C { unwind: false }\\\\\\\"};\\\\n                       c_variadic = false;\\\\n                       inputs =\\\\n                       [(Types.RawPtr\\\\n                           (Types.Adt {\\\\n                              def_id =\\\\n                              { Types.index = (27, 21394);\\\\n                                krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                path =\\\\n                                [{ Types.data = (Types.TypeNs \\\\\\\"ssl_st\\\\\\\");\\\\n                                   disambiguator = 0 }\\\\n                                  ]\\\\n                                };\\\\n                              generic_args = []; trait_refs = []},\\\\n                            true))\\\\n                         ];\\\\n                       output =\\\\n                       (Types.RawPtr\\\\n                          (Types.Adt {\\\\n                             def_id =\\\\n                             { Types.index = (27, 21322); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                               path =\\\\n                               [{ Types.data =\\\\n                                  (Types.TypeNs \\\\\\\"X509_VERIFY_PARAM_st\\\\\\\");\\\\n                                  disambiguator = 0 }\\\\n                                 ]\\\\n                               };\\\\n                             generic_args = []; trait_refs = []},\\\\n                           true));\\\\n                       safety = Types.Unsafe }\\\\n                     })\\\\n                };\\\\n              generic_args = []; trait = None;\\\\n              ty =\\\\n              (Types.Arrow\\\\n                 { Types.bound_vars = [];\\\\n                   value =\\\\n                   { Types.abi = Types.Abi {todo = \\\\\\\"C { unwind: false }\\\\\\\"};\\\\n                     c_variadic = false;\\\\n                     inputs =\\\\n                     [(Types.RawPtr\\\\n                         (Types.Adt {\\\\n                            def_id =\\\\n                            { Types.index = (27, 21394); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                              path =\\\\n                              [{ Types.data = (Types.TypeNs \\\\\\\"ssl_st\\\\\\\");\\\\n                                 disambiguator = 0 }\\\\n                                ]\\\\n                              };\\\\n                            generic_args = []; trait_refs = []},\\\\n                          true))\\\\n                       ];\\\\n                     output =\\\\n                     (Types.RawPtr\\\\n                        (Types.Adt {\\\\n                           def_id =\\\\n                           { Types.index = (27, 21322); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                             path =\\\\n                             [{ Types.data =\\\\n                                (Types.TypeNs \\\\\\\"X509_VERIFY_PARAM_st\\\\\\\");\\\\n                                disambiguator = 0 }\\\\n                               ]\\\\n                             };\\\\n                           generic_args = []; trait_refs = []},\\\\n                         true));\\\\n                     safety = Types.Unsafe }\\\\n                   })};\\\\n            hir_id = (Some (\\\\\\\"416\\\\\\\", \\\\\\\"13\\\\\\\"));\\\\n            span =\\\\n            { Types.filename =\\\\n              (Types.Real\\\\n                 (Types.LocalPath\\\\n                    \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n              hi = { Types.col = \\\\\\\"78\\\\\\\"; line = \\\\\\\"46\\\\\\\" };\\\\n              lo = { Types.col = \\\\\\\"40\\\\\\\"; line = \\\\\\\"46\\\\\\\" } };\\\\n            ty =\\\\n            (Types.RawPtr\\\\n               (Types.Adt {\\\\n                  def_id =\\\\n                  { Types.index = (27, 21322); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                    path =\\\\n                    [{ Types.data = (Types.TypeNs \\\\\\\"X509_VERIFY_PARAM_st\\\\\\\");\\\\n                       disambiguator = 0 }\\\\n                      ]\\\\n                    };\\\\n                  generic_args = []; trait_refs = []},\\\\n                true))\\\\n            });\\\\n    region_scope = { Types.data = Types.Node; id = \\\\\\\"21\\\\\\\" };\\\\n    safety_mode = Types.ExplicitUnsafe;\\\\n    span =\\\\n    { Types.filename =\\\\n      (Types.Real\\\\n         (Types.LocalPath\\\\n            \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n      hi = { Types.col = \\\\\\\"80\\\\\\\"; line = \\\\\\\"46\\\\\\\" };\\\\n      lo = { Types.col = \\\\\\\"31\\\\\\\"; line = \\\\\\\"46\\\\\\\" } };\\\\n    stmts = []; targeted_by_break = false};\\\\n  hir_id = (Some (\\\\\\\"416\\\\\\\", \\\\\\\"12\\\\\\\"));\\\\n  span =\\\\n  { Types.filename =\\\\n    (Types.Real\\\\n       (Types.LocalPath\\\\n          \\\\\\\"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\\\\\\\"));\\\\n    hi = { Types.col = \\\\\\\"80\\\\\\\"; line = \\\\\\\"46\\\\\\\" };\\\\n    lo = { Types.col = \\\\\\\"31\\\\\\\"; line = \\\\\\\"46\\\\\\\" } };\\\\n  ty =\\\\n  (Types.RawPtr\\\\n     (Types.Adt {\\\\n        def_id =\\\\n        { Types.index = (27, 21322); krate = \\\\\\\"openssl3\\\\\\\";\\\\n          path =\\\\n          [{ Types.data = (Types.TypeNs \\\\\\\"X509_VERIFY_PARAM_st\\\\\\\");\\\\n             disambiguator = 0 }\\\\n            ]\\\\n          };\\\\n        generic_args = []; trait_refs = []},\\\\n      true))\\\\n  }\\\",\\n    )\"))"

            <:
            Core.Option.t_Option (Core.Ptr.Non_null.t_NonNull Openssl3.t_X509_VERIFY_PARAM_st))
          ((Sandwich_proto.Errors.SystemError_SYSTEMERROR_MEMORY
              <:
              Sandwich_proto.Errors.t_SystemError),
            "no X509_VERIFY_PARAM attached to the given SSL object"
            <:
            (Sandwich_proto.Errors.t_SystemError & string))
      with
      | Core.Result.Result_Ok ptr ->
        Core.Result.Result_Ok
        (X509VerifyParam ptr
            (Core.Marker.PhantomData <: Core.Marker.t_PhantomData Openssl3.t_X509_VERIFY_PARAM_st)
          <:
          t_X509VerifyParam)
        <:
        Core.Result.t_Result t_X509VerifyParam Sandwich.Error.t_Error
      | Core.Result.Result_Err err ->
        Core.Result.Result_Err (Core.Convert.f_from #FStar.Tactics.Typeclasses.solve err)
        <:
        Core.Result.t_Result t_X509VerifyParam Sandwich.Error.t_Error
  }

/// Instantiates an [`X509VerifyParam`] from an SSL object.
[@@ FStar.Tactics.Typeclasses.tcinstance]
let impl_2: Core.Convert.t_TryFrom t_X509VerifyParam
  (Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_ssl_st) =
  {
    f_Error = Sandwich.Error.t_Error;
    f_try_from_pre = (fun (ssl: Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_ssl_st) -> true);
    f_try_from_post
    =
    (fun
        (ssl: Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_ssl_st)
        (out: Core.Result.t_Result t_X509VerifyParam Sandwich.Error.t_Error)
        ->
        true);
    f_try_from
    =
    fun (ssl: Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_ssl_st) ->
      Core.Convert.f_try_from #t_X509VerifyParam
        #(Core.Ptr.Non_null.t_NonNull Openssl3.t_ssl_st)
        #FStar.Tactics.Typeclasses.solve
        (Sandwich.Support.Pimpl.impl_2__as_nonnull #Openssl3.t_ssl_st ssl
          <:
          Core.Ptr.Non_null.t_NonNull Openssl3.t_ssl_st)
  }
