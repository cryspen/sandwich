module Sandwich.Implementation.Openssl3.Tunnel.Verify_callback
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

let x509_store_context_get_error
      (store_ctx: Core.Ptr.Non_null.t_NonNull Openssl3.t_x509_store_ctx_st)
     =
  Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
    "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.PointerCoercion {cast = Types.MutToConstPointer;\n                   source =\n                   { Types.attributes = [];\n                     contents =\n                     Types.Call {\n                       args =\n                       [{ Types.attributes = [];\n                          contents =\n                          Types.VarRef {\n                            id =\n                            { Types.id =\n                              { Types.local_id = \"2\";\n                                owner =\n                                { Types.index = (0, 466); krate = \"sandwich\";\n                                  path =\n                                  [{ Types.data =\n                                     (Types.TypeNs \"implementation\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"openssl3\");\n                                      disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"tunnel\");\n                                      disambiguator = 0 };\n                                    { Types.data =\n                                      (Types.TypeNs \"verify_callback\");\n                                      disambiguator = 0 };\n                                    { Types.data =\n                                      (Types.ValueNs\n                                         \"x509_store_context_get_error\");\n                                      disambiguator = 0 }\n                                    ]\n                                  }\n                                };\n                              name = \"store_ctx\" }};\n                          hir_id = (Some (\"466\", \"10\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                            hi = { Types.col = \"57\"; line = \"28\" };\n                            lo = { Types.col = \"48\"; line = \"28\" } };\n                          ty =\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (2, 2222); krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"ptr\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"non_null\");\n                                  disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"NonNull\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 21286);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"x509_store_ctx_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []})\n                              ];\n                            trait_refs = []}\n                          }\n                         ];\n                       bounds_impls = [];\n                       fn_span =\n                       { Types.filename =\n                         (Types.Real\n                            (Types.LocalPath\n                               \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                         hi = { Types.col = \"66\"; line = \"28\" };\n                         lo = { Types.col = \"58\"; line = \"28\" } };\n                       from_hir_call = true;\n                       fun' =\n                       { Types.attributes = [];\n                         contents =\n                         Types.GlobalName {\n                           id =\n                           { Types.index = (2, 2245); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"ptr\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"non_null\");\n                                 disambiguator = 0 };\n                               { Types.data = Types.Impl; disambiguator = 3 };\n                               { Types.data = (Types.ValueNs \"as_ptr\");\n                                 disambiguator = 0 }\n                               ]\n                             }};\n                         hir_id = None;\n                         span =\n                         { Types.filename =\n                           (Types.Real\n                              (Types.LocalPath\n                                 \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                           hi = { Types.col = \"64\"; line = \"28\" };\n                           lo = { Types.col = \"58\"; line = \"28\" } };\n                         ty =\n                         (Types.Arrow\n                            { Types.bound_vars = [];\n                              value =\n                              { Types.abi = Types.Abi {todo = \"Rust\"};\n                                c_variadic = false;\n                                inputs =\n                                [Types.Adt {\n                                   def_id =\n                                   { Types.index = (2, 2222); krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"ptr\");\n                                        disambiguator = 0 };\n                                       { Types.data =\n                                         (Types.TypeNs \"non_null\");\n                                         disambiguator = 0 };\n                                       { Types.data =\n                                         (Types.TypeNs \"NonNull\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args =\n                                   [(Types.Type\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.index = (27, 21286);\n                                           krate = \"openssl3\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs\n                                                 \"x509_store_ctx_st\");\n                                              disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args = []; trait_refs = []})\n                                     ];\n                                   trait_refs = []}\n                                  ];\n                                output =\n                                (Types.RawPtr\n                                   (Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 21286);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"x509_store_ctx_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []},\n                                    true));\n                                safety = Types.Safe }\n                              })\n                         };\n                       generic_args =\n                       [(Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (27, 21286); krate = \"openssl3\";\n                               path =\n                               [{ Types.data =\n                                  (Types.TypeNs \"x509_store_ctx_st\");\n                                  disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []})\n                         ];\n                       trait = None;\n                       ty =\n                       (Types.Arrow\n                          { Types.bound_vars = [];\n                            value =\n                            { Types.abi = Types.Abi {todo = \"Rust\"};\n                              c_variadic = false;\n                              inputs =\n                              [Types.Adt {\n                                 def_id =\n                                 { Types.index = (2, 2222); krate = \"core\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"ptr\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"non_null\");\n                                       disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"NonNull\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args =\n                                 [(Types.Type\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (27, 21286);\n                                         krate = \"openssl3\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"x509_store_ctx_st\");\n                                            disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []; trait_refs = []})\n                                   ];\n                                 trait_refs = []}\n                                ];\n                              output =\n                              (Types.RawPtr\n                                 (Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 21286);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"x509_store_ctx_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []},\n                                  true));\n                              safety = Types.Safe }\n                            })};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                       hi = { Types.col = \"66\"; line = \"28\" };\n                       lo = { Types.col = \"48\"; line = \"28\" } };\n                     ty =\n                     (Types.RawPtr\n                        (Types.Adt {\n                           def_id =\n                           { Types.index = (27, 21286); krate = \"openssl3\";\n                             path =\n                             [{ Types.data =\n                                (Types.TypeNs \"x509_store_ctx_st\");\n                                disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []; trait_refs = []},\n                         true))\n                     }};\n                 hir_id = (Some (\"466\", \"8\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      (Types.LocalPath\n                         \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                   hi = { Types.col = \"66\"; line = \"28\" };\n                   lo = { Types.col = \"48\"; line = \"28\" } };\n                 ty =\n                 (Types.RawPtr\n                    (Types.Adt {\n                       def_id =\n                       { Types.index = (27, 21286); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"x509_store_ctx_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []},\n                     false))\n                 }\n                ];\n              bounds_impls = [];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath\n                      \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                hi = { Types.col = \"67\"; line = \"28\" };\n                lo = { Types.col = \"13\"; line = \"28\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (27, 16195); krate = \"openssl3\";\n                    path =\n                    [{ Types.data = Types.ForeignMod; disambiguator = 2256 };\n                      { Types.data =\n                        (Types.ValueNs \"X509_STORE_CTX_get_error\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath\n                        \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                  hi = { Types.col = \"47\"; line = \"28\" };\n                  lo = { Types.col = \"13\"; line = \"28\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           (Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21286);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data =\n                                   (Types.TypeNs \"x509_store_ctx_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []},\n                            false))\n                         ];\n                       output = (Types.Int Types.I32); safety = Types.Unsafe\n                       }\n                     })\n                };\n              generic_args = []; trait = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         (Types.Adt {\n                            def_id =\n                            { Types.index = (27, 21286); krate = \"openssl3\";\n                              path =\n                              [{ Types.data =\n                                 (Types.TypeNs \"x509_store_ctx_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []},\n                          false))\n                       ];\n                     output = (Types.Int Types.I32); safety = Types.Unsafe }\n                   })};\n            hir_id = (Some (\"466\", \"4\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 (Types.LocalPath\n                    \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n              hi = { Types.col = \"67\"; line = \"28\" };\n              lo = { Types.col = \"13\"; line = \"28\" } };\n            ty = (Types.Int Types.I32) });\n    region_scope = { Types.data = Types.Node; id = \"12\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         (Types.LocalPath\n            \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n      hi = { Types.col = \"69\"; line = \"28\" };\n      lo = { Types.col = \"4\"; line = \"28\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"466\", \"3\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       (Types.LocalPath\n          \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n    hi = { Types.col = \"69\"; line = \"28\" };\n    lo = { Types.col = \"4\"; line = \"28\" } };\n  ty = (Types.Int Types.I32) }"

let x509_store_context_get_ssl (store_ctx: Core.Ptr.Non_null.t_NonNull Openssl3.t_x509_store_ctx_st) =
  Rust_primitives.Hax.Control_flow_monad.Mexception.run (let ssl_index:i32 =
        Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
          "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {args = []; bounds_impls = [];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath\n                      \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                hi = { Types.col = \"75\"; line = \"17\" };\n                lo = { Types.col = \"29\"; line = \"17\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (27, 18733); krate = \"openssl3\";\n                    path =\n                    [{ Types.data = Types.ForeignMod; disambiguator = 3466 };\n                      { Types.data =\n                        (Types.ValueNs \"SSL_get_ex_data_X509_STORE_CTX_idx\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath\n                        \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                  hi = { Types.col = \"73\"; line = \"17\" };\n                  lo = { Types.col = \"29\"; line = \"17\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                       c_variadic = false; inputs = [];\n                       output = (Types.Int Types.I32); safety = Types.Unsafe\n                       }\n                     })\n                };\n              generic_args = []; trait = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                     c_variadic = false; inputs = [];\n                     output = (Types.Int Types.I32); safety = Types.Unsafe }\n                   })};\n            hir_id = (Some (\"465\", \"5\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 (Types.LocalPath\n                    \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n              hi = { Types.col = \"75\"; line = \"17\" };\n              lo = { Types.col = \"29\"; line = \"17\" } };\n            ty = (Types.Int Types.I32) });\n    region_scope = { Types.data = Types.Node; id = \"9\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         (Types.LocalPath\n            \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n      hi = { Types.col = \"77\"; line = \"17\" };\n      lo = { Types.col = \"20\"; line = \"17\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"465\", \"4\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       (Types.LocalPath\n          \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n    hi = { Types.col = \"77\"; line = \"17\" };\n    lo = { Types.col = \"20\"; line = \"17\" } };\n  ty = (Types.Int Types.I32) }"

      in
      let! _:Prims.unit =
        if ssl_index <. 0l
        then
          let! hoist1:Rust_primitives.Hax.t_Never =
            Core.Ops.Control_flow.ControlFlow_Break
            (Core.Option.Option_None
              <:
              Core.Option.t_Option (Core.Ptr.Non_null.t_NonNull Openssl3.t_ssl_st))
            <:
            Core.Ops.Control_flow.t_ControlFlow
              (Core.Option.t_Option (Core.Ptr.Non_null.t_NonNull Openssl3.t_ssl_st))
              Rust_primitives.Hax.t_Never
          in
          Core.Ops.Control_flow.ControlFlow_Continue (Rust_primitives.Hax.never_to_any hoist1)
          <:
          Core.Ops.Control_flow.t_ControlFlow
            (Core.Option.t_Option (Core.Ptr.Non_null.t_NonNull Openssl3.t_ssl_st)) Prims.unit
        else
          Core.Ops.Control_flow.ControlFlow_Continue ()
          <:
          Core.Ops.Control_flow.t_ControlFlow
            (Core.Option.t_Option (Core.Ptr.Non_null.t_NonNull Openssl3.t_ssl_st)) Prims.unit
      in
      Core.Ops.Control_flow.ControlFlow_Continue
      (Rust_primitives.Hax.failure "(RefMut) Fatal error: something we considered as impossible occurred! \027[1mPlease report this by submitting an issue on GitHub!\027[0m\nDetails: expected an arrow type here"
          "rust_primitives::hax::failure(\"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\"core::ptr::non_null::impl_3__new\")::<openssl3::t_ssl_st>(rust_primitives::hax::failure(\"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\"core::ptr::mut_ptr::impl__cast::<\\n        core::ffi::t_c_void,\\n        openssl3::t_ssl_st,\\n    >(\\n        rust_primitives::hax::failure(\\n            \\\"(AST import) Unsafe blocks are not allowed.\\\",\\n            \\\"{ Types.attributes = [];\\\\n  contents =\\\\n  Types.Block {\\\\n    expr =\\\\n    (Some { Types.attributes = [];\\\\n            contents =\\\\n            Types.Call {\\\\n              args =\\\\n              [{ Types.attributes = [];\\\\n                 contents =\\\\n                 Types.PointerCoercion {cast = Types.MutToConstPointer;\\\\n                   source =\\\\n                   { Types.attributes = [];\\\\n                     contents =\\\\n                     Types.Call {\\\\n                       args =\\\\n                       [{ Types.attributes = [];\\\\n                          contents =\\\\n                          Types.VarRef {\\\\n                            id =\\\\n                            { Types.id =\\\\n                              { Types.local_id = \\\\\\\"2\\\\\\\";\\\\n                                owner =\\\\n                                { Types.index = (0, 465); krate = \\\\\\\"sandwich\\\\\\\";\\\\n                                  path =\\\\n                                  [{ Types.data =\\\\n                                     (Types.TypeNs \\\\\\\"implementation\\\\\\\");\\\\n                                     disambiguator = 0 };\\\\n                                    { Types.data = (Types.TypeNs \\\\\\\"openssl3\\\\\\\");\\\\n                                      disambiguator = 0 };\\\\n                                    { Types.data = (Types.TypeNs \\\\\\\"tunnel\\\\\\\");\\\\n                                      disambiguator = 0 };\\\\n                                    { Types.data =\\\\n                                      (Types.TypeNs \\\\\\\"verify_callback\\\\\\\");\\\\n                                      disambiguator = 0 };\\\\n                                    { Types.data =\\\\n                                      (Types.ValueNs\\\\n                                         \\\\\\\"x509_store_context_get_ssl\\\\\\\");\\\\n                                      disambiguator = 0 }\\\\n                                    ]\\\\n                                  }\\\\n                                };\\\\n                              name = \\\\\\\"store_ctx\\\\\\\" }};\\\\n                          hir_id = (Some (\\\\\\\"465\\\\\\\", \\\\\\\"39\\\\\\\"));\\\\n                          span =\\\\n                          { Types.filename =\\\\n                            (Types.Real\\\\n                               (Types.LocalPath\\\\n                                  \\\\\\\"rust/implementation/openssl3/tunnel/verify_callback.rs\\\\\\\"));\\\\n                            hi = { Types.col = \\\\\\\"63\\\\\\\"; line = \\\\\\\"22\\\\\\\" };\\\\n                            lo = { Types.col = \\\\\\\"54\\\\\\\"; line = \\\\\\\"22\\\\\\\" } };\\\\n                          ty =\\\\n                          Types.Adt {\\\\n                            def_id =\\\\n                            { Types.index = (2, 2222); krate = \\\\\\\"core\\\\\\\";\\\\n                              path =\\\\n                              [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                                 disambiguator = 0 };\\\\n                                { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                                  disambiguator = 0 };\\\\n                                { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                                  disambiguator = 0 }\\\\n                                ]\\\\n                              };\\\\n                            generic_args =\\\\n                            [(Types.Type\\\\n                                Types.Adt {\\\\n                                  def_id =\\\\n                                  { Types.index = (27, 21286);\\\\n                                    krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                    path =\\\\n                                    [{ Types.data =\\\\n                                       (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                       disambiguator = 0 }\\\\n                                      ]\\\\n                                    };\\\\n                                  generic_args = []; trait_refs = []})\\\\n                              ];\\\\n                            trait_refs = []}\\\\n                          }\\\\n                         ];\\\\n                       bounds_impls = [];\\\\n                       fn_span =\\\\n                       { Types.filename =\\\\n                         (Types.Real\\\\n                            (Types.LocalPath\\\\n                               \\\\\\\"rust/implementation/openssl3/tunnel/verify_callback.rs\\\\\\\"));\\\\n                         hi = { Types.col = \\\\\\\"72\\\\\\\"; line = \\\\\\\"22\\\\\\\" };\\\\n                         lo = { Types.col = \\\\\\\"64\\\\\\\"; line = \\\\\\\"22\\\\\\\" } };\\\\n                       from_hir_call = true;\\\\n                       fun' =\\\\n                       { Types.attributes = [];\\\\n                         contents =\\\\n                         Types.GlobalName {\\\\n                           id =\\\\n                           { Types.index = (2, 2245); krate = \\\\\\\"core\\\\\\\";\\\\n                             path =\\\\n                             [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                                disambiguator = 0 };\\\\n                               { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                                 disambiguator = 0 };\\\\n                               { Types.data = Types.Impl; disambiguator = 3 };\\\\n                               { Types.data = (Types.ValueNs \\\\\\\"as_ptr\\\\\\\");\\\\n                                 disambiguator = 0 }\\\\n                               ]\\\\n                             }};\\\\n                         hir_id = None;\\\\n                         span =\\\\n                         { Types.filename =\\\\n                           (Types.Real\\\\n                              (Types.LocalPath\\\\n                                 \\\\\\\"rust/implementation/openssl3/tunnel/verify_callback.rs\\\\\\\"));\\\\n                           hi = { Types.col = \\\\\\\"70\\\\\\\"; line = \\\\\\\"22\\\\\\\" };\\\\n                           lo = { Types.col = \\\\\\\"64\\\\\\\"; line = \\\\\\\"22\\\\\\\" } };\\\\n                         ty =\\\\n                         (Types.Arrow\\\\n                            { Types.bound_vars = [];\\\\n                              value =\\\\n                              { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                                c_variadic = false;\\\\n                                inputs =\\\\n                                [Types.Adt {\\\\n                                   def_id =\\\\n                                   { Types.index = (2, 2222); krate = \\\\\\\"core\\\\\\\";\\\\n                                     path =\\\\n                                     [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                                        disambiguator = 0 };\\\\n                                       { Types.data =\\\\n                                         (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                                         disambiguator = 0 };\\\\n                                       { Types.data =\\\\n                                         (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                                         disambiguator = 0 }\\\\n                                       ]\\\\n                                     };\\\\n                                   generic_args =\\\\n                                   [(Types.Type\\\\n                                       Types.Adt {\\\\n                                         def_id =\\\\n                                         { Types.index = (27, 21286);\\\\n                                           krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                           path =\\\\n                                           [{ Types.data =\\\\n                                              (Types.TypeNs\\\\n                                                 \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                              disambiguator = 0 }\\\\n                                             ]\\\\n                                           };\\\\n                                         generic_args = []; trait_refs = []})\\\\n                                     ];\\\\n                                   trait_refs = []}\\\\n                                  ];\\\\n                                output =\\\\n                                (Types.RawPtr\\\\n                                   (Types.Adt {\\\\n                                      def_id =\\\\n                                      { Types.index = (27, 21286);\\\\n                                        krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                        path =\\\\n                                        [{ Types.data =\\\\n                                           (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                           disambiguator = 0 }\\\\n                                          ]\\\\n                                        };\\\\n                                      generic_args = []; trait_refs = []},\\\\n                                    true));\\\\n                                safety = Types.Safe }\\\\n                              })\\\\n                         };\\\\n                       generic_args =\\\\n                       [(Types.Type\\\\n                           Types.Adt {\\\\n                             def_id =\\\\n                             { Types.index = (27, 21286); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                               path =\\\\n                               [{ Types.data =\\\\n                                  (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                  disambiguator = 0 }\\\\n                                 ]\\\\n                               };\\\\n                             generic_args = []; trait_refs = []})\\\\n                         ];\\\\n                       trait = None;\\\\n                       ty =\\\\n                       (Types.Arrow\\\\n                          { Types.bound_vars = [];\\\\n                            value =\\\\n                            { Types.abi = Types.Abi {todo = \\\\\\\"Rust\\\\\\\"};\\\\n                              c_variadic = false;\\\\n                              inputs =\\\\n                              [Types.Adt {\\\\n                                 def_id =\\\\n                                 { Types.index = (2, 2222); krate = \\\\\\\"core\\\\\\\";\\\\n                                   path =\\\\n                                   [{ Types.data = (Types.TypeNs \\\\\\\"ptr\\\\\\\");\\\\n                                      disambiguator = 0 };\\\\n                                     { Types.data = (Types.TypeNs \\\\\\\"non_null\\\\\\\");\\\\n                                       disambiguator = 0 };\\\\n                                     { Types.data = (Types.TypeNs \\\\\\\"NonNull\\\\\\\");\\\\n                                       disambiguator = 0 }\\\\n                                     ]\\\\n                                   };\\\\n                                 generic_args =\\\\n                                 [(Types.Type\\\\n                                     Types.Adt {\\\\n                                       def_id =\\\\n                                       { Types.index = (27, 21286);\\\\n                                         krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                         path =\\\\n                                         [{ Types.data =\\\\n                                            (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                            disambiguator = 0 }\\\\n                                           ]\\\\n                                         };\\\\n                                       generic_args = []; trait_refs = []})\\\\n                                   ];\\\\n                                 trait_refs = []}\\\\n                                ];\\\\n                              output =\\\\n                              (Types.RawPtr\\\\n                                 (Types.Adt {\\\\n                                    def_id =\\\\n                                    { Types.index = (27, 21286);\\\\n                                      krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                      path =\\\\n                                      [{ Types.data =\\\\n                                         (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                         disambiguator = 0 }\\\\n                                        ]\\\\n                                      };\\\\n                                    generic_args = []; trait_refs = []},\\\\n                                  true));\\\\n                              safety = Types.Safe }\\\\n                            })};\\\\n                     hir_id = None;\\\\n                     span =\\\\n                     { Types.filename =\\\\n                       (Types.Real\\\\n                          (Types.LocalPath\\\\n                             \\\\\\\"rust/implementation/openssl3/tunnel/verify_callback.rs\\\\\\\"));\\\\n                       hi = { Types.col = \\\\\\\"72\\\\\\\"; line = \\\\\\\"22\\\\\\\" };\\\\n                       lo = { Types.col = \\\\\\\"54\\\\\\\"; line = \\\\\\\"22\\\\\\\" } };\\\\n                     ty =\\\\n                     (Types.RawPtr\\\\n                        (Types.Adt {\\\\n                           def_id =\\\\n                           { Types.index = (27, 21286); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                             path =\\\\n                             [{ Types.data =\\\\n                                (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                disambiguator = 0 }\\\\n                               ]\\\\n                             };\\\\n                           generic_args = []; trait_refs = []},\\\\n                         true))\\\\n                     }};\\\\n                 hir_id = (Some (\\\\\\\"465\\\\\\\", \\\\\\\"37\\\\\\\"));\\\\n                 span =\\\\n                 { Types.filename =\\\\n                   (Types.Real\\\\n                      (Types.LocalPath\\\\n                         \\\\\\\"rust/implementation/openssl3/tunnel/verify_callback.rs\\\\\\\"));\\\\n                   hi = { Types.col = \\\\\\\"72\\\\\\\"; line = \\\\\\\"22\\\\\\\" };\\\\n                   lo = { Types.col = \\\\\\\"54\\\\\\\"; line = \\\\\\\"22\\\\\\\" } };\\\\n                 ty =\\\\n                 (Types.RawPtr\\\\n                    (Types.Adt {\\\\n                       def_id =\\\\n                       { Types.index = (27, 21286); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                         path =\\\\n                         [{ Types.data = (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                            disambiguator = 0 }\\\\n                           ]\\\\n                         };\\\\n                       generic_args = []; trait_refs = []},\\\\n                     false))\\\\n                 };\\\\n                { Types.attributes = [];\\\\n                  contents =\\\\n                  Types.VarRef {\\\\n                    id =\\\\n                    { Types.id =\\\\n                      { Types.local_id = \\\\\\\"11\\\\\\\";\\\\n                        owner =\\\\n                        { Types.index = (0, 465); krate = \\\\\\\"sandwich\\\\\\\";\\\\n                          path =\\\\n                          [{ Types.data = (Types.TypeNs \\\\\\\"implementation\\\\\\\");\\\\n                             disambiguator = 0 };\\\\n                            { Types.data = (Types.TypeNs \\\\\\\"openssl3\\\\\\\");\\\\n                              disambiguator = 0 };\\\\n                            { Types.data = (Types.TypeNs \\\\\\\"tunnel\\\\\\\");\\\\n                              disambiguator = 0 };\\\\n                            { Types.data = (Types.TypeNs \\\\\\\"verify_callback\\\\\\\");\\\\n                              disambiguator = 0 };\\\\n                            { Types.data =\\\\n                              (Types.ValueNs \\\\\\\"x509_store_context_get_ssl\\\\\\\");\\\\n                              disambiguator = 0 }\\\\n                            ]\\\\n                          }\\\\n                        };\\\\n                      name = \\\\\\\"ssl_index\\\\\\\" }};\\\\n                  hir_id = (Some (\\\\\\\"465\\\\\\\", \\\\\\\"41\\\\\\\"));\\\\n                  span =\\\\n                  { Types.filename =\\\\n                    (Types.Real\\\\n                       (Types.LocalPath\\\\n                          \\\\\\\"rust/implementation/openssl3/tunnel/verify_callback.rs\\\\\\\"));\\\\n                    hi = { Types.col = \\\\\\\"83\\\\\\\"; line = \\\\\\\"22\\\\\\\" };\\\\n                    lo = { Types.col = \\\\\\\"74\\\\\\\"; line = \\\\\\\"22\\\\\\\" } };\\\\n                  ty = (Types.Int Types.I32) }\\\\n                ];\\\\n              bounds_impls = [];\\\\n              fn_span =\\\\n              { Types.filename =\\\\n                (Types.Real\\\\n                   (Types.LocalPath\\\\n                      \\\\\\\"rust/implementation/openssl3/tunnel/verify_callback.rs\\\\\\\"));\\\\n                hi = { Types.col = \\\\\\\"84\\\\\\\"; line = \\\\\\\"22\\\\\\\" };\\\\n                lo = { Types.col = \\\\\\\"17\\\\\\\"; line = \\\\\\\"22\\\\\\\" } };\\\\n              from_hir_call = true;\\\\n              fun' =\\\\n              { Types.attributes = [];\\\\n                contents =\\\\n                Types.GlobalName {\\\\n                  id =\\\\n                  { Types.index = (27, 16193); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                    path =\\\\n                    [{ Types.data = Types.ForeignMod; disambiguator = 2255 };\\\\n                      { Types.data =\\\\n                        (Types.ValueNs \\\\\\\"X509_STORE_CTX_get_ex_data\\\\\\\");\\\\n                        disambiguator = 0 }\\\\n                      ]\\\\n                    }};\\\\n                hir_id = None;\\\\n                span =\\\\n                { Types.filename =\\\\n                  (Types.Real\\\\n                     (Types.LocalPath\\\\n                        \\\\\\\"rust/implementation/openssl3/tunnel/verify_callback.rs\\\\\\\"));\\\\n                  hi = { Types.col = \\\\\\\"53\\\\\\\"; line = \\\\\\\"22\\\\\\\" };\\\\n                  lo = { Types.col = \\\\\\\"17\\\\\\\"; line = \\\\\\\"22\\\\\\\" } };\\\\n                ty =\\\\n                (Types.Arrow\\\\n                   { Types.bound_vars = [];\\\\n                     value =\\\\n                     { Types.abi = Types.Abi {todo = \\\\\\\"C { unwind: false }\\\\\\\"};\\\\n                       c_variadic = false;\\\\n                       inputs =\\\\n                       [(Types.RawPtr\\\\n                           (Types.Adt {\\\\n                              def_id =\\\\n                              { Types.index = (27, 21286);\\\\n                                krate = \\\\\\\"openssl3\\\\\\\";\\\\n                                path =\\\\n                                [{ Types.data =\\\\n                                   (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                   disambiguator = 0 }\\\\n                                  ]\\\\n                                };\\\\n                              generic_args = []; trait_refs = []},\\\\n                            false));\\\\n                         (Types.Int Types.I32)];\\\\n                       output =\\\\n                       (Types.RawPtr\\\\n                          (Types.Adt {\\\\n                             def_id =\\\\n                             { Types.index = (2, 5307); krate = \\\\\\\"core\\\\\\\";\\\\n                               path =\\\\n                               [{ Types.data = (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                  disambiguator = 0 };\\\\n                                 { Types.data = (Types.TypeNs \\\\\\\"c_void\\\\\\\");\\\\n                                   disambiguator = 0 }\\\\n                                 ]\\\\n                               };\\\\n                             generic_args = []; trait_refs = []},\\\\n                           true));\\\\n                       safety = Types.Unsafe }\\\\n                     })\\\\n                };\\\\n              generic_args = []; trait = None;\\\\n              ty =\\\\n              (Types.Arrow\\\\n                 { Types.bound_vars = [];\\\\n                   value =\\\\n                   { Types.abi = Types.Abi {todo = \\\\\\\"C { unwind: false }\\\\\\\"};\\\\n                     c_variadic = false;\\\\n                     inputs =\\\\n                     [(Types.RawPtr\\\\n                         (Types.Adt {\\\\n                            def_id =\\\\n                            { Types.index = (27, 21286); krate = \\\\\\\"openssl3\\\\\\\";\\\\n                              path =\\\\n                              [{ Types.data =\\\\n                                 (Types.TypeNs \\\\\\\"x509_store_ctx_st\\\\\\\");\\\\n                                 disambiguator = 0 }\\\\n                                ]\\\\n                              };\\\\n                            generic_args = []; trait_refs = []},\\\\n                          false));\\\\n                       (Types.Int Types.I32)];\\\\n                     output =\\\\n                     (Types.RawPtr\\\\n                        (Types.Adt {\\\\n                           def_id =\\\\n                           { Types.index = (2, 5307); krate = \\\\\\\"core\\\\\\\";\\\\n                             path =\\\\n                             [{ Types.data = (Types.TypeNs \\\\\\\"ffi\\\\\\\");\\\\n                                disambiguator = 0 };\\\\n                               { Types.data = (Types.TypeNs \\\\\\\"c_void\\\\\\\");\\\\n                                 disambiguator = 0 }\\\\n                               ]\\\\n                             };\\\\n                           generic_args = []; trait_refs = []},\\\\n                         true));\\\\n                     safety = Types.Unsafe }\\\\n                   })};\\\\n            hir_id = (Some (\\\\\\\"465\\\\\\\", \\\\\\\"33\\\\\\\"));\\\\n            span =\\\\n            { Types.filename =\\\\n              (Types.Real\\\\n                 (Types.LocalPath\\\\n                    \\\\\\\"rust/implementation/openssl3/tunnel/verify_callback.rs\\\\\\\"));\\\\n              hi = { Types.col = \\\\\\\"84\\\\\\\"; line = \\\\\\\"22\\\\\\\" };\\\\n              lo = { Types.col = \\\\\\\"17\\\\\\\"; line = \\\\\\\"22\\\\\\\" } };\\\\n            ty =\\\\n            (Types.RawPtr\\\\n               (Types.Adt {\\\\n                  def_id =\\\\n                  { Types.index = (2, 5307); krate = \\\\\\\"core\\\\\\\";\\\\n                    path =\\\\n                    [{ Types.data = (Types.TypeNs \\\\\\\"ffi\\\\\\\"); disambiguator = 0 };\\\\n                      { Types.data = (Types.TypeNs \\\\\\\"c_void\\\\\\\");\\\\n                        disambiguator = 0 }\\\\n                      ]\\\\n                    };\\\\n                  generic_args = []; trait_refs = []},\\\\n                true))\\\\n            });\\\\n    region_scope = { Types.data = Types.Node; id = \\\\\\\"43\\\\\\\" };\\\\n    safety_mode = Types.ExplicitUnsafe;\\\\n    span =\\\\n    { Types.filename =\\\\n      (Types.Real\\\\n         (Types.LocalPath\\\\n            \\\\\\\"rust/implementation/openssl3/tunnel/verify_callback.rs\\\\\\\"));\\\\n      hi = { Types.col = \\\\\\\"86\\\\\\\"; line = \\\\\\\"22\\\\\\\" };\\\\n      lo = { Types.col = \\\\\\\"8\\\\\\\"; line = \\\\\\\"22\\\\\\\" } };\\\\n    stmts = []; targeted_by_break = false};\\\\n  hir_id = (Some (\\\\\\\"465\\\\\\\", \\\\\\\"32\\\\\\\"));\\\\n  span =\\\\n  { Types.filename =\\\\n    (Types.Real\\\\n       (Types.LocalPath\\\\n          \\\\\\\"rust/implementation/openssl3/tunnel/verify_callback.rs\\\\\\\"));\\\\n    hi = { Types.col = \\\\\\\"86\\\\\\\"; line = \\\\\\\"22\\\\\\\" };\\\\n    lo = { Types.col = \\\\\\\"8\\\\\\\"; line = \\\\\\\"22\\\\\\\" } };\\\\n  ty =\\\\n  (Types.RawPtr\\\\n     (Types.Adt {\\\\n        def_id =\\\\n        { Types.index = (2, 5307); krate = \\\\\\\"core\\\\\\\";\\\\n          path =\\\\n          [{ Types.data = (Types.TypeNs \\\\\\\"ffi\\\\\\\"); disambiguator = 0 };\\\\n            { Types.data = (Types.TypeNs \\\\\\\"c_void\\\\\\\"); disambiguator = 0 }]\\\\n          };\\\\n        generic_args = []; trait_refs = []},\\\\n      true))\\\\n  }\\\",\\n        ),\\n    )\"))"
        )
      <:
      Core.Ops.Control_flow.t_ControlFlow
        (Core.Option.t_Option (Core.Ptr.Non_null.t_NonNull Openssl3.t_ssl_st))
        (Core.Option.t_Option (Core.Ptr.Non_null.t_NonNull Openssl3.t_ssl_st)))

let x509_store_context_record_error
      (#impl_765196419_: Type0)
      (#[FStar.Tactics.Typeclasses.tcresolve ()] i1: Core.Convert.t_Into impl_765196419_ i32)
      (store_ctx: Core.Ptr.Non_null.t_NonNull Openssl3.t_x509_store_ctx_st)
      (error: impl_765196419_)
     =
  let _:Prims.unit =
    Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
      "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.VarRef {\n                        id =\n                        { Types.id =\n                          { Types.local_id = \"2\";\n                            owner =\n                            { Types.index = (0, 467); krate = \"sandwich\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"implementation\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"openssl3\");\n                                  disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"tunnel\");\n                                  disambiguator = 0 };\n                                { Types.data =\n                                  (Types.TypeNs \"verify_callback\");\n                                  disambiguator = 0 };\n                                { Types.data =\n                                  (Types.ValueNs\n                                     \"x509_store_context_record_error\");\n                                  disambiguator = 0 }\n                                ]\n                              }\n                            };\n                          name = \"store_ctx\" }};\n                      hir_id = (Some (\"467\", \"12\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                        hi = { Types.col = \"57\"; line = \"36\" };\n                        lo = { Types.col = \"48\"; line = \"36\" } };\n                      ty =\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (2, 2222); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ptr\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"non_null\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"NonNull\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21286);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data =\n                                   (Types.TypeNs \"x509_store_ctx_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []})\n                          ];\n                        trait_refs = []}\n                      }\n                     ];\n                   bounds_impls = [];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real\n                        (Types.LocalPath\n                           \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                     hi = { Types.col = \"66\"; line = \"36\" };\n                     lo = { Types.col = \"58\"; line = \"36\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (2, 2245); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"ptr\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"non_null\");\n                             disambiguator = 0 };\n                           { Types.data = Types.Impl; disambiguator = 3 };\n                           { Types.data = (Types.ValueNs \"as_ptr\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                       hi = { Types.col = \"64\"; line = \"36\" };\n                       lo = { Types.col = \"58\"; line = \"36\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs =\n                            [Types.Adt {\n                               def_id =\n                               { Types.index = (2, 2222); krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"ptr\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"non_null\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"NonNull\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (27, 21286);\n                                       krate = \"openssl3\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"x509_store_ctx_st\");\n                                          disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []})\n                                 ];\n                               trait_refs = []}\n                              ];\n                            output =\n                            (Types.RawPtr\n                               (Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 21286);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"x509_store_ctx_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                true));\n                            safety = Types.Safe }\n                          })\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (27, 21286); krate = \"openssl3\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"x509_store_ctx_st\");\n                              disambiguator = 0 }\n                             ]\n                           };\n                         generic_args = []; trait_refs = []})\n                     ];\n                   trait = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [Types.Adt {\n                             def_id =\n                             { Types.index = (2, 2222); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ptr\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"non_null\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"NonNull\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Type\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.index = (27, 21286);\n                                     krate = \"openssl3\";\n                                     path =\n                                     [{ Types.data =\n                                        (Types.TypeNs \"x509_store_ctx_st\");\n                                        disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []; trait_refs = []})\n                               ];\n                             trait_refs = []}\n                            ];\n                          output =\n                          (Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 21286);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data =\n                                     (Types.TypeNs \"x509_store_ctx_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true));\n                          safety = Types.Safe }\n                        })};\n                 hir_id = (Some (\"467\", \"10\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      (Types.LocalPath\n                         \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                   hi = { Types.col = \"66\"; line = \"36\" };\n                   lo = { Types.col = \"48\"; line = \"36\" } };\n                 ty =\n                 (Types.RawPtr\n                    (Types.Adt {\n                       def_id =\n                       { Types.index = (27, 21286); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"x509_store_ctx_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []},\n                     true))\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.Call {\n                    args =\n                    [{ Types.attributes = [];\n                       contents =\n                       Types.VarRef {\n                         id =\n                         { Types.id =\n                           { Types.local_id = \"4\";\n                             owner =\n                             { Types.index = (0, 467); krate = \"sandwich\";\n                               path =\n                               [{ Types.data =\n                                  (Types.TypeNs \"implementation\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"openssl3\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"tunnel\");\n                                   disambiguator = 0 };\n                                 { Types.data =\n                                   (Types.TypeNs \"verify_callback\");\n                                   disambiguator = 0 };\n                                 { Types.data =\n                                   (Types.ValueNs\n                                      \"x509_store_context_record_error\");\n                                   disambiguator = 0 }\n                                 ]\n                               }\n                             };\n                           name = \"error\" }};\n                       hir_id = (Some (\"467\", \"16\"));\n                       span =\n                       { Types.filename =\n                         (Types.Real\n                            (Types.LocalPath\n                               \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                         hi = { Types.col = \"73\"; line = \"36\" };\n                         lo = { Types.col = \"68\"; line = \"36\" } };\n                       ty =\n                       (Types.Param\n                          { Types.index = 0; name = \"impl Into<c_int>\" })\n                       }\n                      ];\n                    bounds_impls = [];\n                    fn_span =\n                    { Types.filename =\n                      (Types.Real\n                         (Types.LocalPath\n                            \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                      hi = { Types.col = \"80\"; line = \"36\" };\n                      lo = { Types.col = \"74\"; line = \"36\" } };\n                    from_hir_call = true;\n                    fun' =\n                    { Types.attributes = [];\n                      contents =\n                      Types.GlobalName {\n                        id =\n                        { Types.index = (2, 2997); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"convert\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Into\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.ValueNs \"into\");\n                              disambiguator = 0 }\n                            ]\n                          }};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                        hi = { Types.col = \"78\"; line = \"36\" };\n                        lo = { Types.col = \"74\"; line = \"36\" } };\n                      ty =\n                      (Types.Arrow\n                         { Types.bound_vars = [];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [(Types.Param\n                                 { Types.index = 0; name = \"impl Into<c_int>\"\n                                   })\n                               ];\n                             output = (Types.Int Types.I32);\n                             safety = Types.Safe }\n                           })\n                      };\n                    generic_args = [];\n                    trait =\n                    (Some ({ Types.args = [];\n                             impl =\n                             Types.LocalBound {path = [];\n                               predicate_id = \"4044967801813580675\";\n                               trait =\n                               { Types.bound_vars = [];\n                                 value =\n                                 { Types.def_id =\n                                   { Types.index = (2, 2995); krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"convert\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"Into\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args =\n                                   [(Types.Type\n                                       (Types.Param\n                                          { Types.index = 0;\n                                            name = \"impl Into<c_int>\" }));\n                                     (Types.Type (Types.Int Types.I32))]\n                                   }\n                                 }};\n                             trait =\n                             { Types.def_id =\n                               { Types.index = (2, 2995); krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"convert\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"Into\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Type\n                                   (Types.Param\n                                      { Types.index = 0;\n                                        name = \"impl Into<c_int>\" }));\n                                 (Types.Type (Types.Int Types.I32))]\n                               }\n                             },\n                           [(Types.Type\n                               (Types.Param\n                                  { Types.index = 0;\n                                    name = \"impl Into<c_int>\" }));\n                             (Types.Type (Types.Int Types.I32))]));\n                    ty =\n                    (Types.Arrow\n                       { Types.bound_vars = [];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false;\n                           inputs =\n                           [(Types.Param\n                               { Types.index = 0; name = \"impl Into<c_int>\" })\n                             ];\n                           output = (Types.Int Types.I32);\n                           safety = Types.Safe }\n                         })};\n                  hir_id = (Some (\"467\", \"14\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath\n                          \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                    hi = { Types.col = \"80\"; line = \"36\" };\n                    lo = { Types.col = \"68\"; line = \"36\" } };\n                  ty = (Types.Int Types.I32) }\n                ];\n              bounds_impls = [];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath\n                      \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                hi = { Types.col = \"81\"; line = \"36\" };\n                lo = { Types.col = \"13\"; line = \"36\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (27, 16197); krate = \"openssl3\";\n                    path =\n                    [{ Types.data = Types.ForeignMod; disambiguator = 2257 };\n                      { Types.data =\n                        (Types.ValueNs \"X509_STORE_CTX_set_error\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath\n                        \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n                  hi = { Types.col = \"47\"; line = \"36\" };\n                  lo = { Types.col = \"13\"; line = \"36\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           (Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21286);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data =\n                                   (Types.TypeNs \"x509_store_ctx_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []},\n                            true));\n                         (Types.Int Types.I32)];\n                       output = (Types.Tuple []); safety = Types.Unsafe }\n                     })\n                };\n              generic_args = []; trait = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         (Types.Adt {\n                            def_id =\n                            { Types.index = (27, 21286); krate = \"openssl3\";\n                              path =\n                              [{ Types.data =\n                                 (Types.TypeNs \"x509_store_ctx_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []},\n                          true));\n                       (Types.Int Types.I32)];\n                     output = (Types.Tuple []); safety = Types.Unsafe }\n                   })};\n            hir_id = (Some (\"467\", \"6\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 (Types.LocalPath\n                    \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n              hi = { Types.col = \"81\"; line = \"36\" };\n              lo = { Types.col = \"13\"; line = \"36\" } };\n            ty = (Types.Tuple []) });\n    region_scope = { Types.data = Types.Node; id = \"18\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         (Types.LocalPath\n            \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n      hi = { Types.col = \"83\"; line = \"36\" };\n      lo = { Types.col = \"4\"; line = \"36\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"467\", \"5\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       (Types.LocalPath\n          \"rust/implementation/openssl3/tunnel/verify_callback.rs\"));\n    hi = { Types.col = \"83\"; line = \"36\" };\n    lo = { Types.col = \"4\"; line = \"36\" } };\n  ty = (Types.Tuple []) }"

  in
  ()

(* item error backend: (reject_RawOrMutPointer) ExplicitRejection { reason: "a node of kind [Raw_pointer] have been found in the AST" }
Last available AST for this item:

/// The verify callback to be used.
/// This callback is passed to `SSL_set_verify`.
#[cfg(feature = "tunnel")]
#[cfg(feature = "openssl3")]
#[deny(bare_trait_objects)]
#[feature(register_tool)]
#[register_tool(_hax)]
fn verify_callback(mut verify_code: int, store_ctx: raw_pointer!()) -> int {
    {
        let _: tuple0 = {
            (if core::cmp::PartialEq::eq(verify_code, 1) {
                rust_primitives::hax::never_to_any({ (return verify_code) })
            })
        };
        (match (core::ptr::non_null::impl_3__new::<
            openssl3::t_x509_store_ctx_st,
        >(store_ctx)) {
            core::option::Option_Some(store_ctx) => {
                (match (sandwich::implementation::openssl3::tunnel::verify_callback::x509_store_context_get_ssl(
                    store_ctx,
                )) {
                    core::option::Option_Some(ssl) => {
                        let ssl_wrapped: sandwich::implementation::openssl3::tunnel::ssl::t_Ssl = {
                            core::convert::f_from(ssl)
                        };
                        (match (sandwich::implementation::openssl3::tunnel::ssl::impl__Ssl__get_tunnel_security_requirements::<
                            lifetime!(something),
                        >(&(ssl_wrapped))) {
                            core::option::Option_Some(security_requirements) => {
                                let current_error: int = {
                                    sandwich::implementation::openssl3::tunnel::verify_callback::x509_store_context_get_error(
                                        store_ctx,
                                    )
                                };
                                {
                                    let _: tuple0 = {
                                        (if sandwich::tunnel::tls::impl__TunnelSecurityRequirements__openssl3_assess_x509_store_error(
                                            &(deref(security_requirements)),
                                            current_error,
                                        ) {
                                            {
                                                let _: tuple0 = { (verify_code = 1) };
                                                {
                                                    let _: tuple0 = {
                                                        sandwich::implementation::openssl3::tunnel::verify_callback::x509_store_context_record_error::<
                                                            int,
                                                        >(store_ctx, cast(openssl3::v_X509_V_OK))
                                                    };
                                                    Tuple0
                                                }
                                            }
                                        })
                                    };
                                    { verify_code }
                                }
                            }
                            _ => {
                                let _: rust_primitives::hax::t_Never = { (return 0) };
                                Tuple0
                            }
                        })
                    }
                    _ => {
                        let _: rust_primitives::hax::t_Never = { (return 0) };
                        Tuple0
                    }
                })
            }
            _ => {
                let _: rust_primitives::hax::t_Never = { (return 0) };
                Tuple0
            }
        })
    }
}


Last AST:
/** print_rust: pitem: not implemented  (item: { Concrete_ident.T.def_id =
  { Concrete_ident.Imported.krate = "sandwich";
    path =
    [{ Concrete_ident.Imported.data =
       (Concrete_ident.Imported.TypeNs "implementation"); disambiguator = 0 };
      { Concrete_ident.Imported.data =
        (Concrete_ident.Imported.TypeNs "openssl3"); disambiguator = 0 };
      { Concrete_ident.Imported.data =
        (Concrete_ident.Imported.TypeNs "tunnel"); disambiguator = 0 };
      { Concrete_ident.Imported.data =
        (Concrete_ident.Imported.TypeNs "verify_callback"); disambiguator = 0
        };
      { Concrete_ident.Imported.data =
        (Concrete_ident.Imported.ValueNs "verify_callback");
        disambiguator = 0 }
      ]
    };
  kind = Concrete_ident.Kind.Value }) */
const _: () = ();
 *)
