module Sandwich.Implementation.Openssl3_impl.Tunnel.X509_verify_param
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

let _ =
  (* This module has implicit dependencies, here we make them explicit. *)
  (* The implicit dependencies arise from typeclasses instances. *)
  let open Sandwich.Error in
  let open Sandwich.Error.Code in
  let open Sandwich_api_proto.Verifiers.Sanmatcher in
  ()

let impl_3__set_certificate_chain_validation_depth
      (#impl_765196419_: Type0)
      (#[FStar.Tactics.Typeclasses.tcresolve ()] i1: Core.Convert.t_Into impl_765196419_ i32)
      (self: t_X509VerifyParam)
      (depth: impl_765196419_)
     =
  Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
    "{ Types.attributes = [];\n  contents =\n  Types.Block {expr = None;\n    region_scope = { Types.data = Types.Node; id = \"20\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         (Types.LocalPath\n            \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n      hi = { Types.col = \"9\"; line = \"135\" };\n      lo = { Types.col = \"8\"; line = \"133\" } };\n    stmts =\n    [{ Types.kind =\n       Types.Expr {\n         expr =\n         { Types.attributes = [];\n           contents =\n           Types.Call {\n             args =\n             [{ Types.attributes = [];\n                contents =\n                Types.Call {\n                  args =\n                  [{ Types.attributes = [];\n                     contents =\n                     Types.Field {\n                       field =\n                       { Types.index = (0, 1186); krate = \"sandwich\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"implementation\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"openssl3_impl\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"tunnel\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"x509_verify_param\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"X509VerifyParam\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.ValueNs \"0\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       lhs =\n                       { Types.attributes = [];\n                         contents =\n                         Types.Deref {\n                           arg =\n                           { Types.attributes = [];\n                             contents =\n                             Types.VarRef {\n                               id =\n                               { Types.id =\n                                 { Types.local_id = \"2\";\n                                   owner =\n                                   { Types.index = (0, 427);\n                                     krate = \"sandwich\";\n                                     path =\n                                     [{ Types.data =\n                                        (Types.TypeNs \"implementation\");\n                                        disambiguator = 0 };\n                                       { Types.data =\n                                         (Types.TypeNs \"openssl3_impl\");\n                                         disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"tunnel\");\n                                         disambiguator = 0 };\n                                       { Types.data =\n                                         (Types.TypeNs \"x509_verify_param\");\n                                         disambiguator = 0 };\n                                       { Types.data = Types.Impl;\n                                         disambiguator = 3 };\n                                       { Types.data =\n                                         (Types.ValueNs\n                                            \"set_certificate_chain_validation_depth\");\n                                         disambiguator = 0 }\n                                       ]\n                                     }\n                                   };\n                                 name = \"self\" }};\n                             hir_id = None;\n                             span =\n                             { Types.filename =\n                               (Types.Real\n                                  (Types.LocalPath\n                                     \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                               hi = { Types.col = \"54\"; line = \"134\" };\n                               lo = { Types.col = \"50\"; line = \"134\" } };\n                             ty =\n                             (Types.Ref\n                                ({ Types.kind = Types.ReErased },\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.index = (0, 1183);\n                                     krate = \"sandwich\";\n                                     path =\n                                     [{ Types.data =\n                                        (Types.TypeNs \"implementation\");\n                                        disambiguator = 0 };\n                                       { Types.data =\n                                         (Types.TypeNs \"openssl3_impl\");\n                                         disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"tunnel\");\n                                         disambiguator = 0 };\n                                       { Types.data =\n                                         (Types.TypeNs \"x509_verify_param\");\n                                         disambiguator = 0 };\n                                       { Types.data =\n                                         (Types.TypeNs \"X509VerifyParam\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args =\n                                   [(Types.Lifetime\n                                       { Types.kind = Types.ReErased })\n                                     ];\n                                   trait_refs = []},\n                                 false))\n                             }};\n                         hir_id = (Some (\"427\", \"13\"));\n                         span =\n                         { Types.filename =\n                           (Types.Real\n                              (Types.LocalPath\n                                 \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                           hi = { Types.col = \"54\"; line = \"134\" };\n                           lo = { Types.col = \"50\"; line = \"134\" } };\n                         ty =\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (0, 1183); krate = \"sandwich\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"implementation\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"openssl3_impl\");\n                                 disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"tunnel\");\n                                 disambiguator = 0 };\n                               { Types.data =\n                                 (Types.TypeNs \"x509_verify_param\");\n                                 disambiguator = 0 };\n                               { Types.data =\n                                 (Types.TypeNs \"X509VerifyParam\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Lifetime { Types.kind = Types.ReErased })];\n                           trait_refs = []}\n                         }};\n                     hir_id = (Some (\"427\", \"12\"));\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                       hi = { Types.col = \"56\"; line = \"134\" };\n                       lo = { Types.col = \"50\"; line = \"134\" } };\n                     ty =\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (2, 2222); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"ptr\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"non_null\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"NonNull\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (27, 21322); krate = \"openssl3\";\n                               path =\n                               [{ Types.data =\n                                  (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                  disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []})\n                         ];\n                       trait_refs = []}\n                     }\n                    ];\n                  bounds_impls = [];\n                  fn_span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath\n                          \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                    hi = { Types.col = \"65\"; line = \"134\" };\n                    lo = { Types.col = \"57\"; line = \"134\" } };\n                  from_hir_call = true;\n                  fun' =\n                  { Types.attributes = [];\n                    contents =\n                    Types.GlobalName {\n                      id =\n                      { Types.index = (2, 2245); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"ptr\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"non_null\");\n                            disambiguator = 0 };\n                          { Types.data = Types.Impl; disambiguator = 3 };\n                          { Types.data = (Types.ValueNs \"as_ptr\");\n                            disambiguator = 0 }\n                          ]\n                        }};\n                    hir_id = None;\n                    span =\n                    { Types.filename =\n                      (Types.Real\n                         (Types.LocalPath\n                            \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                      hi = { Types.col = \"63\"; line = \"134\" };\n                      lo = { Types.col = \"57\"; line = \"134\" } };\n                    ty =\n                    (Types.Arrow\n                       { Types.bound_vars = [];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false;\n                           inputs =\n                           [Types.Adt {\n                              def_id =\n                              { Types.index = (2, 2222); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"ptr\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"non_null\");\n                                    disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"NonNull\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 21322);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []})\n                                ];\n                              trait_refs = []}\n                             ];\n                           output =\n                           (Types.RawPtr\n                              (Types.Adt {\n                                 def_id =\n                                 { Types.index = (27, 21322);\n                                   krate = \"openssl3\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                      disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []; trait_refs = []},\n                               true));\n                           safety = Types.Safe }\n                         })\n                    };\n                  generic_args =\n                  [(Types.Type\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (27, 21322); krate = \"openssl3\";\n                          path =\n                          [{ Types.data =\n                             (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                             disambiguator = 0 }\n                            ]\n                          };\n                        generic_args = []; trait_refs = []})\n                    ];\n                  trait = None;\n                  ty =\n                  (Types.Arrow\n                     { Types.bound_vars = [];\n                       value =\n                       { Types.abi = Types.Abi {todo = \"Rust\"};\n                         c_variadic = false;\n                         inputs =\n                         [Types.Adt {\n                            def_id =\n                            { Types.index = (2, 2222); krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"ptr\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"non_null\");\n                                  disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"NonNull\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 21322);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []})\n                              ];\n                            trait_refs = []}\n                           ];\n                         output =\n                         (Types.RawPtr\n                            (Types.Adt {\n                               def_id =\n                               { Types.index = (27, 21322);\n                                 krate = \"openssl3\";\n                                 path =\n                                 [{ Types.data =\n                                    (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                    disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args = []; trait_refs = []},\n                             true));\n                         safety = Types.Safe }\n                       })};\n                hir_id = (Some (\"427\", \"10\"));\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath\n                        \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                  hi = { Types.col = \"65\"; line = \"134\" };\n                  lo = { Types.col = \"50\"; line = \"134\" } };\n                ty =\n                (Types.RawPtr\n                   (Types.Adt {\n                      def_id =\n                      { Types.index = (27, 21322); krate = \"openssl3\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                           disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = []; trait_refs = []},\n                    true))\n                };\n               { Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.VarRef {\n                        id =\n                        { Types.id =\n                          { Types.local_id = \"4\";\n                            owner =\n                            { Types.index = (0, 427); krate = \"sandwich\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"implementation\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"openssl3_impl\");\n                                  disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"tunnel\");\n                                  disambiguator = 0 };\n                                { Types.data =\n                                  (Types.TypeNs \"x509_verify_param\");\n                                  disambiguator = 0 };\n                                { Types.data = Types.Impl; disambiguator = 3\n                                  };\n                                { Types.data =\n                                  (Types.ValueNs\n                                     \"set_certificate_chain_validation_depth\");\n                                  disambiguator = 0 }\n                                ]\n                              }\n                            };\n                          name = \"depth\" }};\n                      hir_id = (Some (\"427\", \"17\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                        hi = { Types.col = \"72\"; line = \"134\" };\n                        lo = { Types.col = \"67\"; line = \"134\" } };\n                      ty =\n                      (Types.Param\n                         { Types.index = 1; name = \"impl Into<c_int>\" })\n                      }\n                     ];\n                   bounds_impls = [];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real\n                        (Types.LocalPath\n                           \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                     hi = { Types.col = \"79\"; line = \"134\" };\n                     lo = { Types.col = \"73\"; line = \"134\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (2, 2997); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"convert\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Into\");\n                             disambiguator = 0 };\n                           { Types.data = (Types.ValueNs \"into\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                       hi = { Types.col = \"77\"; line = \"134\" };\n                       lo = { Types.col = \"73\"; line = \"134\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs =\n                            [(Types.Param\n                                { Types.index = 1; name = \"impl Into<c_int>\"\n                                  })\n                              ];\n                            output = (Types.Int Types.I32);\n                            safety = Types.Safe }\n                          })\n                     };\n                   generic_args = [];\n                   trait =\n                   (Some ({ Types.args = [];\n                            impl =\n                            Types.LocalBound {path = [];\n                              predicate_id = \"4699237622219804893\";\n                              trait =\n                              { Types.bound_vars = [];\n                                value =\n                                { Types.def_id =\n                                  { Types.index = (2, 2995); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"convert\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Into\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      (Types.Param\n                                         { Types.index = 1;\n                                           name = \"impl Into<c_int>\" }));\n                                    (Types.Type (Types.Int Types.I32))]\n                                  }\n                                }};\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 2995); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"convert\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Into\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  (Types.Param\n                                     { Types.index = 1;\n                                       name = \"impl Into<c_int>\" }));\n                                (Types.Type (Types.Int Types.I32))]\n                              }\n                            },\n                          [(Types.Type\n                              (Types.Param\n                                 { Types.index = 1; name = \"impl Into<c_int>\"\n                                   }));\n                            (Types.Type (Types.Int Types.I32))]));\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [(Types.Param\n                              { Types.index = 1; name = \"impl Into<c_int>\" })\n                            ];\n                          output = (Types.Int Types.I32); safety = Types.Safe\n                          }\n                        })};\n                 hir_id = (Some (\"427\", \"15\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      (Types.LocalPath\n                         \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                   hi = { Types.col = \"79\"; line = \"134\" };\n                   lo = { Types.col = \"67\"; line = \"134\" } };\n                 ty = (Types.Int Types.I32) }\n               ];\n             bounds_impls = [];\n             fn_span =\n             { Types.filename =\n               (Types.Real\n                  (Types.LocalPath\n                     \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n               hi = { Types.col = \"80\"; line = \"134\" };\n               lo = { Types.col = \"12\"; line = \"134\" } };\n             from_hir_call = true;\n             fun' =\n             { Types.attributes = [];\n               contents =\n               Types.GlobalName {\n                 id =\n                 { Types.index = (27, 16271); krate = \"openssl3\";\n                   path =\n                   [{ Types.data = Types.ForeignMod; disambiguator = 2294 };\n                     { Types.data =\n                       (Types.ValueNs \"X509_VERIFY_PARAM_set_depth\");\n                       disambiguator = 0 }\n                     ]\n                   }};\n               hir_id = None;\n               span =\n               { Types.filename =\n                 (Types.Real\n                    (Types.LocalPath\n                       \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                 hi = { Types.col = \"49\"; line = \"134\" };\n                 lo = { Types.col = \"12\"; line = \"134\" } };\n               ty =\n               (Types.Arrow\n                  { Types.bound_vars = [];\n                    value =\n                    { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                      c_variadic = false;\n                      inputs =\n                      [(Types.RawPtr\n                          (Types.Adt {\n                             def_id =\n                             { Types.index = (27, 21322); krate = \"openssl3\";\n                               path =\n                               [{ Types.data =\n                                  (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                  disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []},\n                           true));\n                        (Types.Int Types.I32)];\n                      output = (Types.Tuple []); safety = Types.Unsafe }\n                    })\n               };\n             generic_args = []; trait = None;\n             ty =\n             (Types.Arrow\n                { Types.bound_vars = [];\n                  value =\n                  { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                    c_variadic = false;\n                    inputs =\n                    [(Types.RawPtr\n                        (Types.Adt {\n                           def_id =\n                           { Types.index = (27, 21322); krate = \"openssl3\";\n                             path =\n                             [{ Types.data =\n                                (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []; trait_refs = []},\n                         true));\n                      (Types.Int Types.I32)];\n                    output = (Types.Tuple []); safety = Types.Unsafe }\n                  })};\n           hir_id = (Some (\"427\", \"6\"));\n           span =\n           { Types.filename =\n             (Types.Real\n                (Types.LocalPath\n                   \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n             hi = { Types.col = \"80\"; line = \"134\" };\n             lo = { Types.col = \"12\"; line = \"134\" } };\n           ty = (Types.Tuple []) };\n         scope = { Types.data = Types.Node; id = \"19\" }}\n       }\n      ];\n    targeted_by_break = false};\n  hir_id = (Some (\"427\", \"5\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       (Types.LocalPath\n          \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n    hi = { Types.col = \"9\"; line = \"135\" };\n    lo = { Types.col = \"8\"; line = \"133\" } };\n  ty = (Types.Tuple []) }"

let impl_3__update_certificate_chain_validation_depth_from_x509_verifier
      (self: t_X509VerifyParam)
      (x509_verifier: Core.Option.t_Option Sandwich_api_proto.Verifiers.t_X509Verifier)
     =
  match
    Core.Option.impl__filter #u32
      (Core.Option.impl__map #Sandwich_api_proto.Verifiers.t_X509Verifier
          #u32
          x509_verifier
          (fun x ->
              let x:Sandwich_api_proto.Verifiers.t_X509Verifier = x in
              x.Sandwich_api_proto.Verifiers.f_max_verify_depth)
        <:
        Core.Option.t_Option u32)
      (fun depth ->
          let depth:u32 = depth in
          depth >. 0ul <: bool)
  with
  | Core.Option.Option_Some depth ->
    impl_3__set_certificate_chain_validation_depth #i32 self (cast (depth <: u32) <: i32)
  | _ -> ()

let impl_3__add_san__create_cstring
      (#impl_488124255_: Type0)
      (#[FStar.Tactics.Typeclasses.tcresolve ()] i1: Core.Convert.t_AsRef impl_488124255_ string)
      (value: impl_488124255_)
     =
  let value:string =
    Core.Convert.f_as_ref #impl_488124255_ #string #FStar.Tactics.Typeclasses.solve value
  in
  Core.Result.impl__map_err #Alloc.Ffi.C_str.t_CString
    #Alloc.Ffi.C_str.t_NulError
    #Sandwich.Error.t_Error
    (Alloc.Ffi.C_str.impl__CString__new #string value
      <:
      Core.Result.t_Result Alloc.Ffi.C_str.t_CString Alloc.Ffi.C_str.t_NulError)
    (fun e ->
        let e:Alloc.Ffi.C_str.t_NulError = e in
        let res:Alloc.String.t_String =
          Alloc.Fmt.format (Core.Fmt.impl_2__new_v1 (sz 2)
                (sz 2)
                (let list = ["invalid SAN value '"; "': "] in
                  FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 2);
                  Rust_primitives.Hax.array_of_list 2 list)
                (let list =
                    [
                      Core.Fmt.Rt.impl_1__new_display #string value <: Core.Fmt.Rt.t_Argument;
                      Core.Fmt.Rt.impl_1__new_display #Alloc.Ffi.C_str.t_NulError e
                      <:
                      Core.Fmt.Rt.t_Argument
                    ]
                  in
                  FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 2);
                  Rust_primitives.Hax.array_of_list 2 list)
              <:
              Core.Fmt.t_Arguments)
        in
        Core.Convert.f_into #(Sandwich_proto.Errors.t_TunnelError & Alloc.String.t_String)
          #Sandwich.Error.t_Error
          #FStar.Tactics.Typeclasses.solve
          ((Sandwich_proto.Errors.TunnelError_TUNNELERROR_VERIFIER
              <:
              Sandwich_proto.Errors.t_TunnelError),
            res
            <:
            (Sandwich_proto.Errors.t_TunnelError & Alloc.String.t_String)))

let impl_3__add_san (self: t_X509VerifyParam) (san: Sandwich_api_proto.Verifiers.Sanmatcher.t_San) =
  Rust_primitives.Hax.Control_flow_monad.Mexception.run (let! hoist16:i32 =
        match san with
        | Sandwich_api_proto.Verifiers.Sanmatcher.San_Dns value ->
          (match impl_3__add_san__create_cstring #Alloc.String.t_String value with
            | Core.Result.Result_Ok cstring ->
              Core.Ops.Control_flow.ControlFlow_Continue
              (Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
                  "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.Field {\n                        field =\n                        { Types.index = (0, 1186); krate = \"sandwich\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"implementation\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"openssl3_impl\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"tunnel\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"x509_verify_param\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"X509VerifyParam\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.ValueNs \"0\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        lhs =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Deref {\n                            arg =\n                            { Types.attributes = [];\n                              contents =\n                              Types.VarRef {\n                                id =\n                                { Types.id =\n                                  { Types.local_id = \"2\";\n                                    owner =\n                                    { Types.index = (0, 424);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"implementation\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"openssl3_impl\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"tunnel\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"x509_verify_param\");\n                                          disambiguator = 0 };\n                                        { Types.data = Types.Impl;\n                                          disambiguator = 3 };\n                                        { Types.data =\n                                          (Types.ValueNs \"add_san\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    };\n                                  name = \"self\" }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                hi = { Types.col = \"28\"; line = \"96\" };\n                                lo = { Types.col = \"24\"; line = \"96\" } };\n                              ty =\n                              (Types.Ref\n                                 ({ Types.kind = Types.ReErased },\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 1183);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"implementation\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"openssl3_impl\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"tunnel\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"x509_verify_param\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"X509VerifyParam\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Lifetime\n                                        { Types.kind = Types.ReErased })\n                                      ];\n                                    trait_refs = []},\n                                  false))\n                              }};\n                          hir_id = (Some (\"424\", \"51\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                            hi = { Types.col = \"28\"; line = \"96\" };\n                            lo = { Types.col = \"24\"; line = \"96\" } };\n                          ty =\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (0, 1183); krate = \"sandwich\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"implementation\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"openssl3_impl\");\n                                  disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"tunnel\");\n                                  disambiguator = 0 };\n                                { Types.data =\n                                  (Types.TypeNs \"x509_verify_param\");\n                                  disambiguator = 0 };\n                                { Types.data =\n                                  (Types.TypeNs \"X509VerifyParam\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Lifetime { Types.kind = Types.ReErased })\n                              ];\n                            trait_refs = []}\n                          }};\n                      hir_id = (Some (\"424\", \"50\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                        hi = { Types.col = \"30\"; line = \"96\" };\n                        lo = { Types.col = \"24\"; line = \"96\" } };\n                      ty =\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (2, 2222); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ptr\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"non_null\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"NonNull\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21322);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data =\n                                   (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []})\n                          ];\n                        trait_refs = []}\n                      }\n                     ];\n                   bounds_impls = [];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real\n                        (Types.LocalPath\n                           \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                     hi = { Types.col = \"39\"; line = \"96\" };\n                     lo = { Types.col = \"31\"; line = \"96\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (2, 2245); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"ptr\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"non_null\");\n                             disambiguator = 0 };\n                           { Types.data = Types.Impl; disambiguator = 3 };\n                           { Types.data = (Types.ValueNs \"as_ptr\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                       hi = { Types.col = \"37\"; line = \"96\" };\n                       lo = { Types.col = \"31\"; line = \"96\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs =\n                            [Types.Adt {\n                               def_id =\n                               { Types.index = (2, 2222); krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"ptr\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"non_null\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"NonNull\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (27, 21322);\n                                       krate = \"openssl3\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs\n                                             \"X509_VERIFY_PARAM_st\");\n                                          disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []})\n                                 ];\n                               trait_refs = []}\n                              ];\n                            output =\n                            (Types.RawPtr\n                               (Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 21322);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                true));\n                            safety = Types.Safe }\n                          })\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (27, 21322); krate = \"openssl3\";\n                           path =\n                           [{ Types.data =\n                              (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                              disambiguator = 0 }\n                             ]\n                           };\n                         generic_args = []; trait_refs = []})\n                     ];\n                   trait = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [Types.Adt {\n                             def_id =\n                             { Types.index = (2, 2222); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ptr\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"non_null\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"NonNull\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Type\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.index = (27, 21322);\n                                     krate = \"openssl3\";\n                                     path =\n                                     [{ Types.data =\n                                        (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                        disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []; trait_refs = []})\n                               ];\n                             trait_refs = []}\n                            ];\n                          output =\n                          (Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 21322);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data =\n                                     (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true));\n                          safety = Types.Safe }\n                        })};\n                 hir_id = (Some (\"424\", \"48\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      (Types.LocalPath\n                         \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                   hi = { Types.col = \"39\"; line = \"96\" };\n                   lo = { Types.col = \"24\"; line = \"96\" } };\n                 ty =\n                 (Types.RawPtr\n                    (Types.Adt {\n                       def_id =\n                       { Types.index = (27, 21322); krate = \"openssl3\";\n                         path =\n                         [{ Types.data =\n                            (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []},\n                     true))\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.Call {\n                    args =\n                    [{ Types.attributes = [];\n                       contents =\n                       Types.Borrow {\n                         arg =\n                         { Types.attributes = [];\n                           contents =\n                           Types.Deref {\n                             arg =\n                             { Types.attributes = [];\n                               contents =\n                               Types.Call {\n                                 args =\n                                 [{ Types.attributes = [];\n                                    contents =\n                                    Types.Borrow {\n                                      arg =\n                                      { Types.attributes = [];\n                                        contents =\n                                        Types.VarRef {\n                                          id =\n                                          { Types.id =\n                                            { Types.local_id = \"42\";\n                                              owner =\n                                              { Types.index = (0, 424);\n                                                krate = \"sandwich\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs\n                                                      \"implementation\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs\n                                                       \"openssl3_impl\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"tunnel\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs\n                                                       \"x509_verify_param\");\n                                                    disambiguator = 0 };\n                                                  { Types.data = Types.Impl;\n                                                    disambiguator = 3 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"add_san\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                }\n                                              };\n                                            name = \"cstring\" }};\n                                        hir_id = None;\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath\n                                                \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                          hi =\n                                          { Types.col = \"31\"; line = \"97\" };\n                                          lo =\n                                          { Types.col = \"24\"; line = \"97\" } };\n                                        ty =\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (5, 7722);\n                                            krate = \"alloc\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"ffi\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"c_str\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"CString\");\n                                                disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []}\n                                        };\n                                      borrow_kind = Types.Shared};\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath\n                                            \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                      hi = { Types.col = \"31\"; line = \"97\" };\n                                      lo = { Types.col = \"24\"; line = \"97\" }\n                                      };\n                                    ty =\n                                    (Types.Ref\n                                       ({ Types.kind = Types.ReErased },\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (5, 7722);\n                                            krate = \"alloc\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"ffi\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"c_str\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"CString\");\n                                                disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []},\n                                        false))\n                                    }\n                                   ];\n                                 bounds_impls = [];\n                                 fn_span =\n                                 { Types.filename =\n                                   (Types.Real\n                                      (Types.LocalPath\n                                         \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                   hi = { Types.col = \"40\"; line = \"97\" };\n                                   lo = { Types.col = \"24\"; line = \"97\" } };\n                                 from_hir_call = false;\n                                 fun' =\n                                 { Types.attributes = [];\n                                   contents =\n                                   Types.GlobalName {\n                                     id =\n                                     { Types.index = (2, 3455);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"ops\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"deref\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"Deref\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.ValueNs \"deref\");\n                                           disambiguator = 0 }\n                                         ]\n                                       }};\n                                   hir_id = None;\n                                   span =\n                                   { Types.filename =\n                                     (Types.Real\n                                        (Types.LocalPath\n                                           \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                     hi = { Types.col = \"40\"; line = \"97\" };\n                                     lo = { Types.col = \"24\"; line = \"97\" } };\n                                   ty =\n                                   (Types.Arrow\n                                      { Types.bound_vars =\n                                        [(Types.Region\n                                            (Types.BrNamed\n                                               ({ Types.index = (2, 55519);\n                                                  krate = \"core\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs \"ops\");\n                                                     disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"deref\");\n                                                      disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"Deref\");\n                                                      disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.ValueNs \"deref\");\n                                                      disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.LifetimeNs \"'_\");\n                                                      disambiguator = 0 }\n                                                    ]\n                                                  },\n                                                \"'_\")))\n                                          ];\n                                        value =\n                                        { Types.abi =\n                                          Types.Abi {todo = \"Rust\"};\n                                          c_variadic = false;\n                                          inputs =\n                                          [(Types.Ref\n                                              ({ Types.kind =\n                                                 (Types.ReBound\n                                                    (\"0\",\n                                                     { Types.kind =\n                                                       (Types.BrNamed\n                                                          ({ Types.index =\n                                                             (2, 55519);\n                                                             krate = \"core\";\n                                                             path =\n                                                             [{ Types.data =\n                                                                (Types.TypeNs\n                                                                   \"ops\");\n                                                                disambiguator =\n                                                                0 };\n                                                               { Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"deref\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                               { Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"Deref\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                               { Types.data =\n                                                                 (Types.ValueNs\n                                                                    \"deref\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                               { Types.data =\n                                                                 (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                 disambiguator =\n                                                                 0 }\n                                                               ]\n                                                             },\n                                                           \"'_\"));\n                                                       var = \"0\" }))\n                                                 },\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (5, 7722);\n                                                   krate = \"alloc\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"ffi\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"c_str\");\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs\n                                                          \"CString\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []},\n                                               false))\n                                            ];\n                                          output =\n                                          (Types.Ref\n                                             ({ Types.kind =\n                                                (Types.ReBound\n                                                   (\"0\",\n                                                    { Types.kind =\n                                                      (Types.BrNamed\n                                                         ({ Types.index =\n                                                            (2, 55519);\n                                                            krate = \"core\";\n                                                            path =\n                                                            [{ Types.data =\n                                                               (Types.TypeNs\n                                                                  \"ops\");\n                                                               disambiguator =\n                                                               0 };\n                                                              { Types.data =\n                                                                (Types.TypeNs\n                                                                   \"deref\");\n                                                                disambiguator =\n                                                                0 };\n                                                              { Types.data =\n                                                                (Types.TypeNs\n                                                                   \"Deref\");\n                                                                disambiguator =\n                                                                0 };\n                                                              { Types.data =\n                                                                (Types.ValueNs\n                                                                   \"deref\");\n                                                                disambiguator =\n                                                                0 };\n                                                              { Types.data =\n                                                                (Types.LifetimeNs\n                                                                   \"'_\");\n                                                                disambiguator =\n                                                                0 }\n                                                              ]\n                                                            },\n                                                          \"'_\"));\n                                                      var = \"0\" }))\n                                                },\n                                              (Types.Alias\n                                                 { Types.args =\n                                                   [(Types.Type\n                                                       Types.Adt {\n                                                         def_id =\n                                                         { Types.index =\n                                                           (5, 7722);\n                                                           krate = \"alloc\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ffi\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"c_str\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"CString\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         generic_args = [];\n                                                         trait_refs = []})\n                                                     ];\n                                                   def_id =\n                                                   { Types.index = (2, 3454);\n                                                     krate = \"core\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs \"ops\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"deref\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"Deref\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"Target\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   kind =\n                                                   Types.Projection {\n                                                     assoc_item =\n                                                     { Types.container =\n                                                       Types.TraitContainer;\n                                                       def_id =\n                                                       { Types.index =\n                                                         (2, 3454);\n                                                         krate = \"core\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ops\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"deref\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"Deref\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"Target\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       fn_has_self_parameter =\n                                                       false;\n                                                       kind = Types.Type;\n                                                       name = \"Target\";\n                                                       opt_rpitit_info = None;\n                                                       trait_item_def_id =\n                                                       None };\n                                                     impl_expr =\n                                                     { Types.args = [];\n                                                       impl =\n                                                       Types.Concrete {\n                                                         generics = [];\n                                                         id =\n                                                         { Types.index =\n                                                           (5, 4829);\n                                                           krate = \"alloc\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ffi\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"c_str\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               Types.Impl;\n                                                               disambiguator =\n                                                               3 }\n                                                             ]\n                                                           }};\n                                                       trait =\n                                                       { Types.def_id =\n                                                         { Types.index =\n                                                           (2, 3453);\n                                                           krate = \"core\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ops\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"deref\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"Deref\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         generic_args =\n                                                         [(Types.Type\n                                                             Types.Adt {\n                                                               def_id =\n                                                               { Types.index =\n                                                                 (5, 7722);\n                                                                 krate =\n                                                                 \"alloc\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"ffi\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"c_str\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"CString\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               [];\n                                                               trait_refs =\n                                                               []})\n                                                           ]\n                                                         }\n                                                       }}\n                                                   }),\n                                              false));\n                                          safety = Types.Safe }\n                                        })\n                                   };\n                                 generic_args = [];\n                                 trait =\n                                 (Some ({ Types.args = [];\n                                          impl =\n                                          Types.Concrete {generics = [];\n                                            id =\n                                            { Types.index = (5, 4829);\n                                              krate = \"alloc\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"ffi\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"c_str\");\n                                                  disambiguator = 0 };\n                                                { Types.data = Types.Impl;\n                                                  disambiguator = 3 }\n                                                ]\n                                              }};\n                                          trait =\n                                          { Types.def_id =\n                                            { Types.index = (2, 3453);\n                                              krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"ops\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"deref\");\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Deref\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args =\n                                            [(Types.Type\n                                                Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (5, 7722);\n                                                    krate = \"alloc\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"ffi\");\n                                                       disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs \"c_str\");\n                                                        disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs\n                                                           \"CString\");\n                                                        disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = [];\n                                                  trait_refs = []})\n                                              ]\n                                            }\n                                          },\n                                        [(Types.Type\n                                            Types.Adt {\n                                              def_id =\n                                              { Types.index = (5, 7722);\n                                                krate = \"alloc\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ffi\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"c_str\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"CString\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = [];\n                                              trait_refs = []})\n                                          ]));\n                                 ty =\n                                 (Types.Arrow\n                                    { Types.bound_vars =\n                                      [(Types.Region\n                                          (Types.BrNamed\n                                             ({ Types.index = (2, 55519);\n                                                krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ops\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"deref\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"Deref\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"deref\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.LifetimeNs \"'_\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                },\n                                              \"'_\")))\n                                        ];\n                                      value =\n                                      { Types.abi = Types.Abi {todo = \"Rust\"};\n                                        c_variadic = false;\n                                        inputs =\n                                        [(Types.Ref\n                                            ({ Types.kind =\n                                               (Types.ReBound\n                                                  (\"0\",\n                                                   { Types.kind =\n                                                     (Types.BrNamed\n                                                        ({ Types.index =\n                                                           (2, 55519);\n                                                           krate = \"core\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ops\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"deref\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"Deref\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.ValueNs\n                                                                  \"deref\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.LifetimeNs\n                                                                  \"'_\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           },\n                                                         \"'_\"));\n                                                     var = \"0\" }))\n                                               },\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (5, 7722);\n                                                 krate = \"alloc\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"ffi\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"c_str\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"CString\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []},\n                                             false))\n                                          ];\n                                        output =\n                                        (Types.Ref\n                                           ({ Types.kind =\n                                              (Types.ReBound\n                                                 (\"0\",\n                                                  { Types.kind =\n                                                    (Types.BrNamed\n                                                       ({ Types.index =\n                                                          (2, 55519);\n                                                          krate = \"core\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"ops\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"deref\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"Deref\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.ValueNs\n                                                                 \"deref\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.LifetimeNs\n                                                                 \"'_\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          },\n                                                        \"'_\"));\n                                                    var = \"0\" }))\n                                              },\n                                            (Types.Alias\n                                               { Types.args =\n                                                 [(Types.Type\n                                                     Types.Adt {\n                                                       def_id =\n                                                       { Types.index =\n                                                         (5, 7722);\n                                                         krate = \"alloc\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ffi\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"c_str\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"CString\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       generic_args = [];\n                                                       trait_refs = []})\n                                                   ];\n                                                 def_id =\n                                                 { Types.index = (2, 3454);\n                                                   krate = \"core\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"ops\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"deref\");\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"Deref\");\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"Target\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 kind =\n                                                 Types.Projection {\n                                                   assoc_item =\n                                                   { Types.container =\n                                                     Types.TraitContainer;\n                                                     def_id =\n                                                     { Types.index =\n                                                       (2, 3454);\n                                                       krate = \"core\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs \"ops\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"deref\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"Deref\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"Target\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       };\n                                                     fn_has_self_parameter =\n                                                     false;\n                                                     kind = Types.Type;\n                                                     name = \"Target\";\n                                                     opt_rpitit_info = None;\n                                                     trait_item_def_id = None\n                                                     };\n                                                   impl_expr =\n                                                   { Types.args = [];\n                                                     impl =\n                                                     Types.Concrete {\n                                                       generics = [];\n                                                       id =\n                                                       { Types.index =\n                                                         (5, 4829);\n                                                         krate = \"alloc\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ffi\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"c_str\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             Types.Impl;\n                                                             disambiguator =\n                                                             3 }\n                                                           ]\n                                                         }};\n                                                     trait =\n                                                     { Types.def_id =\n                                                       { Types.index =\n                                                         (2, 3453);\n                                                         krate = \"core\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ops\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"deref\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"Deref\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       generic_args =\n                                                       [(Types.Type\n                                                           Types.Adt {\n                                                             def_id =\n                                                             { Types.index =\n                                                               (5, 7722);\n                                                               krate =\n                                                               \"alloc\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"ffi\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"c_str\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"CString\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             [];\n                                                             trait_refs = []})\n                                                         ]\n                                                       }\n                                                     }}\n                                                 }),\n                                            false));\n                                        safety = Types.Safe }\n                                      })};\n                               hir_id = None;\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath\n                                       \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                 hi = { Types.col = \"40\"; line = \"97\" };\n                                 lo = { Types.col = \"24\"; line = \"97\" } };\n                               ty =\n                               (Types.Ref\n                                  ({ Types.kind = Types.ReErased },\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (2, 34717);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"ffi\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"c_str\");\n                                           disambiguator = 0 };\n                                         { Types.data = (Types.TypeNs \"CStr\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []},\n                                   false))\n                               }};\n                           hir_id = None;\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath\n                                   \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                             hi = { Types.col = \"31\"; line = \"97\" };\n                             lo = { Types.col = \"24\"; line = \"97\" } };\n                           ty =\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (2, 34717); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ffi\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"c_str\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"CStr\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []}\n                           };\n                         borrow_kind = Types.Shared};\n                       hir_id = (Some (\"424\", \"55\"));\n                       span =\n                       { Types.filename =\n                         (Types.Real\n                            (Types.LocalPath\n                               \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                         hi = { Types.col = \"31\"; line = \"97\" };\n                         lo = { Types.col = \"24\"; line = \"97\" } };\n                       ty =\n                       (Types.Ref\n                          ({ Types.kind = Types.ReErased },\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (2, 34717); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ffi\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"c_str\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"CStr\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []},\n                           false))\n                       }\n                      ];\n                    bounds_impls = [];\n                    fn_span =\n                    { Types.filename =\n                      (Types.Real\n                         (Types.LocalPath\n                            \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                      hi = { Types.col = \"40\"; line = \"97\" };\n                      lo = { Types.col = \"32\"; line = \"97\" } };\n                    from_hir_call = true;\n                    fun' =\n                    { Types.attributes = [];\n                      contents =\n                      Types.GlobalName {\n                        id =\n                        { Types.index = (2, 5266); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ffi\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"c_str\");\n                              disambiguator = 0 };\n                            { Types.data = Types.Impl; disambiguator = 6 };\n                            { Types.data = (Types.ValueNs \"as_ptr\");\n                              disambiguator = 0 }\n                            ]\n                          }};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                        hi = { Types.col = \"38\"; line = \"97\" };\n                        lo = { Types.col = \"32\"; line = \"97\" } };\n                      ty =\n                      (Types.Arrow\n                         { Types.bound_vars =\n                           [(Types.Region\n                               (Types.BrNamed\n                                  ({ Types.index = (2, 56097);\n                                     krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"ffi\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"c_str\");\n                                         disambiguator = 0 };\n                                       { Types.data = Types.Impl;\n                                         disambiguator = 6 };\n                                       { Types.data =\n                                         (Types.ValueNs \"as_ptr\");\n                                         disambiguator = 0 };\n                                       { Types.data = (Types.LifetimeNs \"'_\");\n                                         disambiguator = 0 }\n                                       ]\n                                     },\n                                   \"'_\")))\n                             ];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [(Types.Ref\n                                 ({ Types.kind =\n                                    (Types.ReBound\n                                       (\"0\",\n                                        { Types.kind =\n                                          (Types.BrNamed\n                                             ({ Types.index = (2, 56097);\n                                                krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ffi\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"c_str\");\n                                                    disambiguator = 0 };\n                                                  { Types.data = Types.Impl;\n                                                    disambiguator = 6 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"as_ptr\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.LifetimeNs \"'_\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                },\n                                              \"'_\"));\n                                          var = \"0\" }))\n                                    },\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (2, 34717);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"ffi\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"c_str\");\n                                          disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"CStr\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []},\n                                  false))\n                               ];\n                             output =\n                             (Types.RawPtr ((Types.Int Types.I8), false));\n                             safety = Types.Safe }\n                           })\n                      };\n                    generic_args = []; trait = None;\n                    ty =\n                    (Types.Arrow\n                       { Types.bound_vars =\n                         [(Types.Region\n                             (Types.BrNamed\n                                ({ Types.index = (2, 56097); krate = \"core\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"ffi\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"c_str\");\n                                       disambiguator = 0 };\n                                     { Types.data = Types.Impl;\n                                       disambiguator = 6 };\n                                     { Types.data = (Types.ValueNs \"as_ptr\");\n                                       disambiguator = 0 };\n                                     { Types.data = (Types.LifetimeNs \"'_\");\n                                       disambiguator = 0 }\n                                     ]\n                                   },\n                                 \"'_\")))\n                           ];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false;\n                           inputs =\n                           [(Types.Ref\n                               ({ Types.kind =\n                                  (Types.ReBound\n                                     (\"0\",\n                                      { Types.kind =\n                                        (Types.BrNamed\n                                           ({ Types.index = (2, 56097);\n                                              krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"ffi\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"c_str\");\n                                                  disambiguator = 0 };\n                                                { Types.data = Types.Impl;\n                                                  disambiguator = 6 };\n                                                { Types.data =\n                                                  (Types.ValueNs \"as_ptr\");\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.LifetimeNs \"'_\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              },\n                                            \"'_\"));\n                                        var = \"0\" }))\n                                  },\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (2, 34717); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"ffi\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"c_str\");\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"CStr\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                false))\n                             ];\n                           output =\n                           (Types.RawPtr ((Types.Int Types.I8), false));\n                           safety = Types.Safe }\n                         })};\n                  hir_id = (Some (\"424\", \"53\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath\n                          \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                    hi = { Types.col = \"40\"; line = \"97\" };\n                    lo = { Types.col = \"24\"; line = \"97\" } };\n                  ty = (Types.RawPtr ((Types.Int Types.I8), false)) };\n                { Types.attributes = [];\n                  contents =\n                  Types.Call {\n                    args =\n                    [{ Types.attributes = [];\n                       contents =\n                       Types.Borrow {\n                         arg =\n                         { Types.attributes = [];\n                           contents =\n                           Types.Deref {\n                             arg =\n                             { Types.attributes = [];\n                               contents =\n                               Types.VarRef {\n                                 id =\n                                 { Types.id =\n                                   { Types.local_id = \"13\";\n                                     owner =\n                                     { Types.index = (0, 424);\n                                       krate = \"sandwich\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"implementation\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"openssl3_impl\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"tunnel\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"x509_verify_param\");\n                                           disambiguator = 0 };\n                                         { Types.data = Types.Impl;\n                                           disambiguator = 3 };\n                                         { Types.data =\n                                           (Types.ValueNs \"add_san\");\n                                           disambiguator = 0 }\n                                         ]\n                                       }\n                                     };\n                                   name = \"value\" }};\n                               hir_id = None;\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath\n                                       \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                 hi = { Types.col = \"29\"; line = \"98\" };\n                                 lo = { Types.col = \"24\"; line = \"98\" } };\n                               ty =\n                               (Types.Ref\n                                  ({ Types.kind = Types.ReErased },\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (5, 7802);\n                                       krate = \"alloc\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"string\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"String\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []},\n                                   false))\n                               }};\n                           hir_id = None;\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath\n                                   \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                             hi = { Types.col = \"29\"; line = \"98\" };\n                             lo = { Types.col = \"24\"; line = \"98\" } };\n                           ty =\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (5, 7802); krate = \"alloc\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"string\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"String\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []}\n                           };\n                         borrow_kind = Types.Shared};\n                       hir_id = (Some (\"424\", \"59\"));\n                       span =\n                       { Types.filename =\n                         (Types.Real\n                            (Types.LocalPath\n                               \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                         hi = { Types.col = \"29\"; line = \"98\" };\n                         lo = { Types.col = \"24\"; line = \"98\" } };\n                       ty =\n                       (Types.Ref\n                          ({ Types.kind = Types.ReErased },\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (5, 7802); krate = \"alloc\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"string\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"String\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []},\n                           false))\n                       }\n                      ];\n                    bounds_impls = [];\n                    fn_span =\n                    { Types.filename =\n                      (Types.Real\n                         (Types.LocalPath\n                            \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                      hi = { Types.col = \"35\"; line = \"98\" };\n                      lo = { Types.col = \"30\"; line = \"98\" } };\n                    from_hir_call = true;\n                    fun' =\n                    { Types.attributes = [];\n                      contents =\n                      Types.GlobalName {\n                        id =\n                        { Types.index = (5, 5849); krate = \"alloc\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"string\");\n                             disambiguator = 0 };\n                            { Types.data = Types.Impl; disambiguator = 0 };\n                            { Types.data = (Types.ValueNs \"len\");\n                              disambiguator = 0 }\n                            ]\n                          }};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                        hi = { Types.col = \"33\"; line = \"98\" };\n                        lo = { Types.col = \"30\"; line = \"98\" } };\n                      ty =\n                      (Types.Arrow\n                         { Types.bound_vars =\n                           [(Types.Region\n                               (Types.BrNamed\n                                  ({ Types.index = (5, 9588);\n                                     krate = \"alloc\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"string\");\n                                        disambiguator = 0 };\n                                       { Types.data = Types.Impl;\n                                         disambiguator = 0 };\n                                       { Types.data = (Types.ValueNs \"len\");\n                                         disambiguator = 0 };\n                                       { Types.data = (Types.LifetimeNs \"'_\");\n                                         disambiguator = 0 }\n                                       ]\n                                     },\n                                   \"'_\")))\n                             ];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [(Types.Ref\n                                 ({ Types.kind =\n                                    (Types.ReBound\n                                       (\"0\",\n                                        { Types.kind =\n                                          (Types.BrNamed\n                                             ({ Types.index = (5, 9588);\n                                                krate = \"alloc\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"string\");\n                                                   disambiguator = 0 };\n                                                  { Types.data = Types.Impl;\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"len\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.LifetimeNs \"'_\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                },\n                                              \"'_\"));\n                                          var = \"0\" }))\n                                    },\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (5, 7802);\n                                      krate = \"alloc\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"string\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"String\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []},\n                                  false))\n                               ];\n                             output = (Types.Uint Types.Usize);\n                             safety = Types.Safe }\n                           })\n                      };\n                    generic_args = []; trait = None;\n                    ty =\n                    (Types.Arrow\n                       { Types.bound_vars =\n                         [(Types.Region\n                             (Types.BrNamed\n                                ({ Types.index = (5, 9588); krate = \"alloc\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"string\");\n                                      disambiguator = 0 };\n                                     { Types.data = Types.Impl;\n                                       disambiguator = 0 };\n                                     { Types.data = (Types.ValueNs \"len\");\n                                       disambiguator = 0 };\n                                     { Types.data = (Types.LifetimeNs \"'_\");\n                                       disambiguator = 0 }\n                                     ]\n                                   },\n                                 \"'_\")))\n                           ];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false;\n                           inputs =\n                           [(Types.Ref\n                               ({ Types.kind =\n                                  (Types.ReBound\n                                     (\"0\",\n                                      { Types.kind =\n                                        (Types.BrNamed\n                                           ({ Types.index = (5, 9588);\n                                              krate = \"alloc\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"string\");\n                                                 disambiguator = 0 };\n                                                { Types.data = Types.Impl;\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.ValueNs \"len\");\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.LifetimeNs \"'_\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              },\n                                            \"'_\"));\n                                        var = \"0\" }))\n                                  },\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (5, 7802); krate = \"alloc\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"string\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"String\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                false))\n                             ];\n                           output = (Types.Uint Types.Usize);\n                           safety = Types.Safe }\n                         })};\n                  hir_id = (Some (\"424\", \"57\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath\n                          \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                    hi = { Types.col = \"35\"; line = \"98\" };\n                    lo = { Types.col = \"24\"; line = \"98\" } };\n                  ty = (Types.Uint Types.Usize) }\n                ];\n              bounds_impls = [];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath\n                      \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                hi = { Types.col = \"21\"; line = \"99\" };\n                lo = { Types.col = \"20\"; line = \"95\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (27, 16291); krate = \"openssl3\";\n                    path =\n                    [{ Types.data = Types.ForeignMod; disambiguator = 2304 };\n                      { Types.data =\n                        (Types.ValueNs \"X509_VERIFY_PARAM_add1_host\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath\n                        \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                  hi = { Types.col = \"57\"; line = \"95\" };\n                  lo = { Types.col = \"20\"; line = \"95\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           (Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21322);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data =\n                                   (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []},\n                            true));\n                         (Types.RawPtr ((Types.Int Types.I8), false));\n                         (Types.Uint Types.Usize)];\n                       output = (Types.Int Types.I32); safety = Types.Unsafe\n                       }\n                     })\n                };\n              generic_args = []; trait = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         (Types.Adt {\n                            def_id =\n                            { Types.index = (27, 21322); krate = \"openssl3\";\n                              path =\n                              [{ Types.data =\n                                 (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []},\n                          true));\n                       (Types.RawPtr ((Types.Int Types.I8), false));\n                       (Types.Uint Types.Usize)];\n                     output = (Types.Int Types.I32); safety = Types.Unsafe }\n                   })};\n            hir_id = (Some (\"424\", \"44\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 (Types.LocalPath\n                    \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n              hi = { Types.col = \"21\"; line = \"99\" };\n              lo = { Types.col = \"20\"; line = \"95\" } };\n            ty = (Types.Int Types.I32) });\n    region_scope = { Types.data = Types.Node; id = \"61\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         (Types.LocalPath\n            \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n      hi = { Types.col = \"17\"; line = \"100\" };\n      lo = { Types.col = \"16\"; line = \"94\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"424\", \"43\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       (Types.LocalPath\n          \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n    hi = { Types.col = \"17\"; line = \"100\" };\n    lo = { Types.col = \"16\"; line = \"94\" } };\n  ty = (Types.Int Types.I32) }"
                )
              <:
              Core.Ops.Control_flow.t_ControlFlow
                (Core.Result.t_Result Prims.unit Sandwich.Error.t_Error) i32
            | Core.Result.Result_Err err ->
              Core.Ops.Control_flow.ControlFlow_Break
              (Core.Result.Result_Err err <: Core.Result.t_Result Prims.unit Sandwich.Error.t_Error)
              <:
              Core.Ops.Control_flow.t_ControlFlow
                (Core.Result.t_Result Prims.unit Sandwich.Error.t_Error) i32)
        | Sandwich_api_proto.Verifiers.Sanmatcher.San_Email value ->
          (match impl_3__add_san__create_cstring #Alloc.String.t_String value with
            | Core.Result.Result_Ok cstring ->
              Core.Ops.Control_flow.ControlFlow_Continue
              (Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
                  "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.Field {\n                        field =\n                        { Types.index = (0, 1186); krate = \"sandwich\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"implementation\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"openssl3_impl\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"tunnel\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"x509_verify_param\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"X509VerifyParam\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.ValueNs \"0\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        lhs =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Deref {\n                            arg =\n                            { Types.attributes = [];\n                              contents =\n                              Types.VarRef {\n                                id =\n                                { Types.id =\n                                  { Types.local_id = \"2\";\n                                    owner =\n                                    { Types.index = (0, 424);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"implementation\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"openssl3_impl\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"tunnel\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"x509_verify_param\");\n                                          disambiguator = 0 };\n                                        { Types.data = Types.Impl;\n                                          disambiguator = 3 };\n                                        { Types.data =\n                                          (Types.ValueNs \"add_san\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    };\n                                  name = \"self\" }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                hi = { Types.col = \"28\"; line = \"106\" };\n                                lo = { Types.col = \"24\"; line = \"106\" } };\n                              ty =\n                              (Types.Ref\n                                 ({ Types.kind = Types.ReErased },\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 1183);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"implementation\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"openssl3_impl\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"tunnel\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"x509_verify_param\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"X509VerifyParam\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Lifetime\n                                        { Types.kind = Types.ReErased })\n                                      ];\n                                    trait_refs = []},\n                                  false))\n                              }};\n                          hir_id = (Some (\"424\", \"103\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                            hi = { Types.col = \"28\"; line = \"106\" };\n                            lo = { Types.col = \"24\"; line = \"106\" } };\n                          ty =\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (0, 1183); krate = \"sandwich\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"implementation\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"openssl3_impl\");\n                                  disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"tunnel\");\n                                  disambiguator = 0 };\n                                { Types.data =\n                                  (Types.TypeNs \"x509_verify_param\");\n                                  disambiguator = 0 };\n                                { Types.data =\n                                  (Types.TypeNs \"X509VerifyParam\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Lifetime { Types.kind = Types.ReErased })\n                              ];\n                            trait_refs = []}\n                          }};\n                      hir_id = (Some (\"424\", \"102\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                        hi = { Types.col = \"30\"; line = \"106\" };\n                        lo = { Types.col = \"24\"; line = \"106\" } };\n                      ty =\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (2, 2222); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ptr\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"non_null\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"NonNull\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21322);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data =\n                                   (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []})\n                          ];\n                        trait_refs = []}\n                      }\n                     ];\n                   bounds_impls = [];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real\n                        (Types.LocalPath\n                           \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                     hi = { Types.col = \"39\"; line = \"106\" };\n                     lo = { Types.col = \"31\"; line = \"106\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (2, 2245); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"ptr\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"non_null\");\n                             disambiguator = 0 };\n                           { Types.data = Types.Impl; disambiguator = 3 };\n                           { Types.data = (Types.ValueNs \"as_ptr\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                       hi = { Types.col = \"37\"; line = \"106\" };\n                       lo = { Types.col = \"31\"; line = \"106\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs =\n                            [Types.Adt {\n                               def_id =\n                               { Types.index = (2, 2222); krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"ptr\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"non_null\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"NonNull\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (27, 21322);\n                                       krate = \"openssl3\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs\n                                             \"X509_VERIFY_PARAM_st\");\n                                          disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []})\n                                 ];\n                               trait_refs = []}\n                              ];\n                            output =\n                            (Types.RawPtr\n                               (Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 21322);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                true));\n                            safety = Types.Safe }\n                          })\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (27, 21322); krate = \"openssl3\";\n                           path =\n                           [{ Types.data =\n                              (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                              disambiguator = 0 }\n                             ]\n                           };\n                         generic_args = []; trait_refs = []})\n                     ];\n                   trait = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [Types.Adt {\n                             def_id =\n                             { Types.index = (2, 2222); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ptr\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"non_null\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"NonNull\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Type\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.index = (27, 21322);\n                                     krate = \"openssl3\";\n                                     path =\n                                     [{ Types.data =\n                                        (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                        disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []; trait_refs = []})\n                               ];\n                             trait_refs = []}\n                            ];\n                          output =\n                          (Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 21322);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data =\n                                     (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true));\n                          safety = Types.Safe }\n                        })};\n                 hir_id = (Some (\"424\", \"100\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      (Types.LocalPath\n                         \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                   hi = { Types.col = \"39\"; line = \"106\" };\n                   lo = { Types.col = \"24\"; line = \"106\" } };\n                 ty =\n                 (Types.RawPtr\n                    (Types.Adt {\n                       def_id =\n                       { Types.index = (27, 21322); krate = \"openssl3\";\n                         path =\n                         [{ Types.data =\n                            (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []},\n                     true))\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.Call {\n                    args =\n                    [{ Types.attributes = [];\n                       contents =\n                       Types.Borrow {\n                         arg =\n                         { Types.attributes = [];\n                           contents =\n                           Types.Deref {\n                             arg =\n                             { Types.attributes = [];\n                               contents =\n                               Types.Call {\n                                 args =\n                                 [{ Types.attributes = [];\n                                    contents =\n                                    Types.Borrow {\n                                      arg =\n                                      { Types.attributes = [];\n                                        contents =\n                                        Types.VarRef {\n                                          id =\n                                          { Types.id =\n                                            { Types.local_id = \"94\";\n                                              owner =\n                                              { Types.index = (0, 424);\n                                                krate = \"sandwich\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs\n                                                      \"implementation\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs\n                                                       \"openssl3_impl\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"tunnel\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs\n                                                       \"x509_verify_param\");\n                                                    disambiguator = 0 };\n                                                  { Types.data = Types.Impl;\n                                                    disambiguator = 3 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"add_san\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                }\n                                              };\n                                            name = \"cstring\" }};\n                                        hir_id = None;\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath\n                                                \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                          hi =\n                                          { Types.col = \"31\"; line = \"107\" };\n                                          lo =\n                                          { Types.col = \"24\"; line = \"107\" }\n                                          };\n                                        ty =\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (5, 7722);\n                                            krate = \"alloc\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"ffi\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"c_str\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"CString\");\n                                                disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []}\n                                        };\n                                      borrow_kind = Types.Shared};\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath\n                                            \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                      hi = { Types.col = \"31\"; line = \"107\" };\n                                      lo = { Types.col = \"24\"; line = \"107\" }\n                                      };\n                                    ty =\n                                    (Types.Ref\n                                       ({ Types.kind = Types.ReErased },\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (5, 7722);\n                                            krate = \"alloc\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"ffi\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"c_str\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"CString\");\n                                                disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []},\n                                        false))\n                                    }\n                                   ];\n                                 bounds_impls = [];\n                                 fn_span =\n                                 { Types.filename =\n                                   (Types.Real\n                                      (Types.LocalPath\n                                         \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                   hi = { Types.col = \"40\"; line = \"107\" };\n                                   lo = { Types.col = \"24\"; line = \"107\" } };\n                                 from_hir_call = false;\n                                 fun' =\n                                 { Types.attributes = [];\n                                   contents =\n                                   Types.GlobalName {\n                                     id =\n                                     { Types.index = (2, 3455);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"ops\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"deref\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"Deref\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.ValueNs \"deref\");\n                                           disambiguator = 0 }\n                                         ]\n                                       }};\n                                   hir_id = None;\n                                   span =\n                                   { Types.filename =\n                                     (Types.Real\n                                        (Types.LocalPath\n                                           \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                     hi = { Types.col = \"40\"; line = \"107\" };\n                                     lo = { Types.col = \"24\"; line = \"107\" }\n                                     };\n                                   ty =\n                                   (Types.Arrow\n                                      { Types.bound_vars =\n                                        [(Types.Region\n                                            (Types.BrNamed\n                                               ({ Types.index = (2, 55519);\n                                                  krate = \"core\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs \"ops\");\n                                                     disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"deref\");\n                                                      disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"Deref\");\n                                                      disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.ValueNs \"deref\");\n                                                      disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.LifetimeNs \"'_\");\n                                                      disambiguator = 0 }\n                                                    ]\n                                                  },\n                                                \"'_\")))\n                                          ];\n                                        value =\n                                        { Types.abi =\n                                          Types.Abi {todo = \"Rust\"};\n                                          c_variadic = false;\n                                          inputs =\n                                          [(Types.Ref\n                                              ({ Types.kind =\n                                                 (Types.ReBound\n                                                    (\"0\",\n                                                     { Types.kind =\n                                                       (Types.BrNamed\n                                                          ({ Types.index =\n                                                             (2, 55519);\n                                                             krate = \"core\";\n                                                             path =\n                                                             [{ Types.data =\n                                                                (Types.TypeNs\n                                                                   \"ops\");\n                                                                disambiguator =\n                                                                0 };\n                                                               { Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"deref\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                               { Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"Deref\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                               { Types.data =\n                                                                 (Types.ValueNs\n                                                                    \"deref\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                               { Types.data =\n                                                                 (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                 disambiguator =\n                                                                 0 }\n                                                               ]\n                                                             },\n                                                           \"'_\"));\n                                                       var = \"0\" }))\n                                                 },\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (5, 7722);\n                                                   krate = \"alloc\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"ffi\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"c_str\");\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs\n                                                          \"CString\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []},\n                                               false))\n                                            ];\n                                          output =\n                                          (Types.Ref\n                                             ({ Types.kind =\n                                                (Types.ReBound\n                                                   (\"0\",\n                                                    { Types.kind =\n                                                      (Types.BrNamed\n                                                         ({ Types.index =\n                                                            (2, 55519);\n                                                            krate = \"core\";\n                                                            path =\n                                                            [{ Types.data =\n                                                               (Types.TypeNs\n                                                                  \"ops\");\n                                                               disambiguator =\n                                                               0 };\n                                                              { Types.data =\n                                                                (Types.TypeNs\n                                                                   \"deref\");\n                                                                disambiguator =\n                                                                0 };\n                                                              { Types.data =\n                                                                (Types.TypeNs\n                                                                   \"Deref\");\n                                                                disambiguator =\n                                                                0 };\n                                                              { Types.data =\n                                                                (Types.ValueNs\n                                                                   \"deref\");\n                                                                disambiguator =\n                                                                0 };\n                                                              { Types.data =\n                                                                (Types.LifetimeNs\n                                                                   \"'_\");\n                                                                disambiguator =\n                                                                0 }\n                                                              ]\n                                                            },\n                                                          \"'_\"));\n                                                      var = \"0\" }))\n                                                },\n                                              (Types.Alias\n                                                 { Types.args =\n                                                   [(Types.Type\n                                                       Types.Adt {\n                                                         def_id =\n                                                         { Types.index =\n                                                           (5, 7722);\n                                                           krate = \"alloc\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ffi\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"c_str\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"CString\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         generic_args = [];\n                                                         trait_refs = []})\n                                                     ];\n                                                   def_id =\n                                                   { Types.index = (2, 3454);\n                                                     krate = \"core\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs \"ops\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"deref\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"Deref\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"Target\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   kind =\n                                                   Types.Projection {\n                                                     assoc_item =\n                                                     { Types.container =\n                                                       Types.TraitContainer;\n                                                       def_id =\n                                                       { Types.index =\n                                                         (2, 3454);\n                                                         krate = \"core\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ops\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"deref\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"Deref\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"Target\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       fn_has_self_parameter =\n                                                       false;\n                                                       kind = Types.Type;\n                                                       name = \"Target\";\n                                                       opt_rpitit_info = None;\n                                                       trait_item_def_id =\n                                                       None };\n                                                     impl_expr =\n                                                     { Types.args = [];\n                                                       impl =\n                                                       Types.Concrete {\n                                                         generics = [];\n                                                         id =\n                                                         { Types.index =\n                                                           (5, 4829);\n                                                           krate = \"alloc\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ffi\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"c_str\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               Types.Impl;\n                                                               disambiguator =\n                                                               3 }\n                                                             ]\n                                                           }};\n                                                       trait =\n                                                       { Types.def_id =\n                                                         { Types.index =\n                                                           (2, 3453);\n                                                           krate = \"core\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ops\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"deref\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"Deref\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         generic_args =\n                                                         [(Types.Type\n                                                             Types.Adt {\n                                                               def_id =\n                                                               { Types.index =\n                                                                 (5, 7722);\n                                                                 krate =\n                                                                 \"alloc\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"ffi\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"c_str\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"CString\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               [];\n                                                               trait_refs =\n                                                               []})\n                                                           ]\n                                                         }\n                                                       }}\n                                                   }),\n                                              false));\n                                          safety = Types.Safe }\n                                        })\n                                   };\n                                 generic_args = [];\n                                 trait =\n                                 (Some ({ Types.args = [];\n                                          impl =\n                                          Types.Concrete {generics = [];\n                                            id =\n                                            { Types.index = (5, 4829);\n                                              krate = \"alloc\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"ffi\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"c_str\");\n                                                  disambiguator = 0 };\n                                                { Types.data = Types.Impl;\n                                                  disambiguator = 3 }\n                                                ]\n                                              }};\n                                          trait =\n                                          { Types.def_id =\n                                            { Types.index = (2, 3453);\n                                              krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"ops\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"deref\");\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Deref\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args =\n                                            [(Types.Type\n                                                Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (5, 7722);\n                                                    krate = \"alloc\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"ffi\");\n                                                       disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs \"c_str\");\n                                                        disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs\n                                                           \"CString\");\n                                                        disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = [];\n                                                  trait_refs = []})\n                                              ]\n                                            }\n                                          },\n                                        [(Types.Type\n                                            Types.Adt {\n                                              def_id =\n                                              { Types.index = (5, 7722);\n                                                krate = \"alloc\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ffi\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"c_str\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"CString\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = [];\n                                              trait_refs = []})\n                                          ]));\n                                 ty =\n                                 (Types.Arrow\n                                    { Types.bound_vars =\n                                      [(Types.Region\n                                          (Types.BrNamed\n                                             ({ Types.index = (2, 55519);\n                                                krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ops\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"deref\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"Deref\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"deref\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.LifetimeNs \"'_\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                },\n                                              \"'_\")))\n                                        ];\n                                      value =\n                                      { Types.abi = Types.Abi {todo = \"Rust\"};\n                                        c_variadic = false;\n                                        inputs =\n                                        [(Types.Ref\n                                            ({ Types.kind =\n                                               (Types.ReBound\n                                                  (\"0\",\n                                                   { Types.kind =\n                                                     (Types.BrNamed\n                                                        ({ Types.index =\n                                                           (2, 55519);\n                                                           krate = \"core\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ops\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"deref\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"Deref\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.ValueNs\n                                                                  \"deref\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.LifetimeNs\n                                                                  \"'_\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           },\n                                                         \"'_\"));\n                                                     var = \"0\" }))\n                                               },\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (5, 7722);\n                                                 krate = \"alloc\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"ffi\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"c_str\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"CString\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []},\n                                             false))\n                                          ];\n                                        output =\n                                        (Types.Ref\n                                           ({ Types.kind =\n                                              (Types.ReBound\n                                                 (\"0\",\n                                                  { Types.kind =\n                                                    (Types.BrNamed\n                                                       ({ Types.index =\n                                                          (2, 55519);\n                                                          krate = \"core\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"ops\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"deref\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"Deref\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.ValueNs\n                                                                 \"deref\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.LifetimeNs\n                                                                 \"'_\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          },\n                                                        \"'_\"));\n                                                    var = \"0\" }))\n                                              },\n                                            (Types.Alias\n                                               { Types.args =\n                                                 [(Types.Type\n                                                     Types.Adt {\n                                                       def_id =\n                                                       { Types.index =\n                                                         (5, 7722);\n                                                         krate = \"alloc\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ffi\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"c_str\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"CString\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       generic_args = [];\n                                                       trait_refs = []})\n                                                   ];\n                                                 def_id =\n                                                 { Types.index = (2, 3454);\n                                                   krate = \"core\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"ops\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"deref\");\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"Deref\");\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"Target\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 kind =\n                                                 Types.Projection {\n                                                   assoc_item =\n                                                   { Types.container =\n                                                     Types.TraitContainer;\n                                                     def_id =\n                                                     { Types.index =\n                                                       (2, 3454);\n                                                       krate = \"core\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs \"ops\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"deref\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"Deref\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"Target\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       };\n                                                     fn_has_self_parameter =\n                                                     false;\n                                                     kind = Types.Type;\n                                                     name = \"Target\";\n                                                     opt_rpitit_info = None;\n                                                     trait_item_def_id = None\n                                                     };\n                                                   impl_expr =\n                                                   { Types.args = [];\n                                                     impl =\n                                                     Types.Concrete {\n                                                       generics = [];\n                                                       id =\n                                                       { Types.index =\n                                                         (5, 4829);\n                                                         krate = \"alloc\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ffi\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"c_str\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             Types.Impl;\n                                                             disambiguator =\n                                                             3 }\n                                                           ]\n                                                         }};\n                                                     trait =\n                                                     { Types.def_id =\n                                                       { Types.index =\n                                                         (2, 3453);\n                                                         krate = \"core\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ops\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"deref\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"Deref\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       generic_args =\n                                                       [(Types.Type\n                                                           Types.Adt {\n                                                             def_id =\n                                                             { Types.index =\n                                                               (5, 7722);\n                                                               krate =\n                                                               \"alloc\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"ffi\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"c_str\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"CString\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             [];\n                                                             trait_refs = []})\n                                                         ]\n                                                       }\n                                                     }}\n                                                 }),\n                                            false));\n                                        safety = Types.Safe }\n                                      })};\n                               hir_id = None;\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath\n                                       \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                 hi = { Types.col = \"40\"; line = \"107\" };\n                                 lo = { Types.col = \"24\"; line = \"107\" } };\n                               ty =\n                               (Types.Ref\n                                  ({ Types.kind = Types.ReErased },\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (2, 34717);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"ffi\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"c_str\");\n                                           disambiguator = 0 };\n                                         { Types.data = (Types.TypeNs \"CStr\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []},\n                                   false))\n                               }};\n                           hir_id = None;\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath\n                                   \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                             hi = { Types.col = \"31\"; line = \"107\" };\n                             lo = { Types.col = \"24\"; line = \"107\" } };\n                           ty =\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (2, 34717); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ffi\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"c_str\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"CStr\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []}\n                           };\n                         borrow_kind = Types.Shared};\n                       hir_id = (Some (\"424\", \"107\"));\n                       span =\n                       { Types.filename =\n                         (Types.Real\n                            (Types.LocalPath\n                               \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                         hi = { Types.col = \"31\"; line = \"107\" };\n                         lo = { Types.col = \"24\"; line = \"107\" } };\n                       ty =\n                       (Types.Ref\n                          ({ Types.kind = Types.ReErased },\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (2, 34717); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ffi\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"c_str\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"CStr\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []},\n                           false))\n                       }\n                      ];\n                    bounds_impls = [];\n                    fn_span =\n                    { Types.filename =\n                      (Types.Real\n                         (Types.LocalPath\n                            \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                      hi = { Types.col = \"40\"; line = \"107\" };\n                      lo = { Types.col = \"32\"; line = \"107\" } };\n                    from_hir_call = true;\n                    fun' =\n                    { Types.attributes = [];\n                      contents =\n                      Types.GlobalName {\n                        id =\n                        { Types.index = (2, 5266); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ffi\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"c_str\");\n                              disambiguator = 0 };\n                            { Types.data = Types.Impl; disambiguator = 6 };\n                            { Types.data = (Types.ValueNs \"as_ptr\");\n                              disambiguator = 0 }\n                            ]\n                          }};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                        hi = { Types.col = \"38\"; line = \"107\" };\n                        lo = { Types.col = \"32\"; line = \"107\" } };\n                      ty =\n                      (Types.Arrow\n                         { Types.bound_vars =\n                           [(Types.Region\n                               (Types.BrNamed\n                                  ({ Types.index = (2, 56097);\n                                     krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"ffi\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"c_str\");\n                                         disambiguator = 0 };\n                                       { Types.data = Types.Impl;\n                                         disambiguator = 6 };\n                                       { Types.data =\n                                         (Types.ValueNs \"as_ptr\");\n                                         disambiguator = 0 };\n                                       { Types.data = (Types.LifetimeNs \"'_\");\n                                         disambiguator = 0 }\n                                       ]\n                                     },\n                                   \"'_\")))\n                             ];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [(Types.Ref\n                                 ({ Types.kind =\n                                    (Types.ReBound\n                                       (\"0\",\n                                        { Types.kind =\n                                          (Types.BrNamed\n                                             ({ Types.index = (2, 56097);\n                                                krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ffi\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"c_str\");\n                                                    disambiguator = 0 };\n                                                  { Types.data = Types.Impl;\n                                                    disambiguator = 6 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"as_ptr\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.LifetimeNs \"'_\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                },\n                                              \"'_\"));\n                                          var = \"0\" }))\n                                    },\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (2, 34717);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"ffi\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"c_str\");\n                                          disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"CStr\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []},\n                                  false))\n                               ];\n                             output =\n                             (Types.RawPtr ((Types.Int Types.I8), false));\n                             safety = Types.Safe }\n                           })\n                      };\n                    generic_args = []; trait = None;\n                    ty =\n                    (Types.Arrow\n                       { Types.bound_vars =\n                         [(Types.Region\n                             (Types.BrNamed\n                                ({ Types.index = (2, 56097); krate = \"core\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"ffi\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"c_str\");\n                                       disambiguator = 0 };\n                                     { Types.data = Types.Impl;\n                                       disambiguator = 6 };\n                                     { Types.data = (Types.ValueNs \"as_ptr\");\n                                       disambiguator = 0 };\n                                     { Types.data = (Types.LifetimeNs \"'_\");\n                                       disambiguator = 0 }\n                                     ]\n                                   },\n                                 \"'_\")))\n                           ];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false;\n                           inputs =\n                           [(Types.Ref\n                               ({ Types.kind =\n                                  (Types.ReBound\n                                     (\"0\",\n                                      { Types.kind =\n                                        (Types.BrNamed\n                                           ({ Types.index = (2, 56097);\n                                              krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"ffi\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"c_str\");\n                                                  disambiguator = 0 };\n                                                { Types.data = Types.Impl;\n                                                  disambiguator = 6 };\n                                                { Types.data =\n                                                  (Types.ValueNs \"as_ptr\");\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.LifetimeNs \"'_\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              },\n                                            \"'_\"));\n                                        var = \"0\" }))\n                                  },\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (2, 34717); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"ffi\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"c_str\");\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"CStr\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                false))\n                             ];\n                           output =\n                           (Types.RawPtr ((Types.Int Types.I8), false));\n                           safety = Types.Safe }\n                         })};\n                  hir_id = (Some (\"424\", \"105\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath\n                          \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                    hi = { Types.col = \"40\"; line = \"107\" };\n                    lo = { Types.col = \"24\"; line = \"107\" } };\n                  ty = (Types.RawPtr ((Types.Int Types.I8), false)) };\n                { Types.attributes = [];\n                  contents =\n                  Types.Call {\n                    args =\n                    [{ Types.attributes = [];\n                       contents =\n                       Types.Borrow {\n                         arg =\n                         { Types.attributes = [];\n                           contents =\n                           Types.Deref {\n                             arg =\n                             { Types.attributes = [];\n                               contents =\n                               Types.VarRef {\n                                 id =\n                                 { Types.id =\n                                   { Types.local_id = \"65\";\n                                     owner =\n                                     { Types.index = (0, 424);\n                                       krate = \"sandwich\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"implementation\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"openssl3_impl\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"tunnel\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"x509_verify_param\");\n                                           disambiguator = 0 };\n                                         { Types.data = Types.Impl;\n                                           disambiguator = 3 };\n                                         { Types.data =\n                                           (Types.ValueNs \"add_san\");\n                                           disambiguator = 0 }\n                                         ]\n                                       }\n                                     };\n                                   name = \"value\" }};\n                               hir_id = None;\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath\n                                       \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                 hi = { Types.col = \"29\"; line = \"108\" };\n                                 lo = { Types.col = \"24\"; line = \"108\" } };\n                               ty =\n                               (Types.Ref\n                                  ({ Types.kind = Types.ReErased },\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (5, 7802);\n                                       krate = \"alloc\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"string\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"String\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []},\n                                   false))\n                               }};\n                           hir_id = None;\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath\n                                   \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                             hi = { Types.col = \"29\"; line = \"108\" };\n                             lo = { Types.col = \"24\"; line = \"108\" } };\n                           ty =\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (5, 7802); krate = \"alloc\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"string\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"String\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []}\n                           };\n                         borrow_kind = Types.Shared};\n                       hir_id = (Some (\"424\", \"111\"));\n                       span =\n                       { Types.filename =\n                         (Types.Real\n                            (Types.LocalPath\n                               \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                         hi = { Types.col = \"29\"; line = \"108\" };\n                         lo = { Types.col = \"24\"; line = \"108\" } };\n                       ty =\n                       (Types.Ref\n                          ({ Types.kind = Types.ReErased },\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (5, 7802); krate = \"alloc\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"string\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"String\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []},\n                           false))\n                       }\n                      ];\n                    bounds_impls = [];\n                    fn_span =\n                    { Types.filename =\n                      (Types.Real\n                         (Types.LocalPath\n                            \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                      hi = { Types.col = \"35\"; line = \"108\" };\n                      lo = { Types.col = \"30\"; line = \"108\" } };\n                    from_hir_call = true;\n                    fun' =\n                    { Types.attributes = [];\n                      contents =\n                      Types.GlobalName {\n                        id =\n                        { Types.index = (5, 5849); krate = \"alloc\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"string\");\n                             disambiguator = 0 };\n                            { Types.data = Types.Impl; disambiguator = 0 };\n                            { Types.data = (Types.ValueNs \"len\");\n                              disambiguator = 0 }\n                            ]\n                          }};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                        hi = { Types.col = \"33\"; line = \"108\" };\n                        lo = { Types.col = \"30\"; line = \"108\" } };\n                      ty =\n                      (Types.Arrow\n                         { Types.bound_vars =\n                           [(Types.Region\n                               (Types.BrNamed\n                                  ({ Types.index = (5, 9588);\n                                     krate = \"alloc\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"string\");\n                                        disambiguator = 0 };\n                                       { Types.data = Types.Impl;\n                                         disambiguator = 0 };\n                                       { Types.data = (Types.ValueNs \"len\");\n                                         disambiguator = 0 };\n                                       { Types.data = (Types.LifetimeNs \"'_\");\n                                         disambiguator = 0 }\n                                       ]\n                                     },\n                                   \"'_\")))\n                             ];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [(Types.Ref\n                                 ({ Types.kind =\n                                    (Types.ReBound\n                                       (\"0\",\n                                        { Types.kind =\n                                          (Types.BrNamed\n                                             ({ Types.index = (5, 9588);\n                                                krate = \"alloc\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"string\");\n                                                   disambiguator = 0 };\n                                                  { Types.data = Types.Impl;\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"len\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.LifetimeNs \"'_\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                },\n                                              \"'_\"));\n                                          var = \"0\" }))\n                                    },\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (5, 7802);\n                                      krate = \"alloc\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"string\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"String\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []},\n                                  false))\n                               ];\n                             output = (Types.Uint Types.Usize);\n                             safety = Types.Safe }\n                           })\n                      };\n                    generic_args = []; trait = None;\n                    ty =\n                    (Types.Arrow\n                       { Types.bound_vars =\n                         [(Types.Region\n                             (Types.BrNamed\n                                ({ Types.index = (5, 9588); krate = \"alloc\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"string\");\n                                      disambiguator = 0 };\n                                     { Types.data = Types.Impl;\n                                       disambiguator = 0 };\n                                     { Types.data = (Types.ValueNs \"len\");\n                                       disambiguator = 0 };\n                                     { Types.data = (Types.LifetimeNs \"'_\");\n                                       disambiguator = 0 }\n                                     ]\n                                   },\n                                 \"'_\")))\n                           ];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false;\n                           inputs =\n                           [(Types.Ref\n                               ({ Types.kind =\n                                  (Types.ReBound\n                                     (\"0\",\n                                      { Types.kind =\n                                        (Types.BrNamed\n                                           ({ Types.index = (5, 9588);\n                                              krate = \"alloc\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"string\");\n                                                 disambiguator = 0 };\n                                                { Types.data = Types.Impl;\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.ValueNs \"len\");\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.LifetimeNs \"'_\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              },\n                                            \"'_\"));\n                                        var = \"0\" }))\n                                  },\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (5, 7802); krate = \"alloc\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"string\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"String\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                false))\n                             ];\n                           output = (Types.Uint Types.Usize);\n                           safety = Types.Safe }\n                         })};\n                  hir_id = (Some (\"424\", \"109\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath\n                          \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                    hi = { Types.col = \"35\"; line = \"108\" };\n                    lo = { Types.col = \"24\"; line = \"108\" } };\n                  ty = (Types.Uint Types.Usize) }\n                ];\n              bounds_impls = [];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath\n                      \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                hi = { Types.col = \"21\"; line = \"109\" };\n                lo = { Types.col = \"20\"; line = \"105\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (27, 16303); krate = \"openssl3\";\n                    path =\n                    [{ Types.data = Types.ForeignMod; disambiguator = 2310 };\n                      { Types.data =\n                        (Types.ValueNs \"X509_VERIFY_PARAM_set1_email\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath\n                        \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                  hi = { Types.col = \"58\"; line = \"105\" };\n                  lo = { Types.col = \"20\"; line = \"105\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           (Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21322);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data =\n                                   (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []},\n                            true));\n                         (Types.RawPtr ((Types.Int Types.I8), false));\n                         (Types.Uint Types.Usize)];\n                       output = (Types.Int Types.I32); safety = Types.Unsafe\n                       }\n                     })\n                };\n              generic_args = []; trait = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         (Types.Adt {\n                            def_id =\n                            { Types.index = (27, 21322); krate = \"openssl3\";\n                              path =\n                              [{ Types.data =\n                                 (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []},\n                          true));\n                       (Types.RawPtr ((Types.Int Types.I8), false));\n                       (Types.Uint Types.Usize)];\n                     output = (Types.Int Types.I32); safety = Types.Unsafe }\n                   })};\n            hir_id = (Some (\"424\", \"96\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 (Types.LocalPath\n                    \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n              hi = { Types.col = \"21\"; line = \"109\" };\n              lo = { Types.col = \"20\"; line = \"105\" } };\n            ty = (Types.Int Types.I32) });\n    region_scope = { Types.data = Types.Node; id = \"113\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         (Types.LocalPath\n            \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n      hi = { Types.col = \"17\"; line = \"110\" };\n      lo = { Types.col = \"16\"; line = \"104\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"424\", \"95\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       (Types.LocalPath\n          \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n    hi = { Types.col = \"17\"; line = \"110\" };\n    lo = { Types.col = \"16\"; line = \"104\" } };\n  ty = (Types.Int Types.I32) }"
                )
              <:
              Core.Ops.Control_flow.t_ControlFlow
                (Core.Result.t_Result Prims.unit Sandwich.Error.t_Error) i32
            | Core.Result.Result_Err err ->
              Core.Ops.Control_flow.ControlFlow_Break
              (Core.Result.Result_Err err <: Core.Result.t_Result Prims.unit Sandwich.Error.t_Error)
              <:
              Core.Ops.Control_flow.t_ControlFlow
                (Core.Result.t_Result Prims.unit Sandwich.Error.t_Error) i32)
        | Sandwich_api_proto.Verifiers.Sanmatcher.San_IpAddress value ->
          (match impl_3__add_san__create_cstring #Alloc.String.t_String value with
            | Core.Result.Result_Ok cstring ->
              Core.Ops.Control_flow.ControlFlow_Continue
              (Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
                  "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.Field {\n                        field =\n                        { Types.index = (0, 1186); krate = \"sandwich\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"implementation\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"openssl3_impl\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"tunnel\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"x509_verify_param\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"X509VerifyParam\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.ValueNs \"0\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        lhs =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Deref {\n                            arg =\n                            { Types.attributes = [];\n                              contents =\n                              Types.VarRef {\n                                id =\n                                { Types.id =\n                                  { Types.local_id = \"2\";\n                                    owner =\n                                    { Types.index = (0, 424);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"implementation\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"openssl3_impl\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"tunnel\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"x509_verify_param\");\n                                          disambiguator = 0 };\n                                        { Types.data = Types.Impl;\n                                          disambiguator = 3 };\n                                        { Types.data =\n                                          (Types.ValueNs \"add_san\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    };\n                                  name = \"self\" }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                hi = { Types.col = \"64\"; line = \"115\" };\n                                lo = { Types.col = \"60\"; line = \"115\" } };\n                              ty =\n                              (Types.Ref\n                                 ({ Types.kind = Types.ReErased },\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 1183);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"implementation\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"openssl3_impl\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"tunnel\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"x509_verify_param\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"X509VerifyParam\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Lifetime\n                                        { Types.kind = Types.ReErased })\n                                      ];\n                                    trait_refs = []},\n                                  false))\n                              }};\n                          hir_id = (Some (\"424\", \"155\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                            hi = { Types.col = \"64\"; line = \"115\" };\n                            lo = { Types.col = \"60\"; line = \"115\" } };\n                          ty =\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (0, 1183); krate = \"sandwich\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"implementation\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"openssl3_impl\");\n                                  disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"tunnel\");\n                                  disambiguator = 0 };\n                                { Types.data =\n                                  (Types.TypeNs \"x509_verify_param\");\n                                  disambiguator = 0 };\n                                { Types.data =\n                                  (Types.TypeNs \"X509VerifyParam\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Lifetime { Types.kind = Types.ReErased })\n                              ];\n                            trait_refs = []}\n                          }};\n                      hir_id = (Some (\"424\", \"154\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                        hi = { Types.col = \"66\"; line = \"115\" };\n                        lo = { Types.col = \"60\"; line = \"115\" } };\n                      ty =\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (2, 2222); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ptr\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"non_null\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"NonNull\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21322);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data =\n                                   (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []})\n                          ];\n                        trait_refs = []}\n                      }\n                     ];\n                   bounds_impls = [];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real\n                        (Types.LocalPath\n                           \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                     hi = { Types.col = \"75\"; line = \"115\" };\n                     lo = { Types.col = \"67\"; line = \"115\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (2, 2245); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"ptr\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"non_null\");\n                             disambiguator = 0 };\n                           { Types.data = Types.Impl; disambiguator = 3 };\n                           { Types.data = (Types.ValueNs \"as_ptr\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                       hi = { Types.col = \"73\"; line = \"115\" };\n                       lo = { Types.col = \"67\"; line = \"115\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs =\n                            [Types.Adt {\n                               def_id =\n                               { Types.index = (2, 2222); krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"ptr\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"non_null\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"NonNull\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (27, 21322);\n                                       krate = \"openssl3\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs\n                                             \"X509_VERIFY_PARAM_st\");\n                                          disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []})\n                                 ];\n                               trait_refs = []}\n                              ];\n                            output =\n                            (Types.RawPtr\n                               (Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 21322);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                true));\n                            safety = Types.Safe }\n                          })\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (27, 21322); krate = \"openssl3\";\n                           path =\n                           [{ Types.data =\n                              (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                              disambiguator = 0 }\n                             ]\n                           };\n                         generic_args = []; trait_refs = []})\n                     ];\n                   trait = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [Types.Adt {\n                             def_id =\n                             { Types.index = (2, 2222); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ptr\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"non_null\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"NonNull\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Type\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.index = (27, 21322);\n                                     krate = \"openssl3\";\n                                     path =\n                                     [{ Types.data =\n                                        (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                        disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []; trait_refs = []})\n                               ];\n                             trait_refs = []}\n                            ];\n                          output =\n                          (Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 21322);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data =\n                                     (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true));\n                          safety = Types.Safe }\n                        })};\n                 hir_id = (Some (\"424\", \"152\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      (Types.LocalPath\n                         \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                   hi = { Types.col = \"75\"; line = \"115\" };\n                   lo = { Types.col = \"60\"; line = \"115\" } };\n                 ty =\n                 (Types.RawPtr\n                    (Types.Adt {\n                       def_id =\n                       { Types.index = (27, 21322); krate = \"openssl3\";\n                         path =\n                         [{ Types.data =\n                            (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []},\n                     true))\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.Call {\n                    args =\n                    [{ Types.attributes = [];\n                       contents =\n                       Types.Borrow {\n                         arg =\n                         { Types.attributes = [];\n                           contents =\n                           Types.Deref {\n                             arg =\n                             { Types.attributes = [];\n                               contents =\n                               Types.Call {\n                                 args =\n                                 [{ Types.attributes = [];\n                                    contents =\n                                    Types.Borrow {\n                                      arg =\n                                      { Types.attributes = [];\n                                        contents =\n                                        Types.VarRef {\n                                          id =\n                                          { Types.id =\n                                            { Types.local_id = \"146\";\n                                              owner =\n                                              { Types.index = (0, 424);\n                                                krate = \"sandwich\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs\n                                                      \"implementation\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs\n                                                       \"openssl3_impl\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"tunnel\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs\n                                                       \"x509_verify_param\");\n                                                    disambiguator = 0 };\n                                                  { Types.data = Types.Impl;\n                                                    disambiguator = 3 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"add_san\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                }\n                                              };\n                                            name = \"cstring\" }};\n                                        hir_id = None;\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath\n                                                \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                          hi =\n                                          { Types.col = \"84\"; line = \"115\" };\n                                          lo =\n                                          { Types.col = \"77\"; line = \"115\" }\n                                          };\n                                        ty =\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (5, 7722);\n                                            krate = \"alloc\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"ffi\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"c_str\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"CString\");\n                                                disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []}\n                                        };\n                                      borrow_kind = Types.Shared};\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath\n                                            \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                      hi = { Types.col = \"84\"; line = \"115\" };\n                                      lo = { Types.col = \"77\"; line = \"115\" }\n                                      };\n                                    ty =\n                                    (Types.Ref\n                                       ({ Types.kind = Types.ReErased },\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (5, 7722);\n                                            krate = \"alloc\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"ffi\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"c_str\");\n                                                disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"CString\");\n                                                disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []},\n                                        false))\n                                    }\n                                   ];\n                                 bounds_impls = [];\n                                 fn_span =\n                                 { Types.filename =\n                                   (Types.Real\n                                      (Types.LocalPath\n                                         \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                   hi = { Types.col = \"93\"; line = \"115\" };\n                                   lo = { Types.col = \"77\"; line = \"115\" } };\n                                 from_hir_call = false;\n                                 fun' =\n                                 { Types.attributes = [];\n                                   contents =\n                                   Types.GlobalName {\n                                     id =\n                                     { Types.index = (2, 3455);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"ops\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"deref\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"Deref\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.ValueNs \"deref\");\n                                           disambiguator = 0 }\n                                         ]\n                                       }};\n                                   hir_id = None;\n                                   span =\n                                   { Types.filename =\n                                     (Types.Real\n                                        (Types.LocalPath\n                                           \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                     hi = { Types.col = \"93\"; line = \"115\" };\n                                     lo = { Types.col = \"77\"; line = \"115\" }\n                                     };\n                                   ty =\n                                   (Types.Arrow\n                                      { Types.bound_vars =\n                                        [(Types.Region\n                                            (Types.BrNamed\n                                               ({ Types.index = (2, 55519);\n                                                  krate = \"core\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs \"ops\");\n                                                     disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"deref\");\n                                                      disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"Deref\");\n                                                      disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.ValueNs \"deref\");\n                                                      disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.LifetimeNs \"'_\");\n                                                      disambiguator = 0 }\n                                                    ]\n                                                  },\n                                                \"'_\")))\n                                          ];\n                                        value =\n                                        { Types.abi =\n                                          Types.Abi {todo = \"Rust\"};\n                                          c_variadic = false;\n                                          inputs =\n                                          [(Types.Ref\n                                              ({ Types.kind =\n                                                 (Types.ReBound\n                                                    (\"0\",\n                                                     { Types.kind =\n                                                       (Types.BrNamed\n                                                          ({ Types.index =\n                                                             (2, 55519);\n                                                             krate = \"core\";\n                                                             path =\n                                                             [{ Types.data =\n                                                                (Types.TypeNs\n                                                                   \"ops\");\n                                                                disambiguator =\n                                                                0 };\n                                                               { Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"deref\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                               { Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"Deref\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                               { Types.data =\n                                                                 (Types.ValueNs\n                                                                    \"deref\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                               { Types.data =\n                                                                 (Types.LifetimeNs\n                                                                    \"'_\");\n                                                                 disambiguator =\n                                                                 0 }\n                                                               ]\n                                                             },\n                                                           \"'_\"));\n                                                       var = \"0\" }))\n                                                 },\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (5, 7722);\n                                                   krate = \"alloc\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"ffi\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"c_str\");\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs\n                                                          \"CString\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []},\n                                               false))\n                                            ];\n                                          output =\n                                          (Types.Ref\n                                             ({ Types.kind =\n                                                (Types.ReBound\n                                                   (\"0\",\n                                                    { Types.kind =\n                                                      (Types.BrNamed\n                                                         ({ Types.index =\n                                                            (2, 55519);\n                                                            krate = \"core\";\n                                                            path =\n                                                            [{ Types.data =\n                                                               (Types.TypeNs\n                                                                  \"ops\");\n                                                               disambiguator =\n                                                               0 };\n                                                              { Types.data =\n                                                                (Types.TypeNs\n                                                                   \"deref\");\n                                                                disambiguator =\n                                                                0 };\n                                                              { Types.data =\n                                                                (Types.TypeNs\n                                                                   \"Deref\");\n                                                                disambiguator =\n                                                                0 };\n                                                              { Types.data =\n                                                                (Types.ValueNs\n                                                                   \"deref\");\n                                                                disambiguator =\n                                                                0 };\n                                                              { Types.data =\n                                                                (Types.LifetimeNs\n                                                                   \"'_\");\n                                                                disambiguator =\n                                                                0 }\n                                                              ]\n                                                            },\n                                                          \"'_\"));\n                                                      var = \"0\" }))\n                                                },\n                                              (Types.Alias\n                                                 { Types.args =\n                                                   [(Types.Type\n                                                       Types.Adt {\n                                                         def_id =\n                                                         { Types.index =\n                                                           (5, 7722);\n                                                           krate = \"alloc\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ffi\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"c_str\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"CString\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         generic_args = [];\n                                                         trait_refs = []})\n                                                     ];\n                                                   def_id =\n                                                   { Types.index = (2, 3454);\n                                                     krate = \"core\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs \"ops\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"deref\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"Deref\");\n                                                         disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"Target\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   kind =\n                                                   Types.Projection {\n                                                     assoc_item =\n                                                     { Types.container =\n                                                       Types.TraitContainer;\n                                                       def_id =\n                                                       { Types.index =\n                                                         (2, 3454);\n                                                         krate = \"core\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ops\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"deref\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"Deref\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"Target\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       fn_has_self_parameter =\n                                                       false;\n                                                       kind = Types.Type;\n                                                       name = \"Target\";\n                                                       opt_rpitit_info = None;\n                                                       trait_item_def_id =\n                                                       None };\n                                                     impl_expr =\n                                                     { Types.args = [];\n                                                       impl =\n                                                       Types.Concrete {\n                                                         generics = [];\n                                                         id =\n                                                         { Types.index =\n                                                           (5, 4829);\n                                                           krate = \"alloc\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ffi\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"c_str\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               Types.Impl;\n                                                               disambiguator =\n                                                               3 }\n                                                             ]\n                                                           }};\n                                                       trait =\n                                                       { Types.def_id =\n                                                         { Types.index =\n                                                           (2, 3453);\n                                                           krate = \"core\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ops\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"deref\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"Deref\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         generic_args =\n                                                         [(Types.Type\n                                                             Types.Adt {\n                                                               def_id =\n                                                               { Types.index =\n                                                                 (5, 7722);\n                                                                 krate =\n                                                                 \"alloc\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"ffi\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"c_str\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"CString\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               [];\n                                                               trait_refs =\n                                                               []})\n                                                           ]\n                                                         }\n                                                       }}\n                                                   }),\n                                              false));\n                                          safety = Types.Safe }\n                                        })\n                                   };\n                                 generic_args = [];\n                                 trait =\n                                 (Some ({ Types.args = [];\n                                          impl =\n                                          Types.Concrete {generics = [];\n                                            id =\n                                            { Types.index = (5, 4829);\n                                              krate = \"alloc\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"ffi\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"c_str\");\n                                                  disambiguator = 0 };\n                                                { Types.data = Types.Impl;\n                                                  disambiguator = 3 }\n                                                ]\n                                              }};\n                                          trait =\n                                          { Types.def_id =\n                                            { Types.index = (2, 3453);\n                                              krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"ops\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"deref\");\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"Deref\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args =\n                                            [(Types.Type\n                                                Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (5, 7722);\n                                                    krate = \"alloc\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"ffi\");\n                                                       disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs \"c_str\");\n                                                        disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs\n                                                           \"CString\");\n                                                        disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = [];\n                                                  trait_refs = []})\n                                              ]\n                                            }\n                                          },\n                                        [(Types.Type\n                                            Types.Adt {\n                                              def_id =\n                                              { Types.index = (5, 7722);\n                                                krate = \"alloc\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ffi\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"c_str\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"CString\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = [];\n                                              trait_refs = []})\n                                          ]));\n                                 ty =\n                                 (Types.Arrow\n                                    { Types.bound_vars =\n                                      [(Types.Region\n                                          (Types.BrNamed\n                                             ({ Types.index = (2, 55519);\n                                                krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ops\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"deref\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"Deref\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"deref\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.LifetimeNs \"'_\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                },\n                                              \"'_\")))\n                                        ];\n                                      value =\n                                      { Types.abi = Types.Abi {todo = \"Rust\"};\n                                        c_variadic = false;\n                                        inputs =\n                                        [(Types.Ref\n                                            ({ Types.kind =\n                                               (Types.ReBound\n                                                  (\"0\",\n                                                   { Types.kind =\n                                                     (Types.BrNamed\n                                                        ({ Types.index =\n                                                           (2, 55519);\n                                                           krate = \"core\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ops\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"deref\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"Deref\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.ValueNs\n                                                                  \"deref\");\n                                                               disambiguator =\n                                                               0 };\n                                                             { Types.data =\n                                                               (Types.LifetimeNs\n                                                                  \"'_\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           },\n                                                         \"'_\"));\n                                                     var = \"0\" }))\n                                               },\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (5, 7722);\n                                                 krate = \"alloc\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"ffi\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"c_str\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"CString\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []},\n                                             false))\n                                          ];\n                                        output =\n                                        (Types.Ref\n                                           ({ Types.kind =\n                                              (Types.ReBound\n                                                 (\"0\",\n                                                  { Types.kind =\n                                                    (Types.BrNamed\n                                                       ({ Types.index =\n                                                          (2, 55519);\n                                                          krate = \"core\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"ops\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"deref\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.TypeNs\n                                                                 \"Deref\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.ValueNs\n                                                                 \"deref\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.LifetimeNs\n                                                                 \"'_\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          },\n                                                        \"'_\"));\n                                                    var = \"0\" }))\n                                              },\n                                            (Types.Alias\n                                               { Types.args =\n                                                 [(Types.Type\n                                                     Types.Adt {\n                                                       def_id =\n                                                       { Types.index =\n                                                         (5, 7722);\n                                                         krate = \"alloc\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ffi\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"c_str\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"CString\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       generic_args = [];\n                                                       trait_refs = []})\n                                                   ];\n                                                 def_id =\n                                                 { Types.index = (2, 3454);\n                                                   krate = \"core\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs \"ops\");\n                                                      disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"deref\");\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"Deref\");\n                                                       disambiguator = 0 };\n                                                     { Types.data =\n                                                       (Types.TypeNs \"Target\");\n                                                       disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 kind =\n                                                 Types.Projection {\n                                                   assoc_item =\n                                                   { Types.container =\n                                                     Types.TraitContainer;\n                                                     def_id =\n                                                     { Types.index =\n                                                       (2, 3454);\n                                                       krate = \"core\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs \"ops\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"deref\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"Deref\");\n                                                           disambiguator = 0\n                                                           };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"Target\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       };\n                                                     fn_has_self_parameter =\n                                                     false;\n                                                     kind = Types.Type;\n                                                     name = \"Target\";\n                                                     opt_rpitit_info = None;\n                                                     trait_item_def_id = None\n                                                     };\n                                                   impl_expr =\n                                                   { Types.args = [];\n                                                     impl =\n                                                     Types.Concrete {\n                                                       generics = [];\n                                                       id =\n                                                       { Types.index =\n                                                         (5, 4829);\n                                                         krate = \"alloc\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ffi\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"c_str\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             Types.Impl;\n                                                             disambiguator =\n                                                             3 }\n                                                           ]\n                                                         }};\n                                                     trait =\n                                                     { Types.def_id =\n                                                       { Types.index =\n                                                         (2, 3453);\n                                                         krate = \"core\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ops\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"deref\");\n                                                             disambiguator =\n                                                             0 };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"Deref\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       generic_args =\n                                                       [(Types.Type\n                                                           Types.Adt {\n                                                             def_id =\n                                                             { Types.index =\n                                                               (5, 7722);\n                                                               krate =\n                                                               \"alloc\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"ffi\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"c_str\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"CString\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             [];\n                                                             trait_refs = []})\n                                                         ]\n                                                       }\n                                                     }}\n                                                 }),\n                                            false));\n                                        safety = Types.Safe }\n                                      })};\n                               hir_id = None;\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath\n                                       \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                 hi = { Types.col = \"93\"; line = \"115\" };\n                                 lo = { Types.col = \"77\"; line = \"115\" } };\n                               ty =\n                               (Types.Ref\n                                  ({ Types.kind = Types.ReErased },\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (2, 34717);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"ffi\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"c_str\");\n                                           disambiguator = 0 };\n                                         { Types.data = (Types.TypeNs \"CStr\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []},\n                                   false))\n                               }};\n                           hir_id = None;\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath\n                                   \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                             hi = { Types.col = \"84\"; line = \"115\" };\n                             lo = { Types.col = \"77\"; line = \"115\" } };\n                           ty =\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (2, 34717); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ffi\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"c_str\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"CStr\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []}\n                           };\n                         borrow_kind = Types.Shared};\n                       hir_id = (Some (\"424\", \"159\"));\n                       span =\n                       { Types.filename =\n                         (Types.Real\n                            (Types.LocalPath\n                               \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                         hi = { Types.col = \"84\"; line = \"115\" };\n                         lo = { Types.col = \"77\"; line = \"115\" } };\n                       ty =\n                       (Types.Ref\n                          ({ Types.kind = Types.ReErased },\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (2, 34717); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ffi\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"c_str\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"CStr\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args = []; trait_refs = []},\n                           false))\n                       }\n                      ];\n                    bounds_impls = [];\n                    fn_span =\n                    { Types.filename =\n                      (Types.Real\n                         (Types.LocalPath\n                            \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                      hi = { Types.col = \"93\"; line = \"115\" };\n                      lo = { Types.col = \"85\"; line = \"115\" } };\n                    from_hir_call = true;\n                    fun' =\n                    { Types.attributes = [];\n                      contents =\n                      Types.GlobalName {\n                        id =\n                        { Types.index = (2, 5266); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ffi\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"c_str\");\n                              disambiguator = 0 };\n                            { Types.data = Types.Impl; disambiguator = 6 };\n                            { Types.data = (Types.ValueNs \"as_ptr\");\n                              disambiguator = 0 }\n                            ]\n                          }};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                        hi = { Types.col = \"91\"; line = \"115\" };\n                        lo = { Types.col = \"85\"; line = \"115\" } };\n                      ty =\n                      (Types.Arrow\n                         { Types.bound_vars =\n                           [(Types.Region\n                               (Types.BrNamed\n                                  ({ Types.index = (2, 56097);\n                                     krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"ffi\");\n                                        disambiguator = 0 };\n                                       { Types.data = (Types.TypeNs \"c_str\");\n                                         disambiguator = 0 };\n                                       { Types.data = Types.Impl;\n                                         disambiguator = 6 };\n                                       { Types.data =\n                                         (Types.ValueNs \"as_ptr\");\n                                         disambiguator = 0 };\n                                       { Types.data = (Types.LifetimeNs \"'_\");\n                                         disambiguator = 0 }\n                                       ]\n                                     },\n                                   \"'_\")))\n                             ];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [(Types.Ref\n                                 ({ Types.kind =\n                                    (Types.ReBound\n                                       (\"0\",\n                                        { Types.kind =\n                                          (Types.BrNamed\n                                             ({ Types.index = (2, 56097);\n                                                krate = \"core\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs \"ffi\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"c_str\");\n                                                    disambiguator = 0 };\n                                                  { Types.data = Types.Impl;\n                                                    disambiguator = 6 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"as_ptr\");\n                                                    disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.LifetimeNs \"'_\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                },\n                                              \"'_\"));\n                                          var = \"0\" }))\n                                    },\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (2, 34717);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"ffi\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"c_str\");\n                                          disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"CStr\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []},\n                                  false))\n                               ];\n                             output =\n                             (Types.RawPtr ((Types.Int Types.I8), false));\n                             safety = Types.Safe }\n                           })\n                      };\n                    generic_args = []; trait = None;\n                    ty =\n                    (Types.Arrow\n                       { Types.bound_vars =\n                         [(Types.Region\n                             (Types.BrNamed\n                                ({ Types.index = (2, 56097); krate = \"core\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"ffi\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"c_str\");\n                                       disambiguator = 0 };\n                                     { Types.data = Types.Impl;\n                                       disambiguator = 6 };\n                                     { Types.data = (Types.ValueNs \"as_ptr\");\n                                       disambiguator = 0 };\n                                     { Types.data = (Types.LifetimeNs \"'_\");\n                                       disambiguator = 0 }\n                                     ]\n                                   },\n                                 \"'_\")))\n                           ];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false;\n                           inputs =\n                           [(Types.Ref\n                               ({ Types.kind =\n                                  (Types.ReBound\n                                     (\"0\",\n                                      { Types.kind =\n                                        (Types.BrNamed\n                                           ({ Types.index = (2, 56097);\n                                              krate = \"core\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs \"ffi\");\n                                                 disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.TypeNs \"c_str\");\n                                                  disambiguator = 0 };\n                                                { Types.data = Types.Impl;\n                                                  disambiguator = 6 };\n                                                { Types.data =\n                                                  (Types.ValueNs \"as_ptr\");\n                                                  disambiguator = 0 };\n                                                { Types.data =\n                                                  (Types.LifetimeNs \"'_\");\n                                                  disambiguator = 0 }\n                                                ]\n                                              },\n                                            \"'_\"));\n                                        var = \"0\" }))\n                                  },\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (2, 34717); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"ffi\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"c_str\");\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"CStr\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                false))\n                             ];\n                           output =\n                           (Types.RawPtr ((Types.Int Types.I8), false));\n                           safety = Types.Safe }\n                         })};\n                  hir_id = (Some (\"424\", \"157\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath\n                          \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                    hi = { Types.col = \"93\"; line = \"115\" };\n                    lo = { Types.col = \"77\"; line = \"115\" } };\n                  ty = (Types.RawPtr ((Types.Int Types.I8), false)) }\n                ];\n              bounds_impls = [];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath\n                      \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                hi = { Types.col = \"94\"; line = \"115\" };\n                lo = { Types.col = \"20\"; line = \"115\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (27, 16309); krate = \"openssl3\";\n                    path =\n                    [{ Types.data = Types.ForeignMod; disambiguator = 2313 };\n                      { Types.data =\n                        (Types.ValueNs \"X509_VERIFY_PARAM_set1_ip_asc\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath\n                        \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                  hi = { Types.col = \"59\"; line = \"115\" };\n                  lo = { Types.col = \"20\"; line = \"115\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           (Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21322);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data =\n                                   (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []},\n                            true));\n                         (Types.RawPtr ((Types.Int Types.I8), false))];\n                       output = (Types.Int Types.I32); safety = Types.Unsafe\n                       }\n                     })\n                };\n              generic_args = []; trait = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         (Types.Adt {\n                            def_id =\n                            { Types.index = (27, 21322); krate = \"openssl3\";\n                              path =\n                              [{ Types.data =\n                                 (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []},\n                          true));\n                       (Types.RawPtr ((Types.Int Types.I8), false))];\n                     output = (Types.Int Types.I32); safety = Types.Unsafe }\n                   })};\n            hir_id = (Some (\"424\", \"148\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 (Types.LocalPath\n                    \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n              hi = { Types.col = \"94\"; line = \"115\" };\n              lo = { Types.col = \"20\"; line = \"115\" } };\n            ty = (Types.Int Types.I32) });\n    region_scope = { Types.data = Types.Node; id = \"161\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         (Types.LocalPath\n            \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n      hi = { Types.col = \"17\"; line = \"116\" };\n      lo = { Types.col = \"16\"; line = \"114\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"424\", \"147\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       (Types.LocalPath\n          \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n    hi = { Types.col = \"17\"; line = \"116\" };\n    lo = { Types.col = \"16\"; line = \"114\" } };\n  ty = (Types.Int Types.I32) }"
                )
              <:
              Core.Ops.Control_flow.t_ControlFlow
                (Core.Result.t_Result Prims.unit Sandwich.Error.t_Error) i32
            | Core.Result.Result_Err err ->
              Core.Ops.Control_flow.ControlFlow_Break
              (Core.Result.Result_Err err <: Core.Result.t_Result Prims.unit Sandwich.Error.t_Error)
              <:
              Core.Ops.Control_flow.t_ControlFlow
                (Core.Result.t_Result Prims.unit Sandwich.Error.t_Error) i32)
        | _ ->
          Core.Ops.Control_flow.ControlFlow_Continue
          (Rust_primitives.Hax.never_to_any (Core.Panicking.panic "internal error: entered unreachable code"

                <:
                Rust_primitives.Hax.t_Never))
          <:
          Core.Ops.Control_flow.t_ControlFlow
            (Core.Result.t_Result Prims.unit Sandwich.Error.t_Error) i32
      in
      Core.Ops.Control_flow.ControlFlow_Continue
      (if hoist16 =. 1l
        then
          Core.Result.Result_Ok (() <: Prims.unit)
          <:
          Core.Result.t_Result Prims.unit Sandwich.Error.t_Error
        else
          let res:Alloc.String.t_String =
            Alloc.Fmt.format (Core.Fmt.impl_2__new_v1 (sz 2)
                  (sz 2)
                  (let list = ["failed to add the SAN entry "; ": "] in
                    FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 2);
                    Rust_primitives.Hax.array_of_list 2 list)
                  (match
                      (Sandwich.Implementation.Openssl3_impl.errstr () <: Alloc.String.t_String),
                      san
                      <:
                      (Alloc.String.t_String & Sandwich_api_proto.Verifiers.Sanmatcher.t_San)
                    with
                    | args ->
                      let list =
                        [
                          Core.Fmt.Rt.impl_1__new_debug #Sandwich_api_proto.Verifiers.Sanmatcher.t_San
                            args._2
                          <:
                          Core.Fmt.Rt.t_Argument;
                          Core.Fmt.Rt.impl_1__new_display #Alloc.String.t_String args._1
                          <:
                          Core.Fmt.Rt.t_Argument
                        ]
                      in
                      FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 2);
                      Rust_primitives.Hax.array_of_list 2 list)
                <:
                Core.Fmt.t_Arguments)
          in
          Core.Result.Result_Err
          (Core.Convert.f_into #(Sandwich_proto.Errors.t_TunnelError & Alloc.String.t_String)
              #Sandwich.Error.t_Error
              #FStar.Tactics.Typeclasses.solve
              ((Sandwich_proto.Errors.TunnelError_TUNNELERROR_VERIFIER
                  <:
                  Sandwich_proto.Errors.t_TunnelError),
                res
                <:
                (Sandwich_proto.Errors.t_TunnelError & Alloc.String.t_String)))
          <:
          Core.Result.t_Result Prims.unit Sandwich.Error.t_Error)
      <:
      Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result Prims.unit Sandwich.Error.t_Error)
        (Core.Result.t_Result Prims.unit Sandwich.Error.t_Error))

let impl_3__enable_flag
      (#impl_101696938_: Type0)
      (#[FStar.Tactics.Typeclasses.tcresolve ()] i3: Core.Convert.t_Into impl_101696938_ u64)
      (self: t_X509VerifyParam)
      (flag: impl_101696938_)
     =
  let flag:u64 = Core.Convert.f_into #impl_101696938_ #u64 #FStar.Tactics.Typeclasses.solve flag in
  if
    (Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
        "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.Field {\n                        field =\n                        { Types.index = (0, 1186); krate = \"sandwich\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"implementation\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"openssl3_impl\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"tunnel\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"x509_verify_param\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"X509VerifyParam\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.ValueNs \"0\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        lhs =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Deref {\n                            arg =\n                            { Types.attributes = [];\n                              contents =\n                              Types.VarRef {\n                                id =\n                                { Types.id =\n                                  { Types.local_id = \"2\";\n                                    owner =\n                                    { Types.index = (0, 434);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"implementation\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"openssl3_impl\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"tunnel\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"x509_verify_param\");\n                                          disambiguator = 0 };\n                                        { Types.data = Types.Impl;\n                                          disambiguator = 3 };\n                                        { Types.data =\n                                          (Types.ValueNs \"enable_flag\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    };\n                                  name = \"self\" }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                                hi = { Types.col = \"62\"; line = \"178\" };\n                                lo = { Types.col = \"58\"; line = \"178\" } };\n                              ty =\n                              (Types.Ref\n                                 ({ Types.kind = Types.ReErased },\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 1183);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"implementation\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"openssl3_impl\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"tunnel\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"x509_verify_param\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"X509VerifyParam\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Lifetime\n                                        { Types.kind = Types.ReErased })\n                                      ];\n                                    trait_refs = []},\n                                  false))\n                              }};\n                          hir_id = (Some (\"434\", \"22\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                            hi = { Types.col = \"62\"; line = \"178\" };\n                            lo = { Types.col = \"58\"; line = \"178\" } };\n                          ty =\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (0, 1183); krate = \"sandwich\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"implementation\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"openssl3_impl\");\n                                  disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"tunnel\");\n                                  disambiguator = 0 };\n                                { Types.data =\n                                  (Types.TypeNs \"x509_verify_param\");\n                                  disambiguator = 0 };\n                                { Types.data =\n                                  (Types.TypeNs \"X509VerifyParam\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Lifetime { Types.kind = Types.ReErased })\n                              ];\n                            trait_refs = []}\n                          }};\n                      hir_id = (Some (\"434\", \"21\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                        hi = { Types.col = \"64\"; line = \"178\" };\n                        lo = { Types.col = \"58\"; line = \"178\" } };\n                      ty =\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (2, 2222); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ptr\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"non_null\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"NonNull\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21322);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data =\n                                   (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []})\n                          ];\n                        trait_refs = []}\n                      }\n                     ];\n                   bounds_impls = [];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real\n                        (Types.LocalPath\n                           \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                     hi = { Types.col = \"73\"; line = \"178\" };\n                     lo = { Types.col = \"65\"; line = \"178\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (2, 2245); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"ptr\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"non_null\");\n                             disambiguator = 0 };\n                           { Types.data = Types.Impl; disambiguator = 3 };\n                           { Types.data = (Types.ValueNs \"as_ptr\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                       hi = { Types.col = \"71\"; line = \"178\" };\n                       lo = { Types.col = \"65\"; line = \"178\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs =\n                            [Types.Adt {\n                               def_id =\n                               { Types.index = (2, 2222); krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"ptr\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"non_null\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"NonNull\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (27, 21322);\n                                       krate = \"openssl3\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs\n                                             \"X509_VERIFY_PARAM_st\");\n                                          disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []})\n                                 ];\n                               trait_refs = []}\n                              ];\n                            output =\n                            (Types.RawPtr\n                               (Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 21322);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                true));\n                            safety = Types.Safe }\n                          })\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (27, 21322); krate = \"openssl3\";\n                           path =\n                           [{ Types.data =\n                              (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                              disambiguator = 0 }\n                             ]\n                           };\n                         generic_args = []; trait_refs = []})\n                     ];\n                   trait = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [Types.Adt {\n                             def_id =\n                             { Types.index = (2, 2222); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ptr\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"non_null\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"NonNull\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Type\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.index = (27, 21322);\n                                     krate = \"openssl3\";\n                                     path =\n                                     [{ Types.data =\n                                        (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                        disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []; trait_refs = []})\n                               ];\n                             trait_refs = []}\n                            ];\n                          output =\n                          (Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 21322);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data =\n                                     (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true));\n                          safety = Types.Safe }\n                        })};\n                 hir_id = (Some (\"434\", \"19\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      (Types.LocalPath\n                         \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                   hi = { Types.col = \"73\"; line = \"178\" };\n                   lo = { Types.col = \"58\"; line = \"178\" } };\n                 ty =\n                 (Types.RawPtr\n                    (Types.Adt {\n                       def_id =\n                       { Types.index = (27, 21322); krate = \"openssl3\";\n                         path =\n                         [{ Types.data =\n                            (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []},\n                     true))\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.VarRef {\n                    id =\n                    { Types.id =\n                      { Types.local_id = \"11\";\n                        owner =\n                        { Types.index = (0, 434); krate = \"sandwich\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"implementation\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"openssl3_impl\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"tunnel\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"x509_verify_param\");\n                              disambiguator = 0 };\n                            { Types.data = Types.Impl; disambiguator = 3 };\n                            { Types.data = (Types.ValueNs \"enable_flag\");\n                              disambiguator = 0 }\n                            ]\n                          }\n                        };\n                      name = \"flag\" }};\n                  hir_id = (Some (\"434\", \"24\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath\n                          \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                    hi = { Types.col = \"79\"; line = \"178\" };\n                    lo = { Types.col = \"75\"; line = \"178\" } };\n                  ty = (Types.Uint Types.U64) }\n                ];\n              bounds_impls = [];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath\n                      \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                hi = { Types.col = \"80\"; line = \"178\" };\n                lo = { Types.col = \"20\"; line = \"178\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (27, 16261); krate = \"openssl3\";\n                    path =\n                    [{ Types.data = Types.ForeignMod; disambiguator = 2289 };\n                      { Types.data =\n                        (Types.ValueNs \"X509_VERIFY_PARAM_set_flags\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath\n                        \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n                  hi = { Types.col = \"57\"; line = \"178\" };\n                  lo = { Types.col = \"20\"; line = \"178\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           (Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21322);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data =\n                                   (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []},\n                            true));\n                         (Types.Uint Types.U64)];\n                       output = (Types.Int Types.I32); safety = Types.Unsafe\n                       }\n                     })\n                };\n              generic_args = []; trait = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         (Types.Adt {\n                            def_id =\n                            { Types.index = (27, 21322); krate = \"openssl3\";\n                              path =\n                              [{ Types.data =\n                                 (Types.TypeNs \"X509_VERIFY_PARAM_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []},\n                          true));\n                       (Types.Uint Types.U64)];\n                     output = (Types.Int Types.I32); safety = Types.Unsafe }\n                   })};\n            hir_id = (Some (\"434\", \"15\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 (Types.LocalPath\n                    \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n              hi = { Types.col = \"80\"; line = \"178\" };\n              lo = { Types.col = \"20\"; line = \"178\" } };\n            ty = (Types.Int Types.I32) });\n    region_scope = { Types.data = Types.Node; id = \"26\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real\n         (Types.LocalPath\n            \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n      hi = { Types.col = \"82\"; line = \"178\" };\n      lo = { Types.col = \"11\"; line = \"178\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"434\", \"14\"));\n  span =\n  { Types.filename =\n    (Types.Real\n       (Types.LocalPath\n          \"rust/implementation/openssl3_impl/tunnel/x509_verify_param.rs\"));\n    hi = { Types.col = \"82\"; line = \"178\" };\n    lo = { Types.col = \"11\"; line = \"178\" } };\n  ty = (Types.Int Types.I32) }"

      <:
      i32) =.
    1l
  then
    Core.Result.Result_Ok (() <: Prims.unit)
    <:
    Core.Result.t_Result Prims.unit Sandwich.Error.t_Error
  else
    let res:Alloc.String.t_String =
      Alloc.Fmt.format (Core.Fmt.impl_2__new_v1 (sz 2)
            (sz 2)
            (let list = ["failed to enable flag "; ": "] in
              FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 2);
              Rust_primitives.Hax.array_of_list 2 list)
            (match
                (Sandwich.Implementation.Openssl3_impl.errstr () <: Alloc.String.t_String), flag
                <:
                (Alloc.String.t_String & u64)
              with
              | args ->
                let list =
                  [
                    Core.Fmt.Rt.impl_1__new_display #u64 args._2 <: Core.Fmt.Rt.t_Argument;
                    Core.Fmt.Rt.impl_1__new_display #Alloc.String.t_String args._1
                    <:
                    Core.Fmt.Rt.t_Argument
                  ]
                in
                FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 2);
                Rust_primitives.Hax.array_of_list 2 list)
          <:
          Core.Fmt.t_Arguments)
    in
    Core.Result.Result_Err
    (Core.Convert.f_into #(Sandwich_proto.Errors.t_SystemError & Alloc.String.t_String)
        #Sandwich.Error.t_Error
        #FStar.Tactics.Typeclasses.solve
        ((Sandwich_proto.Errors.SystemError_SYSTEMERROR_BACKEND
            <:
            Sandwich_proto.Errors.t_SystemError),
          res
          <:
          (Sandwich_proto.Errors.t_SystemError & Alloc.String.t_String)))
    <:
    Core.Result.t_Result Prims.unit Sandwich.Error.t_Error

let impl_3__enable_crl_check_for_all_certificates (self: t_X509VerifyParam) =
  impl_3__enable_flag #u32 self Openssl3.v_X509_V_FLAG_CRL_CHECK_ALL

let impl_3__enable_strict_x509_verification (self: t_X509VerifyParam) =
  impl_3__enable_flag #u32 self Openssl3.v_X509_V_FLAG_X509_STRICT

let impl_3__enable_trusted_first_from_trust_store (self: t_X509VerifyParam) =
  impl_3__enable_flag #u32 self Openssl3.v_X509_V_FLAG_TRUSTED_FIRST

let impl_3__set_default_parameters (self: t_X509VerifyParam) =
  let _:Prims.unit =
    impl_3__set_certificate_chain_validation_depth #i32
      self
      (cast (Sandwich.Tunnel.Tls.v_DEFAULT_MAXIMUM_VERIFY_CERT_CHAIN_DEPTH <: u32) <: i32)
  in
  match impl_3__enable_crl_check_for_all_certificates self with
  | Core.Result.Result_Ok _ ->
    (match impl_3__enable_strict_x509_verification self with
      | Core.Result.Result_Ok _ -> impl_3__enable_trusted_first_from_trust_store self
      | Core.Result.Result_Err err ->
        Core.Result.Result_Err err <: Core.Result.t_Result Prims.unit Sandwich.Error.t_Error)
  | Core.Result.Result_Err err ->
    Core.Result.Result_Err err <: Core.Result.t_Result Prims.unit Sandwich.Error.t_Error
