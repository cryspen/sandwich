module Sandwich.Implementation.Openssl3
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

let _ =
  (* This module has implicit dependencies, here we make them explicit. *)
  (* The implicit dependencies arise from typeclasses instances. *)
  let open Sandwich.Error in
  let open Sandwich.Error.Code in
  let open Std.Ffi.Os_str in
  ()

(* item error backend: (reject_RawOrMutPointer) ExplicitRejection { reason: "a node of kind [Raw_pointer] have been found in the AST" }
Last available AST for this item:

/// A convenient builder for providers.
#[cfg(feature = "openssl3")]
#[deny(bare_trait_objects)]
#[feature(register_tool)]
#[register_tool(_hax)]
struct t_ProviderBuilder {
    /// Name of the provider, C format.
    f_name: core::option::t_Option<raw_pointer!()>,
    /// Library context.
    f_lib_ctx: core::option::t_Option<
        core::ptr::non_null::t_NonNull<openssl3::t_ossl_lib_ctx_st>,
    >,
}


Last AST:
/** print_rust: pitem: not implemented  (item: { Concrete_ident.T.def_id =
  { Concrete_ident.Imported.krate = "sandwich";
    path =
    [{ Concrete_ident.Imported.data =
       (Concrete_ident.Imported.TypeNs "implementation"); disambiguator = 0 };
      { Concrete_ident.Imported.data =
        (Concrete_ident.Imported.TypeNs "openssl3"); disambiguator = 0 };
      { Concrete_ident.Imported.data =
        (Concrete_ident.Imported.TypeNs "ProviderBuilder"); disambiguator = 0
        }
      ]
    };
  kind = Concrete_ident.Kind.Value }) */
const _: () = ();
 *)

let impl__ProviderBuilder__lib_ctx
      (self: t_ProviderBuilder)
      (lib_ctx: Core.Ptr.Non_null.t_NonNull Openssl3.t_ossl_lib_ctx_st)
     =
  {
    self with
    f_lib_ctx
    =
    Core.Option.Option_Some lib_ctx
    <:
    Core.Option.t_Option (Core.Ptr.Non_null.t_NonNull Openssl3.t_ossl_lib_ctx_st)
  }
  <:
  t_ProviderBuilder

(* item error backend: (reject_RawOrMutPointer) ExplicitRejection { reason: "a node of kind [Raw_pointer] have been found in the AST" }
Last available AST for this item:

/// Sets the name.
#[cfg(feature = "openssl3")]
#[deny(bare_trait_objects)]
#[feature(register_tool)]
#[register_tool(_hax)]
fn impl__ProviderBuilder__name(
    self: sandwich::implementation::openssl3::t_ProviderBuilder,
    name: raw_pointer!(),
) -> sandwich::implementation::openssl3::t_ProviderBuilder {
    {
        sandwich::implementation::openssl3::ProviderBuilder {
            f_name: core::option::Option_Some(name),
            ..(self)
        }
    }
}


Last AST:
/** print_rust: pitem: not implemented  (item: { Concrete_ident.T.def_id =
  { Concrete_ident.Imported.krate = "sandwich";
    path =
    [{ Concrete_ident.Imported.data =
       (Concrete_ident.Imported.TypeNs "implementation"); disambiguator = 0 };
      { Concrete_ident.Imported.data =
        (Concrete_ident.Imported.TypeNs "openssl3"); disambiguator = 0 };
      { Concrete_ident.Imported.data = Concrete_ident.Imported.Impl;
        disambiguator = 2 };
      { Concrete_ident.Imported.data =
        (Concrete_ident.Imported.ValueNs "name"); disambiguator = 0 }
      ]
    };
  kind = Concrete_ident.Kind.Value }) */
const _: () = ();
 *)

let impl__ProviderBuilder__new (_: Prims.unit) =
  {
    f_name
    =
    Rust_primitives.Hax.failure "(reject_RawOrMutPointer) ExplicitRejection { reason: \"a node of kind [Raw_pointer] have been found in the AST\" }"
      "core::option::Option_None()";
    f_lib_ctx
    =
    Core.Option.Option_None
    <:
    Core.Option.t_Option (Core.Ptr.Non_null.t_NonNull Openssl3.t_ossl_lib_ctx_st)
  }
  <:
  t_ProviderBuilder

let impl__ProviderBuilder__build (self: t_ProviderBuilder) =
  Rust_primitives.Hax.failure "(reject_RawOrMutPointer) ExplicitRejection { reason: \"a node of kind [Raw_pointer] have been found in the AST\" }"
    "(match (proj_sandwich::implementation::openssl3::f_name(self)) {\n        core::option::Option_Some(name) => {\n            (match (proj_sandwich::implementation::openssl3::f_lib_ctx(self)) {\n                core::option::Option_Some(lib_ctx) => {\n                    let provider: sandwich::support::pimpl::t_Pimpl<\n                        lifetime!(something),\n                        openssl3::t_ossl_provider_st,\n                    > = {\n                        (match (core::ops::try_trait::f_branch(\n                            core::option::impl__ok_or_else::<\n                                sandwich::support::pimpl::t_Pimpl<\n                                    lifetime!(something),\n                                    openssl3::t_ossl_provider_st,\n                                >,\n                                tuple2<\n                                    sandwich_proto::errors::t_SystemError,\n                                    alloc::string::t_String,\n                                >,\n                                arrow!(\n                                    tuple0 -> tuple2 < sandwich_proto::errors::t_SystemError,\n                                    alloc::string::t_String >\n                                ),\n                            >(\n                                rust_primitives::hax::failure(\n                                    \"(AST import) Unsafe blocks are not allowed.\",\n                                    \"{ Types.attributes = [];\\n  contents =\\n  Types.Block {\\n    expr =\\n    (Some { Types.attributes = [];\\n            contents =\\n            Types.Call {\\n              args =\\n              [{ Types.attributes = [];\\n                 contents =\\n                 Types.Call {\\n                   args =\\n                   [{ Types.attributes = [];\\n                      contents =\\n                      Types.Call {\\n                        args =\\n                        [{ Types.attributes = [];\\n                           contents =\\n                           Types.VarRef {\\n                             id =\\n                             { Types.id =\\n                               { Types.local_id = \\\"31\\\";\\n                                 owner =\\n                                 { Types.index = (0, 532);\\n                                   krate = \\\"sandwich\\\";\\n                                   path =\\n                                   [{ Types.data =\\n                                      (Types.TypeNs \\\"implementation\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"openssl3\\\");\\n                                       disambiguator = 0 };\\n                                     { Types.data = Types.Impl;\\n                                       disambiguator = 2 };\\n                                     { Types.data = (Types.ValueNs \\\"build\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   }\\n                                 };\\n                               name = \\\"lib_ctx\\\" }};\\n                           hir_id = (Some (\\\"532\\\", \\\"64\\\"));\\n                           span =\\n                           { Types.filename =\\n                             (Types.Real\\n                                (Types.LocalPath\\n                                   \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                             hi = { Types.col = \\\"59\\\"; line = \\\"103\\\" };\\n                             lo = { Types.col = \\\"52\\\"; line = \\\"103\\\" } };\\n                           ty =\\n                           Types.Adt {\\n                             def_id =\\n                             { Types.index = (2, 2222); krate = \\\"core\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                                   disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"NonNull\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args =\\n                             [(Types.Type\\n                                 Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (27, 21556);\\n                                     krate = \\\"openssl3\\\";\\n                                     path =\\n                                     [{ Types.data =\\n                                        (Types.TypeNs \\\"ossl_lib_ctx_st\\\");\\n                                        disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args = []; trait_refs = []})\\n                               ];\\n                             trait_refs = []}\\n                           }\\n                          ];\\n                        bounds_impls = [];\\n                        fn_span =\\n                        { Types.filename =\\n                          (Types.Real\\n                             (Types.LocalPath\\n                                \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                          hi = { Types.col = \\\"68\\\"; line = \\\"103\\\" };\\n                          lo = { Types.col = \\\"60\\\"; line = \\\"103\\\" } };\\n                        from_hir_call = true;\\n                        fun' =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.GlobalName {\\n                            id =\\n                            { Types.index = (2, 2245); krate = \\\"core\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                                  disambiguator = 0 };\\n                                { Types.data = Types.Impl; disambiguator = 3\\n                                  };\\n                                { Types.data = (Types.ValueNs \\\"as_ptr\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              }};\\n                          hir_id = None;\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath\\n                                  \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                            hi = { Types.col = \\\"66\\\"; line = \\\"103\\\" };\\n                            lo = { Types.col = \\\"60\\\"; line = \\\"103\\\" } };\\n                          ty =\\n                          (Types.Arrow\\n                             { Types.bound_vars = [];\\n                               value =\\n                               { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                                 c_variadic = false;\\n                                 inputs =\\n                                 [Types.Adt {\\n                                    def_id =\\n                                    { Types.index = (2, 2222);\\n                                      krate = \\\"core\\\";\\n                                      path =\\n                                      [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                         disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.TypeNs \\\"non_null\\\");\\n                                          disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.TypeNs \\\"NonNull\\\");\\n                                          disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args =\\n                                    [(Types.Type\\n                                        Types.Adt {\\n                                          def_id =\\n                                          { Types.index = (27, 21556);\\n                                            krate = \\\"openssl3\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs\\n                                                  \\\"ossl_lib_ctx_st\\\");\\n                                               disambiguator = 0 }\\n                                              ]\\n                                            };\\n                                          generic_args = []; trait_refs = []})\\n                                      ];\\n                                    trait_refs = []}\\n                                   ];\\n                                 output =\\n                                 (Types.RawPtr\\n                                    (Types.Adt {\\n                                       def_id =\\n                                       { Types.index = (27, 21556);\\n                                         krate = \\\"openssl3\\\";\\n                                         path =\\n                                         [{ Types.data =\\n                                            (Types.TypeNs \\\"ossl_lib_ctx_st\\\");\\n                                            disambiguator = 0 }\\n                                           ]\\n                                         };\\n                                       generic_args = []; trait_refs = []},\\n                                     true));\\n                                 safety = Types.Safe }\\n                               })\\n                          };\\n                        generic_args =\\n                        [(Types.Type\\n                            Types.Adt {\\n                              def_id =\\n                              { Types.index = (27, 21556);\\n                                krate = \\\"openssl3\\\";\\n                                path =\\n                                [{ Types.data =\\n                                   (Types.TypeNs \\\"ossl_lib_ctx_st\\\");\\n                                   disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []; trait_refs = []})\\n                          ];\\n                        trait = None;\\n                        ty =\\n                        (Types.Arrow\\n                           { Types.bound_vars = [];\\n                             value =\\n                             { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                               c_variadic = false;\\n                               inputs =\\n                               [Types.Adt {\\n                                  def_id =\\n                                  { Types.index = (2, 2222); krate = \\\"core\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data =\\n                                        (Types.TypeNs \\\"non_null\\\");\\n                                        disambiguator = 0 };\\n                                      { Types.data = (Types.TypeNs \\\"NonNull\\\");\\n                                        disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args =\\n                                  [(Types.Type\\n                                      Types.Adt {\\n                                        def_id =\\n                                        { Types.index = (27, 21556);\\n                                          krate = \\\"openssl3\\\";\\n                                          path =\\n                                          [{ Types.data =\\n                                             (Types.TypeNs \\\"ossl_lib_ctx_st\\\");\\n                                             disambiguator = 0 }\\n                                            ]\\n                                          };\\n                                        generic_args = []; trait_refs = []})\\n                                    ];\\n                                  trait_refs = []}\\n                                 ];\\n                               output =\\n                               (Types.RawPtr\\n                                  (Types.Adt {\\n                                     def_id =\\n                                     { Types.index = (27, 21556);\\n                                       krate = \\\"openssl3\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.TypeNs \\\"ossl_lib_ctx_st\\\");\\n                                          disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     generic_args = []; trait_refs = []},\\n                                   true));\\n                               safety = Types.Safe }\\n                             })};\\n                      hir_id = (Some (\\\"532\\\", \\\"62\\\"));\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath\\n                              \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                        hi = { Types.col = \\\"68\\\"; line = \\\"103\\\" };\\n                        lo = { Types.col = \\\"52\\\"; line = \\\"103\\\" } };\\n                      ty =\\n                      (Types.RawPtr\\n                         (Types.Adt {\\n                            def_id =\\n                            { Types.index = (27, 21556); krate = \\\"openssl3\\\";\\n                              path =\\n                              [{ Types.data =\\n                                 (Types.TypeNs \\\"ossl_lib_ctx_st\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []; trait_refs = []},\\n                          true))\\n                      };\\n                     { Types.attributes = [];\\n                       contents =\\n                       Types.VarRef {\\n                         id =\\n                         { Types.id =\\n                           { Types.local_id = \\\"9\\\";\\n                             owner =\\n                             { Types.index = (0, 532); krate = \\\"sandwich\\\";\\n                               path =\\n                               [{ Types.data =\\n                                  (Types.TypeNs \\\"implementation\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"openssl3\\\");\\n                                   disambiguator = 0 };\\n                                 { Types.data = Types.Impl; disambiguator = 2\\n                                   };\\n                                 { Types.data = (Types.ValueNs \\\"build\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               }\\n                             };\\n                           name = \\\"name\\\" }};\\n                       hir_id = (Some (\\\"532\\\", \\\"66\\\"));\\n                       span =\\n                       { Types.filename =\\n                         (Types.Real\\n                            (Types.LocalPath\\n                               \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                         hi = { Types.col = \\\"74\\\"; line = \\\"103\\\" };\\n                         lo = { Types.col = \\\"70\\\"; line = \\\"103\\\" } };\\n                       ty = (Types.RawPtr ((Types.Int Types.I8), false)) }\\n                     ];\\n                   bounds_impls = [];\\n                   fn_span =\\n                   { Types.filename =\\n                     (Types.Real\\n                        (Types.LocalPath\\n                           \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                     hi = { Types.col = \\\"75\\\"; line = \\\"103\\\" };\\n                     lo = { Types.col = \\\"23\\\"; line = \\\"103\\\" } };\\n                   from_hir_call = true;\\n                   fun' =\\n                   { Types.attributes = [];\\n                     contents =\\n                     Types.GlobalName {\\n                       id =\\n                       { Types.index = (27, 12657); krate = \\\"openssl3\\\";\\n                         path =\\n                         [{ Types.data = Types.ForeignMod;\\n                            disambiguator = 684 };\\n                           { Types.data =\\n                             (Types.ValueNs \\\"OSSL_PROVIDER_load\\\");\\n                             disambiguator = 0 }\\n                           ]\\n                         }};\\n                     hir_id = None;\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath\\n                             \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                       hi = { Types.col = \\\"51\\\"; line = \\\"103\\\" };\\n                       lo = { Types.col = \\\"23\\\"; line = \\\"103\\\" } };\\n                     ty =\\n                     (Types.Arrow\\n                        { Types.bound_vars = [];\\n                          value =\\n                          { Types.abi =\\n                            Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                            c_variadic = false;\\n                            inputs =\\n                            [(Types.RawPtr\\n                                (Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (27, 21556);\\n                                     krate = \\\"openssl3\\\";\\n                                     path =\\n                                     [{ Types.data =\\n                                        (Types.TypeNs \\\"ossl_lib_ctx_st\\\");\\n                                        disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args = []; trait_refs = []},\\n                                 true));\\n                              (Types.RawPtr ((Types.Int Types.I8), false))];\\n                            output =\\n                            (Types.RawPtr\\n                               (Types.Adt {\\n                                  def_id =\\n                                  { Types.index = (27, 20845);\\n                                    krate = \\\"openssl3\\\";\\n                                    path =\\n                                    [{ Types.data =\\n                                       (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                       disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args = []; trait_refs = []},\\n                                true));\\n                            safety = Types.Unsafe }\\n                          })\\n                     };\\n                   generic_args = []; trait = None;\\n                   ty =\\n                   (Types.Arrow\\n                      { Types.bound_vars = [];\\n                        value =\\n                        { Types.abi =\\n                          Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                          c_variadic = false;\\n                          inputs =\\n                          [(Types.RawPtr\\n                              (Types.Adt {\\n                                 def_id =\\n                                 { Types.index = (27, 21556);\\n                                   krate = \\\"openssl3\\\";\\n                                   path =\\n                                   [{ Types.data =\\n                                      (Types.TypeNs \\\"ossl_lib_ctx_st\\\");\\n                                      disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args = []; trait_refs = []},\\n                               true));\\n                            (Types.RawPtr ((Types.Int Types.I8), false))];\\n                          output =\\n                          (Types.RawPtr\\n                             (Types.Adt {\\n                                def_id =\\n                                { Types.index = (27, 20845);\\n                                  krate = \\\"openssl3\\\";\\n                                  path =\\n                                  [{ Types.data =\\n                                     (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  };\\n                                generic_args = []; trait_refs = []},\\n                              true));\\n                          safety = Types.Unsafe }\\n                        })};\\n                 hir_id = (Some (\\\"532\\\", \\\"58\\\"));\\n                 span =\\n                 { Types.filename =\\n                   (Types.Real\\n                      (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                   hi = { Types.col = \\\"75\\\"; line = \\\"103\\\" };\\n                   lo = { Types.col = \\\"23\\\"; line = \\\"103\\\" } };\\n                 ty =\\n                 (Types.RawPtr\\n                    (Types.Adt {\\n                       def_id =\\n                       { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"ossl_provider_st\\\");\\n                            disambiguator = 0 }\\n                           ]\\n                         };\\n                       generic_args = []; trait_refs = []},\\n                     true))\\n                 };\\n                { Types.attributes = [];\\n                  contents =\\n                  Types.PointerCoercion {\\n                    cast = (Types.ClosureFnPointer Types.Safe);\\n                    source =\\n                    { Types.attributes = [];\\n                      contents =\\n                      Types.Closure {\\n                        body =\\n                        { Types.attributes = [];\\n                          contents =\\n                          Types.Block {expr = None;\\n                            region_scope =\\n                            { Types.data = Types.Node; id = \\\"79\\\" };\\n                            safety_mode = Types.Safe;\\n                            span =\\n                            { Types.filename =\\n                              (Types.Real\\n                                 (Types.LocalPath\\n                                    \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                              hi = { Types.col = \\\"13\\\"; line = \\\"105\\\" };\\n                              lo = { Types.col = \\\"81\\\"; line = \\\"103\\\" } };\\n                            stmts =\\n                            [{ Types.kind =\\n                               Types.Expr {\\n                                 expr =\\n                                 { Types.attributes = [];\\n                                   contents =\\n                                   Types.Call {\\n                                     args =\\n                                     [{ Types.attributes = [];\\n                                        contents =\\n                                        Types.VarRef {\\n                                          id =\\n                                          { Types.id =\\n                                            { Types.local_id = \\\"70\\\";\\n                                              owner =\\n                                              { Types.index = (0, 532);\\n                                                krate = \\\"sandwich\\\";\\n                                                path =\\n                                                [{ Types.data =\\n                                                   (Types.TypeNs\\n                                                      \\\"implementation\\\");\\n                                                   disambiguator = 0 };\\n                                                  { Types.data =\\n                                                    (Types.TypeNs \\\"openssl3\\\");\\n                                                    disambiguator = 0 };\\n                                                  { Types.data = Types.Impl;\\n                                                    disambiguator = 2 };\\n                                                  { Types.data =\\n                                                    (Types.ValueNs \\\"build\\\");\\n                                                    disambiguator = 0 }\\n                                                  ]\\n                                                }\\n                                              };\\n                                            name = \\\"x\\\" }};\\n                                        hir_id = (Some (\\\"532\\\", \\\"76\\\"));\\n                                        span =\\n                                        { Types.filename =\\n                                          (Types.Real\\n                                             (Types.LocalPath\\n                                                \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                                          hi =\\n                                          { Types.col = \\\"48\\\"; line = \\\"104\\\" };\\n                                          lo =\\n                                          { Types.col = \\\"47\\\"; line = \\\"104\\\" }\\n                                          };\\n                                        ty =\\n                                        (Types.RawPtr\\n                                           (Types.Adt {\\n                                              def_id =\\n                                              { Types.index = (27, 20845);\\n                                                krate = \\\"openssl3\\\";\\n                                                path =\\n                                                [{ Types.data =\\n                                                   (Types.TypeNs\\n                                                      \\\"ossl_provider_st\\\");\\n                                                   disambiguator = 0 }\\n                                                  ]\\n                                                };\\n                                              generic_args = [];\\n                                              trait_refs = []},\\n                                            true))\\n                                        }\\n                                       ];\\n                                     bounds_impls = [];\\n                                     fn_span =\\n                                     { Types.filename =\\n                                       (Types.Real\\n                                          (Types.LocalPath\\n                                             \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                                       hi =\\n                                       { Types.col = \\\"49\\\"; line = \\\"104\\\" };\\n                                       lo =\\n                                       { Types.col = \\\"16\\\"; line = \\\"104\\\" } };\\n                                     from_hir_call = true;\\n                                     fun' =\\n                                     { Types.attributes = [];\\n                                       contents =\\n                                       Types.GlobalName {\\n                                         id =\\n                                         { Types.index = (27, 12665);\\n                                           krate = \\\"openssl3\\\";\\n                                           path =\\n                                           [{ Types.data = Types.ForeignMod;\\n                                              disambiguator = 688 };\\n                                             { Types.data =\\n                                               (Types.ValueNs\\n                                                  \\\"OSSL_PROVIDER_unload\\\");\\n                                               disambiguator = 0 }\\n                                             ]\\n                                           }};\\n                                       hir_id = None;\\n                                       span =\\n                                       { Types.filename =\\n                                         (Types.Real\\n                                            (Types.LocalPath\\n                                               \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                                         hi =\\n                                         { Types.col = \\\"46\\\"; line = \\\"104\\\" };\\n                                         lo =\\n                                         { Types.col = \\\"16\\\"; line = \\\"104\\\" } };\\n                                       ty =\\n                                       (Types.Arrow\\n                                          { Types.bound_vars = [];\\n                                            value =\\n                                            { Types.abi =\\n                                              Types.Abi {\\n                                                todo = \\\"C { unwind: false }\\\"};\\n                                              c_variadic = false;\\n                                              inputs =\\n                                              [(Types.RawPtr\\n                                                  (Types.Adt {\\n                                                     def_id =\\n                                                     { Types.index =\\n                                                       (27, 20845);\\n                                                       krate = \\\"openssl3\\\";\\n                                                       path =\\n                                                       [{ Types.data =\\n                                                          (Types.TypeNs\\n                                                             \\\"ossl_provider_st\\\");\\n                                                          disambiguator = 0 }\\n                                                         ]\\n                                                       };\\n                                                     generic_args = [];\\n                                                     trait_refs = []},\\n                                                   true))\\n                                                ];\\n                                              output = (Types.Int Types.I32);\\n                                              safety = Types.Unsafe }\\n                                            })\\n                                       };\\n                                     generic_args = []; trait = None;\\n                                     ty =\\n                                     (Types.Arrow\\n                                        { Types.bound_vars = [];\\n                                          value =\\n                                          { Types.abi =\\n                                            Types.Abi {\\n                                              todo = \\\"C { unwind: false }\\\"};\\n                                            c_variadic = false;\\n                                            inputs =\\n                                            [(Types.RawPtr\\n                                                (Types.Adt {\\n                                                   def_id =\\n                                                   { Types.index =\\n                                                     (27, 20845);\\n                                                     krate = \\\"openssl3\\\";\\n                                                     path =\\n                                                     [{ Types.data =\\n                                                        (Types.TypeNs\\n                                                           \\\"ossl_provider_st\\\");\\n                                                        disambiguator = 0 }\\n                                                       ]\\n                                                     };\\n                                                   generic_args = [];\\n                                                   trait_refs = []},\\n                                                 true))\\n                                              ];\\n                                            output = (Types.Int Types.I32);\\n                                            safety = Types.Unsafe }\\n                                          })};\\n                                   hir_id = (Some (\\\"532\\\", \\\"72\\\"));\\n                                   span =\\n                                   { Types.filename =\\n                                     (Types.Real\\n                                        (Types.LocalPath\\n                                           \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                                     hi = { Types.col = \\\"49\\\"; line = \\\"104\\\" };\\n                                     lo = { Types.col = \\\"16\\\"; line = \\\"104\\\" }\\n                                     };\\n                                   ty = (Types.Int Types.I32) };\\n                                 scope =\\n                                 { Types.data = Types.Node; id = \\\"78\\\" }}\\n                               }\\n                              ];\\n                            targeted_by_break = false};\\n                          hir_id = (Some (\\\"532\\\", \\\"71\\\"));\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath\\n                                  \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                            hi = { Types.col = \\\"13\\\"; line = \\\"105\\\" };\\n                            lo = { Types.col = \\\"81\\\"; line = \\\"103\\\" } };\\n                          ty = (Types.Tuple []) };\\n                        movability = None;\\n                        params =\\n                        [{ Types.attributes = []; hir_id = None; pat = None;\\n                           self_kind = None;\\n                           ty =\\n                           (Types.Ref\\n                              ({ Types.kind = Types.ReErased },\\n                               (Types.Arrow\\n                                  { Types.bound_vars = [];\\n                                    value =\\n                                    { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                                      c_variadic = false;\\n                                      inputs =\\n                                      [(Types.RawPtr\\n                                          (Types.Adt {\\n                                             def_id =\\n                                             { Types.index = (27, 20845);\\n                                               krate = \\\"openssl3\\\";\\n                                               path =\\n                                               [{ Types.data =\\n                                                  (Types.TypeNs\\n                                                     \\\"ossl_provider_st\\\");\\n                                                  disambiguator = 0 }\\n                                                 ]\\n                                               };\\n                                             generic_args = [];\\n                                             trait_refs = []},\\n                                           true))\\n                                        ];\\n                                      output = (Types.Tuple []);\\n                                      safety = Types.Safe }\\n                                    }),\\n                               false));\\n                           ty_span = None };\\n                          { Types.attributes = [];\\n                            hir_id =\\n                            (Some { Types.local_id = \\\"69\\\";\\n                                    owner =\\n                                    { Types.index = (0, 532);\\n                                      krate = \\\"sandwich\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"implementation\\\");\\n                                         disambiguator = 0 };\\n                                        { Types.data =\\n                                          (Types.TypeNs \\\"openssl3\\\");\\n                                          disambiguator = 0 };\\n                                        { Types.data = Types.Impl;\\n                                          disambiguator = 2 };\\n                                        { Types.data =\\n                                          (Types.ValueNs \\\"build\\\");\\n                                          disambiguator = 0 }\\n                                        ]\\n                                      }\\n                                    });\\n                            pat =\\n                            (Some { Types.attributes = [];\\n                                    contents =\\n                                    Types.Binding {is_primary = true;\\n                                      mode =\\n                                      { Types.by_ref = Types.No;\\n                                        mutability = false };\\n                                      subpattern = None;\\n                                      ty =\\n                                      (Types.RawPtr\\n                                         (Types.Adt {\\n                                            def_id =\\n                                            { Types.index = (27, 20845);\\n                                              krate = \\\"openssl3\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs\\n                                                    \\\"ossl_provider_st\\\");\\n                                                 disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args = [];\\n                                            trait_refs = []},\\n                                          true));\\n                                      var =\\n                                      { Types.id =\\n                                        { Types.local_id = \\\"70\\\";\\n                                          owner =\\n                                          { Types.index = (0, 532);\\n                                            krate = \\\"sandwich\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs \\\"implementation\\\");\\n                                               disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"openssl3\\\");\\n                                                disambiguator = 0 };\\n                                              { Types.data = Types.Impl;\\n                                                disambiguator = 2 };\\n                                              { Types.data =\\n                                                (Types.ValueNs \\\"build\\\");\\n                                                disambiguator = 0 }\\n                                              ]\\n                                            }\\n                                          };\\n                                        name = \\\"x\\\" }};\\n                                    hir_id = None;\\n                                    span =\\n                                    { Types.filename =\\n                                      (Types.Real\\n                                         (Types.LocalPath\\n                                            \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                                      hi = { Types.col = \\\"79\\\"; line = \\\"103\\\" };\\n                                      lo = { Types.col = \\\"78\\\"; line = \\\"103\\\" }\\n                                      };\\n                                    ty =\\n                                    (Types.RawPtr\\n                                       (Types.Adt {\\n                                          def_id =\\n                                          { Types.index = (27, 20845);\\n                                            krate = \\\"openssl3\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs\\n                                                  \\\"ossl_provider_st\\\");\\n                                               disambiguator = 0 }\\n                                              ]\\n                                            };\\n                                          generic_args = []; trait_refs = []},\\n                                        true))\\n                                    });\\n                            self_kind = None;\\n                            ty =\\n                            (Types.RawPtr\\n                               (Types.Adt {\\n                                  def_id =\\n                                  { Types.index = (27, 20845);\\n                                    krate = \\\"openssl3\\\";\\n                                    path =\\n                                    [{ Types.data =\\n                                       (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                       disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args = []; trait_refs = []},\\n                                true));\\n                            ty_span = None }\\n                          ];\\n                        upvars = []};\\n                      hir_id = None;\\n                      span =\\n                      { Types.filename =\\n                        (Types.Real\\n                           (Types.LocalPath\\n                              \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                        hi = { Types.col = \\\"13\\\"; line = \\\"105\\\" };\\n                        lo = { Types.col = \\\"77\\\"; line = \\\"103\\\" } };\\n                      ty =\\n                      (Types.Arrow\\n                         { Types.bound_vars = [];\\n                           value =\\n                           { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                             c_variadic = false;\\n                             inputs =\\n                             [(Types.RawPtr\\n                                 (Types.Adt {\\n                                    def_id =\\n                                    { Types.index = (27, 20845);\\n                                      krate = \\\"openssl3\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                         disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args = []; trait_refs = []},\\n                                  true))\\n                               ];\\n                             output = (Types.Tuple []); safety = Types.Safe }\\n                           })\\n                      }};\\n                  hir_id = (Some (\\\"532\\\", \\\"68\\\"));\\n                  span =\\n                  { Types.filename =\\n                    (Types.Real\\n                       (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                    hi = { Types.col = \\\"13\\\"; line = \\\"105\\\" };\\n                    lo = { Types.col = \\\"77\\\"; line = \\\"103\\\" } };\\n                  ty =\\n                  (Types.Arrow\\n                     { Types.bound_vars = [];\\n                       value =\\n                       { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                         c_variadic = false;\\n                         inputs =\\n                         [(Types.RawPtr\\n                             (Types.Adt {\\n                                def_id =\\n                                { Types.index = (27, 20845);\\n                                  krate = \\\"openssl3\\\";\\n                                  path =\\n                                  [{ Types.data =\\n                                     (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  };\\n                                generic_args = []; trait_refs = []},\\n                              true))\\n                           ];\\n                         output = (Types.Tuple []); safety = Types.Safe }\\n                       })\\n                  }\\n                ];\\n              bounds_impls = [];\\n              fn_span =\\n              { Types.filename =\\n                (Types.Real\\n                   (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                hi = { Types.col = \\\"14\\\"; line = \\\"105\\\" };\\n                lo = { Types.col = \\\"12\\\"; line = \\\"103\\\" } };\\n              from_hir_call = true;\\n              fun' =\\n              { Types.attributes = [];\\n                contents =\\n                Types.GlobalName {\\n                  id =\\n                  { Types.index = (0, 642); krate = \\\"sandwich\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"support\\\");\\n                       disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                        disambiguator = 0 };\\n                      { Types.data = Types.Impl; disambiguator = 2 };\\n                      { Types.data = (Types.ValueNs \\\"new\\\"); disambiguator = 0\\n                        }\\n                      ]\\n                    }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real\\n                     (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                  hi = { Types.col = \\\"22\\\"; line = \\\"103\\\" };\\n                  lo = { Types.col = \\\"12\\\"; line = \\\"103\\\" } };\\n                ty =\\n                (Types.Arrow\\n                   { Types.bound_vars = [];\\n                     value =\\n                     { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                       c_variadic = false;\\n                       inputs =\\n                       [(Types.RawPtr\\n                           (Types.Adt {\\n                              def_id =\\n                              { Types.index = (27, 20845);\\n                                krate = \\\"openssl3\\\";\\n                                path =\\n                                [{ Types.data =\\n                                   (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                   disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []; trait_refs = []},\\n                            true));\\n                         (Types.Arrow\\n                            { Types.bound_vars = [];\\n                              value =\\n                              { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                                c_variadic = false;\\n                                inputs =\\n                                [(Types.RawPtr\\n                                    (Types.Adt {\\n                                       def_id =\\n                                       { Types.index = (27, 20845);\\n                                         krate = \\\"openssl3\\\";\\n                                         path =\\n                                         [{ Types.data =\\n                                            (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                            disambiguator = 0 }\\n                                           ]\\n                                         };\\n                                       generic_args = []; trait_refs = []},\\n                                     true))\\n                                  ];\\n                                output = (Types.Tuple []);\\n                                safety = Types.Safe }\\n                              })\\n                         ];\\n                       output =\\n                       Types.Adt {\\n                         def_id =\\n                         { Types.index = (2, 36174); krate = \\\"core\\\";\\n                           path =\\n                           [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                              disambiguator = 0 };\\n                             { Types.data = (Types.TypeNs \\\"Option\\\");\\n                               disambiguator = 0 }\\n                             ]\\n                           };\\n                         generic_args =\\n                         [(Types.Type\\n                             Types.Adt {\\n                               def_id =\\n                               { Types.index = (0, 628); krate = \\\"sandwich\\\";\\n                                 path =\\n                                 [{ Types.data = (Types.TypeNs \\\"support\\\");\\n                                    disambiguator = 0 };\\n                                   { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                                     disambiguator = 0 };\\n                                   { Types.data = (Types.TypeNs \\\"Pimpl\\\");\\n                                     disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args =\\n                               [(Types.Lifetime\\n                                   { Types.kind = Types.ReErased });\\n                                 (Types.Type\\n                                    Types.Adt {\\n                                      def_id =\\n                                      { Types.index = (27, 20845);\\n                                        krate = \\\"openssl3\\\";\\n                                        path =\\n                                        [{ Types.data =\\n                                           (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                           disambiguator = 0 }\\n                                          ]\\n                                        };\\n                                      generic_args = []; trait_refs = []})\\n                                 ];\\n                               trait_refs =\\n                               [{ Types.args = [];\\n                                  impl =\\n                                  Types.Builtin {\\n                                    trait =\\n                                    { Types.def_id =\\n                                      { Types.index = (2, 26413);\\n                                        krate = \\\"core\\\";\\n                                        path =\\n                                        [{ Types.data =\\n                                           (Types.TypeNs \\\"marker\\\");\\n                                           disambiguator = 0 };\\n                                          { Types.data =\\n                                            (Types.TypeNs \\\"Sized\\\");\\n                                            disambiguator = 0 }\\n                                          ]\\n                                        };\\n                                      generic_args =\\n                                      [(Types.Type\\n                                          Types.Adt {\\n                                            def_id =\\n                                            { Types.index = (27, 20845);\\n                                              krate = \\\"openssl3\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs\\n                                                    \\\"ossl_provider_st\\\");\\n                                                 disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args = [];\\n                                            trait_refs = []})\\n                                        ]\\n                                      }};\\n                                  trait =\\n                                  { Types.def_id =\\n                                    { Types.index = (2, 26413);\\n                                      krate = \\\"core\\\";\\n                                      path =\\n                                      [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                         disambiguator = 0 };\\n                                        { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                          disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args =\\n                                    [(Types.Type\\n                                        Types.Adt {\\n                                          def_id =\\n                                          { Types.index = (27, 20845);\\n                                            krate = \\\"openssl3\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs\\n                                                  \\\"ossl_provider_st\\\");\\n                                               disambiguator = 0 }\\n                                              ]\\n                                            };\\n                                          generic_args = []; trait_refs = []})\\n                                      ]\\n                                    }\\n                                  }\\n                                 ]})\\n                           ];\\n                         trait_refs =\\n                         [{ Types.args = [];\\n                            impl =\\n                            Types.Builtin {\\n                              trait =\\n                              { Types.def_id =\\n                                { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                  path =\\n                                  [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                     disambiguator = 0 };\\n                                    { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                      disambiguator = 0 }\\n                                    ]\\n                                  };\\n                                generic_args =\\n                                [(Types.Type\\n                                    Types.Adt {\\n                                      def_id =\\n                                      { Types.index = (0, 628);\\n                                        krate = \\\"sandwich\\\";\\n                                        path =\\n                                        [{ Types.data =\\n                                           (Types.TypeNs \\\"support\\\");\\n                                           disambiguator = 0 };\\n                                          { Types.data =\\n                                            (Types.TypeNs \\\"pimpl\\\");\\n                                            disambiguator = 0 };\\n                                          { Types.data =\\n                                            (Types.TypeNs \\\"Pimpl\\\");\\n                                            disambiguator = 0 }\\n                                          ]\\n                                        };\\n                                      generic_args =\\n                                      [(Types.Lifetime\\n                                          { Types.kind = Types.ReErased });\\n                                        (Types.Type\\n                                           Types.Adt {\\n                                             def_id =\\n                                             { Types.index = (27, 20845);\\n                                               krate = \\\"openssl3\\\";\\n                                               path =\\n                                               [{ Types.data =\\n                                                  (Types.TypeNs\\n                                                     \\\"ossl_provider_st\\\");\\n                                                  disambiguator = 0 }\\n                                                 ]\\n                                               };\\n                                             generic_args = [];\\n                                             trait_refs = []})\\n                                        ];\\n                                      trait_refs =\\n                                      [{ Types.args = [];\\n                                         impl =\\n                                         Types.Builtin {\\n                                           trait =\\n                                           { Types.def_id =\\n                                             { Types.index = (2, 26413);\\n                                               krate = \\\"core\\\";\\n                                               path =\\n                                               [{ Types.data =\\n                                                  (Types.TypeNs \\\"marker\\\");\\n                                                  disambiguator = 0 };\\n                                                 { Types.data =\\n                                                   (Types.TypeNs \\\"Sized\\\");\\n                                                   disambiguator = 0 }\\n                                                 ]\\n                                               };\\n                                             generic_args =\\n                                             [(Types.Type\\n                                                 Types.Adt {\\n                                                   def_id =\\n                                                   { Types.index =\\n                                                     (27, 20845);\\n                                                     krate = \\\"openssl3\\\";\\n                                                     path =\\n                                                     [{ Types.data =\\n                                                        (Types.TypeNs\\n                                                           \\\"ossl_provider_st\\\");\\n                                                        disambiguator = 0 }\\n                                                       ]\\n                                                     };\\n                                                   generic_args = [];\\n                                                   trait_refs = []})\\n                                               ]\\n                                             }};\\n                                         trait =\\n                                         { Types.def_id =\\n                                           { Types.index = (2, 26413);\\n                                             krate = \\\"core\\\";\\n                                             path =\\n                                             [{ Types.data =\\n                                                (Types.TypeNs \\\"marker\\\");\\n                                                disambiguator = 0 };\\n                                               { Types.data =\\n                                                 (Types.TypeNs \\\"Sized\\\");\\n                                                 disambiguator = 0 }\\n                                               ]\\n                                             };\\n                                           generic_args =\\n                                           [(Types.Type\\n                                               Types.Adt {\\n                                                 def_id =\\n                                                 { Types.index = (27, 20845);\\n                                                   krate = \\\"openssl3\\\";\\n                                                   path =\\n                                                   [{ Types.data =\\n                                                      (Types.TypeNs\\n                                                         \\\"ossl_provider_st\\\");\\n                                                      disambiguator = 0 }\\n                                                     ]\\n                                                   };\\n                                                 generic_args = [];\\n                                                 trait_refs = []})\\n                                             ]\\n                                           }\\n                                         }\\n                                        ]})\\n                                  ]\\n                                }};\\n                            trait =\\n                            { Types.def_id =\\n                              { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                   disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                    disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args =\\n                              [(Types.Type\\n                                  Types.Adt {\\n                                    def_id =\\n                                    { Types.index = (0, 628);\\n                                      krate = \\\"sandwich\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"support\\\");\\n                                         disambiguator = 0 };\\n                                        { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                                          disambiguator = 0 };\\n                                        { Types.data = (Types.TypeNs \\\"Pimpl\\\");\\n                                          disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args =\\n                                    [(Types.Lifetime\\n                                        { Types.kind = Types.ReErased });\\n                                      (Types.Type\\n                                         Types.Adt {\\n                                           def_id =\\n                                           { Types.index = (27, 20845);\\n                                             krate = \\\"openssl3\\\";\\n                                             path =\\n                                             [{ Types.data =\\n                                                (Types.TypeNs\\n                                                   \\\"ossl_provider_st\\\");\\n                                                disambiguator = 0 }\\n                                               ]\\n                                             };\\n                                           generic_args = []; trait_refs = []})\\n                                      ];\\n                                    trait_refs =\\n                                    [{ Types.args = [];\\n                                       impl =\\n                                       Types.Builtin {\\n                                         trait =\\n                                         { Types.def_id =\\n                                           { Types.index = (2, 26413);\\n                                             krate = \\\"core\\\";\\n                                             path =\\n                                             [{ Types.data =\\n                                                (Types.TypeNs \\\"marker\\\");\\n                                                disambiguator = 0 };\\n                                               { Types.data =\\n                                                 (Types.TypeNs \\\"Sized\\\");\\n                                                 disambiguator = 0 }\\n                                               ]\\n                                             };\\n                                           generic_args =\\n                                           [(Types.Type\\n                                               Types.Adt {\\n                                                 def_id =\\n                                                 { Types.index = (27, 20845);\\n                                                   krate = \\\"openssl3\\\";\\n                                                   path =\\n                                                   [{ Types.data =\\n                                                      (Types.TypeNs\\n                                                         \\\"ossl_provider_st\\\");\\n                                                      disambiguator = 0 }\\n                                                     ]\\n                                                   };\\n                                                 generic_args = [];\\n                                                 trait_refs = []})\\n                                             ]\\n                                           }};\\n                                       trait =\\n                                       { Types.def_id =\\n                                         { Types.index = (2, 26413);\\n                                           krate = \\\"core\\\";\\n                                           path =\\n                                           [{ Types.data =\\n                                              (Types.TypeNs \\\"marker\\\");\\n                                              disambiguator = 0 };\\n                                             { Types.data =\\n                                               (Types.TypeNs \\\"Sized\\\");\\n                                               disambiguator = 0 }\\n                                             ]\\n                                           };\\n                                         generic_args =\\n                                         [(Types.Type\\n                                             Types.Adt {\\n                                               def_id =\\n                                               { Types.index = (27, 20845);\\n                                                 krate = \\\"openssl3\\\";\\n                                                 path =\\n                                                 [{ Types.data =\\n                                                    (Types.TypeNs\\n                                                       \\\"ossl_provider_st\\\");\\n                                                    disambiguator = 0 }\\n                                                   ]\\n                                                 };\\n                                               generic_args = [];\\n                                               trait_refs = []})\\n                                           ]\\n                                         }\\n                                       }\\n                                      ]})\\n                                ]\\n                              }\\n                            }\\n                           ]};\\n                       safety = Types.Unsafe }\\n                     })\\n                };\\n              generic_args =\\n              [(Types.Lifetime { Types.kind = Types.ReErased });\\n                (Types.Type\\n                   Types.Adt {\\n                     def_id =\\n                     { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                       path =\\n                       [{ Types.data = (Types.TypeNs \\\"ossl_provider_st\\\");\\n                          disambiguator = 0 }\\n                         ]\\n                       };\\n                     generic_args = []; trait_refs = []})\\n                ];\\n              trait = None;\\n              ty =\\n              (Types.Arrow\\n                 { Types.bound_vars = [];\\n                   value =\\n                   { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                     c_variadic = false;\\n                     inputs =\\n                     [(Types.RawPtr\\n                         (Types.Adt {\\n                            def_id =\\n                            { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                              path =\\n                              [{ Types.data =\\n                                 (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []; trait_refs = []},\\n                          true));\\n                       (Types.Arrow\\n                          { Types.bound_vars = [];\\n                            value =\\n                            { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                              c_variadic = false;\\n                              inputs =\\n                              [(Types.RawPtr\\n                                  (Types.Adt {\\n                                     def_id =\\n                                     { Types.index = (27, 20845);\\n                                       krate = \\\"openssl3\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                          disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     generic_args = []; trait_refs = []},\\n                                   true))\\n                                ];\\n                              output = (Types.Tuple []); safety = Types.Safe\\n                              }\\n                            })\\n                       ];\\n                     output =\\n                     Types.Adt {\\n                       def_id =\\n                       { Types.index = (2, 36174); krate = \\\"core\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"option\\\");\\n                            disambiguator = 0 };\\n                           { Types.data = (Types.TypeNs \\\"Option\\\");\\n                             disambiguator = 0 }\\n                           ]\\n                         };\\n                       generic_args =\\n                       [(Types.Type\\n                           Types.Adt {\\n                             def_id =\\n                             { Types.index = (0, 628); krate = \\\"sandwich\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"support\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                                   disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"Pimpl\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args =\\n                             [(Types.Lifetime { Types.kind = Types.ReErased });\\n                               (Types.Type\\n                                  Types.Adt {\\n                                    def_id =\\n                                    { Types.index = (27, 20845);\\n                                      krate = \\\"openssl3\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                         disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args = []; trait_refs = []})\\n                               ];\\n                             trait_refs =\\n                             [{ Types.args = [];\\n                                impl =\\n                                Types.Builtin {\\n                                  trait =\\n                                  { Types.def_id =\\n                                    { Types.index = (2, 26413);\\n                                      krate = \\\"core\\\";\\n                                      path =\\n                                      [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                         disambiguator = 0 };\\n                                        { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                          disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args =\\n                                    [(Types.Type\\n                                        Types.Adt {\\n                                          def_id =\\n                                          { Types.index = (27, 20845);\\n                                            krate = \\\"openssl3\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs\\n                                                  \\\"ossl_provider_st\\\");\\n                                               disambiguator = 0 }\\n                                              ]\\n                                            };\\n                                          generic_args = []; trait_refs = []})\\n                                      ]\\n                                    }};\\n                                trait =\\n                                { Types.def_id =\\n                                  { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                        disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args =\\n                                  [(Types.Type\\n                                      Types.Adt {\\n                                        def_id =\\n                                        { Types.index = (27, 20845);\\n                                          krate = \\\"openssl3\\\";\\n                                          path =\\n                                          [{ Types.data =\\n                                             (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                             disambiguator = 0 }\\n                                            ]\\n                                          };\\n                                        generic_args = []; trait_refs = []})\\n                                    ]\\n                                  }\\n                                }\\n                               ]})\\n                         ];\\n                       trait_refs =\\n                       [{ Types.args = [];\\n                          impl =\\n                          Types.Builtin {\\n                            trait =\\n                            { Types.def_id =\\n                              { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                   disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                    disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args =\\n                              [(Types.Type\\n                                  Types.Adt {\\n                                    def_id =\\n                                    { Types.index = (0, 628);\\n                                      krate = \\\"sandwich\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"support\\\");\\n                                         disambiguator = 0 };\\n                                        { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                                          disambiguator = 0 };\\n                                        { Types.data = (Types.TypeNs \\\"Pimpl\\\");\\n                                          disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args =\\n                                    [(Types.Lifetime\\n                                        { Types.kind = Types.ReErased });\\n                                      (Types.Type\\n                                         Types.Adt {\\n                                           def_id =\\n                                           { Types.index = (27, 20845);\\n                                             krate = \\\"openssl3\\\";\\n                                             path =\\n                                             [{ Types.data =\\n                                                (Types.TypeNs\\n                                                   \\\"ossl_provider_st\\\");\\n                                                disambiguator = 0 }\\n                                               ]\\n                                             };\\n                                           generic_args = []; trait_refs = []})\\n                                      ];\\n                                    trait_refs =\\n                                    [{ Types.args = [];\\n                                       impl =\\n                                       Types.Builtin {\\n                                         trait =\\n                                         { Types.def_id =\\n                                           { Types.index = (2, 26413);\\n                                             krate = \\\"core\\\";\\n                                             path =\\n                                             [{ Types.data =\\n                                                (Types.TypeNs \\\"marker\\\");\\n                                                disambiguator = 0 };\\n                                               { Types.data =\\n                                                 (Types.TypeNs \\\"Sized\\\");\\n                                                 disambiguator = 0 }\\n                                               ]\\n                                             };\\n                                           generic_args =\\n                                           [(Types.Type\\n                                               Types.Adt {\\n                                                 def_id =\\n                                                 { Types.index = (27, 20845);\\n                                                   krate = \\\"openssl3\\\";\\n                                                   path =\\n                                                   [{ Types.data =\\n                                                      (Types.TypeNs\\n                                                         \\\"ossl_provider_st\\\");\\n                                                      disambiguator = 0 }\\n                                                     ]\\n                                                   };\\n                                                 generic_args = [];\\n                                                 trait_refs = []})\\n                                             ]\\n                                           }};\\n                                       trait =\\n                                       { Types.def_id =\\n                                         { Types.index = (2, 26413);\\n                                           krate = \\\"core\\\";\\n                                           path =\\n                                           [{ Types.data =\\n                                              (Types.TypeNs \\\"marker\\\");\\n                                              disambiguator = 0 };\\n                                             { Types.data =\\n                                               (Types.TypeNs \\\"Sized\\\");\\n                                               disambiguator = 0 }\\n                                             ]\\n                                           };\\n                                         generic_args =\\n                                         [(Types.Type\\n                                             Types.Adt {\\n                                               def_id =\\n                                               { Types.index = (27, 20845);\\n                                                 krate = \\\"openssl3\\\";\\n                                                 path =\\n                                                 [{ Types.data =\\n                                                    (Types.TypeNs\\n                                                       \\\"ossl_provider_st\\\");\\n                                                    disambiguator = 0 }\\n                                                   ]\\n                                                 };\\n                                               generic_args = [];\\n                                               trait_refs = []})\\n                                           ]\\n                                         }\\n                                       }\\n                                      ]})\\n                                ]\\n                              }};\\n                          trait =\\n                          { Types.def_id =\\n                            { Types.index = (2, 26413); krate = \\\"core\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args =\\n                            [(Types.Type\\n                                Types.Adt {\\n                                  def_id =\\n                                  { Types.index = (0, 628);\\n                                    krate = \\\"sandwich\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"support\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                                        disambiguator = 0 };\\n                                      { Types.data = (Types.TypeNs \\\"Pimpl\\\");\\n                                        disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args =\\n                                  [(Types.Lifetime\\n                                      { Types.kind = Types.ReErased });\\n                                    (Types.Type\\n                                       Types.Adt {\\n                                         def_id =\\n                                         { Types.index = (27, 20845);\\n                                           krate = \\\"openssl3\\\";\\n                                           path =\\n                                           [{ Types.data =\\n                                              (Types.TypeNs\\n                                                 \\\"ossl_provider_st\\\");\\n                                              disambiguator = 0 }\\n                                             ]\\n                                           };\\n                                         generic_args = []; trait_refs = []})\\n                                    ];\\n                                  trait_refs =\\n                                  [{ Types.args = [];\\n                                     impl =\\n                                     Types.Builtin {\\n                                       trait =\\n                                       { Types.def_id =\\n                                         { Types.index = (2, 26413);\\n                                           krate = \\\"core\\\";\\n                                           path =\\n                                           [{ Types.data =\\n                                              (Types.TypeNs \\\"marker\\\");\\n                                              disambiguator = 0 };\\n                                             { Types.data =\\n                                               (Types.TypeNs \\\"Sized\\\");\\n                                               disambiguator = 0 }\\n                                             ]\\n                                           };\\n                                         generic_args =\\n                                         [(Types.Type\\n                                             Types.Adt {\\n                                               def_id =\\n                                               { Types.index = (27, 20845);\\n                                                 krate = \\\"openssl3\\\";\\n                                                 path =\\n                                                 [{ Types.data =\\n                                                    (Types.TypeNs\\n                                                       \\\"ossl_provider_st\\\");\\n                                                    disambiguator = 0 }\\n                                                   ]\\n                                                 };\\n                                               generic_args = [];\\n                                               trait_refs = []})\\n                                           ]\\n                                         }};\\n                                     trait =\\n                                     { Types.def_id =\\n                                       { Types.index = (2, 26413);\\n                                         krate = \\\"core\\\";\\n                                         path =\\n                                         [{ Types.data =\\n                                            (Types.TypeNs \\\"marker\\\");\\n                                            disambiguator = 0 };\\n                                           { Types.data =\\n                                             (Types.TypeNs \\\"Sized\\\");\\n                                             disambiguator = 0 }\\n                                           ]\\n                                         };\\n                                       generic_args =\\n                                       [(Types.Type\\n                                           Types.Adt {\\n                                             def_id =\\n                                             { Types.index = (27, 20845);\\n                                               krate = \\\"openssl3\\\";\\n                                               path =\\n                                               [{ Types.data =\\n                                                  (Types.TypeNs\\n                                                     \\\"ossl_provider_st\\\");\\n                                                  disambiguator = 0 }\\n                                                 ]\\n                                               };\\n                                             generic_args = [];\\n                                             trait_refs = []})\\n                                         ]\\n                                       }\\n                                     }\\n                                    ]})\\n                              ]\\n                            }\\n                          }\\n                         ]};\\n                     safety = Types.Unsafe }\\n                   })};\\n            hir_id = (Some (\\\"532\\\", \\\"52\\\"));\\n            span =\\n            { Types.filename =\\n              (Types.Real\\n                 (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n              hi = { Types.col = \\\"14\\\"; line = \\\"105\\\" };\\n              lo = { Types.col = \\\"12\\\"; line = \\\"103\\\" } };\\n            ty =\\n            Types.Adt {\\n              def_id =\\n              { Types.index = (2, 36174); krate = \\\"core\\\";\\n                path =\\n                [{ Types.data = (Types.TypeNs \\\"option\\\"); disambiguator = 0 };\\n                  { Types.data = (Types.TypeNs \\\"Option\\\"); disambiguator = 0 }\\n                  ]\\n                };\\n              generic_args =\\n              [(Types.Type\\n                  Types.Adt {\\n                    def_id =\\n                    { Types.index = (0, 628); krate = \\\"sandwich\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"support\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                          disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"Pimpl\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args =\\n                    [(Types.Lifetime { Types.kind = Types.ReErased });\\n                      (Types.Type\\n                         Types.Adt {\\n                           def_id =\\n                           { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                             path =\\n                             [{ Types.data =\\n                                (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []; trait_refs = []})\\n                      ];\\n                    trait_refs =\\n                    [{ Types.args = [];\\n                       impl =\\n                       Types.Builtin {\\n                         trait =\\n                         { Types.def_id =\\n                           { Types.index = (2, 26413); krate = \\\"core\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args =\\n                           [(Types.Type\\n                               Types.Adt {\\n                                 def_id =\\n                                 { Types.index = (27, 20845);\\n                                   krate = \\\"openssl3\\\";\\n                                   path =\\n                                   [{ Types.data =\\n                                      (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                      disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args = []; trait_refs = []})\\n                             ]\\n                           }};\\n                       trait =\\n                       { Types.def_id =\\n                         { Types.index = (2, 26413); krate = \\\"core\\\";\\n                           path =\\n                           [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                              disambiguator = 0 };\\n                             { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                               disambiguator = 0 }\\n                             ]\\n                           };\\n                         generic_args =\\n                         [(Types.Type\\n                             Types.Adt {\\n                               def_id =\\n                               { Types.index = (27, 20845);\\n                                 krate = \\\"openssl3\\\";\\n                                 path =\\n                                 [{ Types.data =\\n                                    (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                    disambiguator = 0 }\\n                                   ]\\n                                 };\\n                               generic_args = []; trait_refs = []})\\n                           ]\\n                         }\\n                       }\\n                      ]})\\n                ];\\n              trait_refs =\\n              [{ Types.args = [];\\n                 impl =\\n                 Types.Builtin {\\n                   trait =\\n                   { Types.def_id =\\n                     { Types.index = (2, 26413); krate = \\\"core\\\";\\n                       path =\\n                       [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                          disambiguator = 0 };\\n                         { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                           disambiguator = 0 }\\n                         ]\\n                       };\\n                     generic_args =\\n                     [(Types.Type\\n                         Types.Adt {\\n                           def_id =\\n                           { Types.index = (0, 628); krate = \\\"sandwich\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"support\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"Pimpl\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args =\\n                           [(Types.Lifetime { Types.kind = Types.ReErased });\\n                             (Types.Type\\n                                Types.Adt {\\n                                  def_id =\\n                                  { Types.index = (27, 20845);\\n                                    krate = \\\"openssl3\\\";\\n                                    path =\\n                                    [{ Types.data =\\n                                       (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                       disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args = []; trait_refs = []})\\n                             ];\\n                           trait_refs =\\n                           [{ Types.args = [];\\n                              impl =\\n                              Types.Builtin {\\n                                trait =\\n                                { Types.def_id =\\n                                  { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                    path =\\n                                    [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                       disambiguator = 0 };\\n                                      { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                        disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args =\\n                                  [(Types.Type\\n                                      Types.Adt {\\n                                        def_id =\\n                                        { Types.index = (27, 20845);\\n                                          krate = \\\"openssl3\\\";\\n                                          path =\\n                                          [{ Types.data =\\n                                             (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                             disambiguator = 0 }\\n                                            ]\\n                                          };\\n                                        generic_args = []; trait_refs = []})\\n                                    ]\\n                                  }};\\n                              trait =\\n                              { Types.def_id =\\n                                { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                  path =\\n                                  [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                     disambiguator = 0 };\\n                                    { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                      disambiguator = 0 }\\n                                    ]\\n                                  };\\n                                generic_args =\\n                                [(Types.Type\\n                                    Types.Adt {\\n                                      def_id =\\n                                      { Types.index = (27, 20845);\\n                                        krate = \\\"openssl3\\\";\\n                                        path =\\n                                        [{ Types.data =\\n                                           (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                           disambiguator = 0 }\\n                                          ]\\n                                        };\\n                                      generic_args = []; trait_refs = []})\\n                                  ]\\n                                }\\n                              }\\n                             ]})\\n                       ]\\n                     }};\\n                 trait =\\n                 { Types.def_id =\\n                   { Types.index = (2, 26413); krate = \\\"core\\\";\\n                     path =\\n                     [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                        disambiguator = 0 };\\n                       { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                         disambiguator = 0 }\\n                       ]\\n                     };\\n                   generic_args =\\n                   [(Types.Type\\n                       Types.Adt {\\n                         def_id =\\n                         { Types.index = (0, 628); krate = \\\"sandwich\\\";\\n                           path =\\n                           [{ Types.data = (Types.TypeNs \\\"support\\\");\\n                              disambiguator = 0 };\\n                             { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                               disambiguator = 0 };\\n                             { Types.data = (Types.TypeNs \\\"Pimpl\\\");\\n                               disambiguator = 0 }\\n                             ]\\n                           };\\n                         generic_args =\\n                         [(Types.Lifetime { Types.kind = Types.ReErased });\\n                           (Types.Type\\n                              Types.Adt {\\n                                def_id =\\n                                { Types.index = (27, 20845);\\n                                  krate = \\\"openssl3\\\";\\n                                  path =\\n                                  [{ Types.data =\\n                                     (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                     disambiguator = 0 }\\n                                    ]\\n                                  };\\n                                generic_args = []; trait_refs = []})\\n                           ];\\n                         trait_refs =\\n                         [{ Types.args = [];\\n                            impl =\\n                            Types.Builtin {\\n                              trait =\\n                              { Types.def_id =\\n                                { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                  path =\\n                                  [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                     disambiguator = 0 };\\n                                    { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                      disambiguator = 0 }\\n                                    ]\\n                                  };\\n                                generic_args =\\n                                [(Types.Type\\n                                    Types.Adt {\\n                                      def_id =\\n                                      { Types.index = (27, 20845);\\n                                        krate = \\\"openssl3\\\";\\n                                        path =\\n                                        [{ Types.data =\\n                                           (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                           disambiguator = 0 }\\n                                          ]\\n                                        };\\n                                      generic_args = []; trait_refs = []})\\n                                  ]\\n                                }};\\n                            trait =\\n                            { Types.def_id =\\n                              { Types.index = (2, 26413); krate = \\\"core\\\";\\n                                path =\\n                                [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                                   disambiguator = 0 };\\n                                  { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                                    disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args =\\n                              [(Types.Type\\n                                  Types.Adt {\\n                                    def_id =\\n                                    { Types.index = (27, 20845);\\n                                      krate = \\\"openssl3\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                         disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args = []; trait_refs = []})\\n                                ]\\n                              }\\n                            }\\n                           ]})\\n                     ]\\n                   }\\n                 }\\n                ]}\\n            });\\n    region_scope = { Types.data = Types.Node; id = \\\"81\\\" };\\n    safety_mode = Types.ExplicitUnsafe;\\n    span =\\n    { Types.filename =\\n      (Types.Real (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n      hi = { Types.col = \\\"9\\\"; line = \\\"106\\\" };\\n      lo = { Types.col = \\\"23\\\"; line = \\\"102\\\" } };\\n    stmts = []; targeted_by_break = false};\\n  hir_id = (Some (\\\"532\\\", \\\"51\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n    hi = { Types.col = \\\"9\\\"; line = \\\"106\\\" };\\n    lo = { Types.col = \\\"23\\\"; line = \\\"102\\\" } };\\n  ty =\\n  Types.Adt {\\n    def_id =\\n    { Types.index = (2, 36174); krate = \\\"core\\\";\\n      path =\\n      [{ Types.data = (Types.TypeNs \\\"option\\\"); disambiguator = 0 };\\n        { Types.data = (Types.TypeNs \\\"Option\\\"); disambiguator = 0 }]\\n      };\\n    generic_args =\\n    [(Types.Type\\n        Types.Adt {\\n          def_id =\\n          { Types.index = (0, 628); krate = \\\"sandwich\\\";\\n            path =\\n            [{ Types.data = (Types.TypeNs \\\"support\\\"); disambiguator = 0 };\\n              { Types.data = (Types.TypeNs \\\"pimpl\\\"); disambiguator = 0 };\\n              { Types.data = (Types.TypeNs \\\"Pimpl\\\"); disambiguator = 0 }]\\n            };\\n          generic_args =\\n          [(Types.Lifetime { Types.kind = Types.ReErased });\\n            (Types.Type\\n               Types.Adt {\\n                 def_id =\\n                 { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                   path =\\n                   [{ Types.data = (Types.TypeNs \\\"ossl_provider_st\\\");\\n                      disambiguator = 0 }\\n                     ]\\n                   };\\n                 generic_args = []; trait_refs = []})\\n            ];\\n          trait_refs =\\n          [{ Types.args = [];\\n             impl =\\n             Types.Builtin {\\n               trait =\\n               { Types.def_id =\\n                 { Types.index = (2, 26413); krate = \\\"core\\\";\\n                   path =\\n                   [{ Types.data = (Types.TypeNs \\\"marker\\\"); disambiguator = 0\\n                      };\\n                     { Types.data = (Types.TypeNs \\\"Sized\\\"); disambiguator = 0\\n                       }\\n                     ]\\n                   };\\n                 generic_args =\\n                 [(Types.Type\\n                     Types.Adt {\\n                       def_id =\\n                       { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"ossl_provider_st\\\");\\n                            disambiguator = 0 }\\n                           ]\\n                         };\\n                       generic_args = []; trait_refs = []})\\n                   ]\\n                 }};\\n             trait =\\n             { Types.def_id =\\n               { Types.index = (2, 26413); krate = \\\"core\\\";\\n                 path =\\n                 [{ Types.data = (Types.TypeNs \\\"marker\\\"); disambiguator = 0 };\\n                   { Types.data = (Types.TypeNs \\\"Sized\\\"); disambiguator = 0 }\\n                   ]\\n                 };\\n               generic_args =\\n               [(Types.Type\\n                   Types.Adt {\\n                     def_id =\\n                     { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                       path =\\n                       [{ Types.data = (Types.TypeNs \\\"ossl_provider_st\\\");\\n                          disambiguator = 0 }\\n                         ]\\n                       };\\n                     generic_args = []; trait_refs = []})\\n                 ]\\n               }\\n             }\\n            ]})\\n      ];\\n    trait_refs =\\n    [{ Types.args = [];\\n       impl =\\n       Types.Builtin {\\n         trait =\\n         { Types.def_id =\\n           { Types.index = (2, 26413); krate = \\\"core\\\";\\n             path =\\n             [{ Types.data = (Types.TypeNs \\\"marker\\\"); disambiguator = 0 };\\n               { Types.data = (Types.TypeNs \\\"Sized\\\"); disambiguator = 0 }]\\n             };\\n           generic_args =\\n           [(Types.Type\\n               Types.Adt {\\n                 def_id =\\n                 { Types.index = (0, 628); krate = \\\"sandwich\\\";\\n                   path =\\n                   [{ Types.data = (Types.TypeNs \\\"support\\\");\\n                      disambiguator = 0 };\\n                     { Types.data = (Types.TypeNs \\\"pimpl\\\"); disambiguator = 0\\n                       };\\n                     { Types.data = (Types.TypeNs \\\"Pimpl\\\"); disambiguator = 0\\n                       }\\n                     ]\\n                   };\\n                 generic_args =\\n                 [(Types.Lifetime { Types.kind = Types.ReErased });\\n                   (Types.Type\\n                      Types.Adt {\\n                        def_id =\\n                        { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"ossl_provider_st\\\");\\n                             disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args = []; trait_refs = []})\\n                   ];\\n                 trait_refs =\\n                 [{ Types.args = [];\\n                    impl =\\n                    Types.Builtin {\\n                      trait =\\n                      { Types.def_id =\\n                        { Types.index = (2, 26413); krate = \\\"core\\\";\\n                          path =\\n                          [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                             disambiguator = 0 };\\n                            { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                              disambiguator = 0 }\\n                            ]\\n                          };\\n                        generic_args =\\n                        [(Types.Type\\n                            Types.Adt {\\n                              def_id =\\n                              { Types.index = (27, 20845);\\n                                krate = \\\"openssl3\\\";\\n                                path =\\n                                [{ Types.data =\\n                                   (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                   disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []; trait_refs = []})\\n                          ]\\n                        }};\\n                    trait =\\n                    { Types.def_id =\\n                      { Types.index = (2, 26413); krate = \\\"core\\\";\\n                        path =\\n                        [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                           disambiguator = 0 };\\n                          { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                            disambiguator = 0 }\\n                          ]\\n                        };\\n                      generic_args =\\n                      [(Types.Type\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                              path =\\n                              [{ Types.data =\\n                                 (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []; trait_refs = []})\\n                        ]\\n                      }\\n                    }\\n                   ]})\\n             ]\\n           }};\\n       trait =\\n       { Types.def_id =\\n         { Types.index = (2, 26413); krate = \\\"core\\\";\\n           path =\\n           [{ Types.data = (Types.TypeNs \\\"marker\\\"); disambiguator = 0 };\\n             { Types.data = (Types.TypeNs \\\"Sized\\\"); disambiguator = 0 }]\\n           };\\n         generic_args =\\n         [(Types.Type\\n             Types.Adt {\\n               def_id =\\n               { Types.index = (0, 628); krate = \\\"sandwich\\\";\\n                 path =\\n                 [{ Types.data = (Types.TypeNs \\\"support\\\"); disambiguator = 0\\n                    };\\n                   { Types.data = (Types.TypeNs \\\"pimpl\\\"); disambiguator = 0 };\\n                   { Types.data = (Types.TypeNs \\\"Pimpl\\\"); disambiguator = 0 }\\n                   ]\\n                 };\\n               generic_args =\\n               [(Types.Lifetime { Types.kind = Types.ReErased });\\n                 (Types.Type\\n                    Types.Adt {\\n                      def_id =\\n                      { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                        path =\\n                        [{ Types.data = (Types.TypeNs \\\"ossl_provider_st\\\");\\n                           disambiguator = 0 }\\n                          ]\\n                        };\\n                      generic_args = []; trait_refs = []})\\n                 ];\\n               trait_refs =\\n               [{ Types.args = [];\\n                  impl =\\n                  Types.Builtin {\\n                    trait =\\n                    { Types.def_id =\\n                      { Types.index = (2, 26413); krate = \\\"core\\\";\\n                        path =\\n                        [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                           disambiguator = 0 };\\n                          { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                            disambiguator = 0 }\\n                          ]\\n                        };\\n                      generic_args =\\n                      [(Types.Type\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                              path =\\n                              [{ Types.data =\\n                                 (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []; trait_refs = []})\\n                        ]\\n                      }};\\n                  trait =\\n                  { Types.def_id =\\n                    { Types.index = (2, 26413); krate = \\\"core\\\";\\n                      path =\\n                      [{ Types.data = (Types.TypeNs \\\"marker\\\");\\n                         disambiguator = 0 };\\n                        { Types.data = (Types.TypeNs \\\"Sized\\\");\\n                          disambiguator = 0 }\\n                        ]\\n                      };\\n                    generic_args =\\n                    [(Types.Type\\n                        Types.Adt {\\n                          def_id =\\n                          { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                            path =\\n                            [{ Types.data = (Types.TypeNs \\\"ossl_provider_st\\\");\\n                               disambiguator = 0 }\\n                              ]\\n                            };\\n                          generic_args = []; trait_refs = []})\\n                      ]\\n                    }\\n                  }\\n                 ]})\\n           ]\\n         }\\n       }\\n      ]}\\n  }\",\n                                ),\n                                (|_| {\n                                    {\n                                        Tuple2(\n                                            sandwich_proto::errors::SystemError_SYSTEMERROR_BACKEND(),\n                                            {\n                                                let res: alloc::string::t_String = {\n                                                    alloc::fmt::format(\n                                                        core::fmt::impl_2__new_v1::<\n                                                            lifetime!(something),\n                                                            generic_value!(todo),\n                                                            generic_value!(todo),\n                                                        >(\n                                                            &(deref(&([\"failed to load provider: \"]))),\n                                                            &(deref(\n                                                                &([\n                                                                    core::fmt::rt::impl_1__new_display::<\n                                                                        lifetime!(something),\n                                                                        alloc::string::t_String,\n                                                                    >(\n                                                                        &(deref(\n                                                                            &(sandwich::implementation::openssl3::support::errstr(\n                                                                                Tuple0,\n                                                                            )),\n                                                                        )),\n                                                                    ),\n                                                                ]),\n                                                            )),\n                                                        ),\n                                                    )\n                                                };\n                                                { res }\n                                            },\n                                        )\n                                    }\n                                }),\n                            ),\n                        )) {\n                            core::ops::control_flow::ControlFlow_Break(residual) => {\n                                rust_primitives::hax::never_to_any(\n                                    (return core::ops::try_trait::f_from_residual(residual)),\n                                )\n                            }\n                            core::ops::control_flow::ControlFlow_Continue(val) => val,\n                        })\n                    };\n                    {\n                        core::result::Result_Ok(\n                            sandwich::implementation::openssl3::Provider(provider),\n                        )\n                    }\n                }\n                _ => {\n                    let _: rust_primitives::hax::t_Never = {\n                        (return core::result::Result_Err(\n                            core::convert::f_into(\n                                Tuple2(\n                                    sandwich_proto::errors::SystemError_SYSTEMERROR_BACKEND(),\n                                    \"missing library context for provider\",\n                                ),\n                            ),\n                        ))\n                    };\n                    Tuple0\n                }\n            })\n        }\n        _ => {\n            let _: rust_primitives::hax::t_Never = {\n                (return core::result::Result_Err(\n                    core::convert::f_into(\n                        Tuple2(\n                            sandwich_proto::errors::SystemError_SYSTEMERROR_BACKEND(),\n                            \"missing name for provider\",\n                        ),\n                    ),\n                ))\n            };\n            Tuple0\n        }\n    })"

let impl_3__as_nonnull (self: t_LibCtx) =
  Sandwich.Support.Pimpl.impl_2__as_nonnull #Openssl3.t_ossl_lib_ctx_st self.f_lib_ctx

let impl_3__try_new (_: Prims.unit) =
  Rust_primitives.Hax.Control_flow_monad.Mexception.run (match
        Core.Option.impl__ok_or #(Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_ossl_lib_ctx_st)
          #(Sandwich_proto.Errors.t_SystemError & string)
          (Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
              "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Call {args = []; bounds_impls = [];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real\n                        (Types.LocalPath\n                           \"rust/implementation/openssl3/mod.rs\"));\n                     hi = { Types.col = \"51\"; line = \"134\" };\n                     lo = { Types.col = \"23\"; line = \"134\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (27, 12240); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = Types.ForeignMod;\n                            disambiguator = 491 };\n                           { Types.data = (Types.ValueNs \"OSSL_LIB_CTX_new\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3/mod.rs\"));\n                       hi = { Types.col = \"49\"; line = \"134\" };\n                       lo = { Types.col = \"23\"; line = \"134\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi =\n                            Types.Abi {todo = \"C { unwind: false }\"};\n                            c_variadic = false; inputs = [];\n                            output =\n                            (Types.RawPtr\n                               (Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 21556);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"ossl_lib_ctx_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                true));\n                            safety = Types.Unsafe }\n                          })\n                     };\n                   generic_args = []; trait = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi =\n                          Types.Abi {todo = \"C { unwind: false }\"};\n                          c_variadic = false; inputs = [];\n                          output =\n                          (Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 21556);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data =\n                                     (Types.TypeNs \"ossl_lib_ctx_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true));\n                          safety = Types.Unsafe }\n                        })};\n                 hir_id = (Some (\"543\", \"12\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      (Types.LocalPath \"rust/implementation/openssl3/mod.rs\"));\n                   hi = { Types.col = \"51\"; line = \"134\" };\n                   lo = { Types.col = \"23\"; line = \"134\" } };\n                 ty =\n                 (Types.RawPtr\n                    (Types.Adt {\n                       def_id =\n                       { Types.index = (27, 21556); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"ossl_lib_ctx_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []},\n                     true))\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.PointerCoercion {\n                    cast = (Types.ClosureFnPointer Types.Safe);\n                    source =\n                    { Types.attributes = [];\n                      contents =\n                      Types.Closure {\n                        body =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Block {expr = None;\n                            region_scope =\n                            { Types.data = Types.Node; id = \"27\" };\n                            safety_mode = Types.Safe;\n                            span =\n                            { Types.filename =\n                              (Types.Real\n                                 (Types.LocalPath\n                                    \"rust/implementation/openssl3/mod.rs\"));\n                              hi = { Types.col = \"13\"; line = \"136\" };\n                              lo = { Types.col = \"59\"; line = \"134\" } };\n                            stmts =\n                            [{ Types.kind =\n                               Types.Expr {\n                                 expr =\n                                 { Types.attributes = [];\n                                   contents =\n                                   Types.Call {\n                                     args =\n                                     [{ Types.attributes = [];\n                                        contents =\n                                        Types.VarRef {\n                                          id =\n                                          { Types.id =\n                                            { Types.local_id = \"18\";\n                                              owner =\n                                              { Types.index = (0, 543);\n                                                krate = \"sandwich\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs\n                                                      \"implementation\");\n                                                   disambiguator = 0 };\n                                                  { Types.data =\n                                                    (Types.TypeNs \"openssl3\");\n                                                    disambiguator = 0 };\n                                                  { Types.data = Types.Impl;\n                                                    disambiguator = 3 };\n                                                  { Types.data =\n                                                    (Types.ValueNs \"try_new\");\n                                                    disambiguator = 0 }\n                                                  ]\n                                                }\n                                              };\n                                            name = \"ptr\" }};\n                                        hir_id = (Some (\"543\", \"24\"));\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath\n                                                \"rust/implementation/openssl3/mod.rs\"));\n                                          hi =\n                                          { Types.col = \"47\"; line = \"135\" };\n                                          lo =\n                                          { Types.col = \"44\"; line = \"135\" }\n                                          };\n                                        ty =\n                                        (Types.RawPtr\n                                           (Types.Adt {\n                                              def_id =\n                                              { Types.index = (27, 21556);\n                                                krate = \"openssl3\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs\n                                                      \"ossl_lib_ctx_st\");\n                                                   disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = [];\n                                              trait_refs = []},\n                                            true))\n                                        }\n                                       ];\n                                     bounds_impls = [];\n                                     fn_span =\n                                     { Types.filename =\n                                       (Types.Real\n                                          (Types.LocalPath\n                                             \"rust/implementation/openssl3/mod.rs\"));\n                                       hi =\n                                       { Types.col = \"48\"; line = \"135\" };\n                                       lo =\n                                       { Types.col = \"16\"; line = \"135\" } };\n                                     from_hir_call = true;\n                                     fun' =\n                                     { Types.attributes = [];\n                                       contents =\n                                       Types.GlobalName {\n                                         id =\n                                         { Types.index = (27, 12248);\n                                           krate = \"openssl3\";\n                                           path =\n                                           [{ Types.data = Types.ForeignMod;\n                                              disambiguator = 495 };\n                                             { Types.data =\n                                               (Types.ValueNs\n                                                  \"OSSL_LIB_CTX_free\");\n                                               disambiguator = 0 }\n                                             ]\n                                           }};\n                                       hir_id = None;\n                                       span =\n                                       { Types.filename =\n                                         (Types.Real\n                                            (Types.LocalPath\n                                               \"rust/implementation/openssl3/mod.rs\"));\n                                         hi =\n                                         { Types.col = \"43\"; line = \"135\" };\n                                         lo =\n                                         { Types.col = \"16\"; line = \"135\" } };\n                                       ty =\n                                       (Types.Arrow\n                                          { Types.bound_vars = [];\n                                            value =\n                                            { Types.abi =\n                                              Types.Abi {\n                                                todo = \"C { unwind: false }\"};\n                                              c_variadic = false;\n                                              inputs =\n                                              [(Types.RawPtr\n                                                  (Types.Adt {\n                                                     def_id =\n                                                     { Types.index =\n                                                       (27, 21556);\n                                                       krate = \"openssl3\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs\n                                                             \"ossl_lib_ctx_st\");\n                                                          disambiguator = 0 }\n                                                         ]\n                                                       };\n                                                     generic_args = [];\n                                                     trait_refs = []},\n                                                   true))\n                                                ];\n                                              output = (Types.Tuple []);\n                                              safety = Types.Unsafe }\n                                            })\n                                       };\n                                     generic_args = []; trait = None;\n                                     ty =\n                                     (Types.Arrow\n                                        { Types.bound_vars = [];\n                                          value =\n                                          { Types.abi =\n                                            Types.Abi {\n                                              todo = \"C { unwind: false }\"};\n                                            c_variadic = false;\n                                            inputs =\n                                            [(Types.RawPtr\n                                                (Types.Adt {\n                                                   def_id =\n                                                   { Types.index =\n                                                     (27, 21556);\n                                                     krate = \"openssl3\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"ossl_lib_ctx_st\");\n                                                        disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = [];\n                                                   trait_refs = []},\n                                                 true))\n                                              ];\n                                            output = (Types.Tuple []);\n                                            safety = Types.Unsafe }\n                                          })};\n                                   hir_id = (Some (\"543\", \"20\"));\n                                   span =\n                                   { Types.filename =\n                                     (Types.Real\n                                        (Types.LocalPath\n                                           \"rust/implementation/openssl3/mod.rs\"));\n                                     hi = { Types.col = \"48\"; line = \"135\" };\n                                     lo = { Types.col = \"16\"; line = \"135\" }\n                                     };\n                                   ty = (Types.Tuple []) };\n                                 scope =\n                                 { Types.data = Types.Node; id = \"26\" }}\n                               }\n                              ];\n                            targeted_by_break = false};\n                          hir_id = (Some (\"543\", \"19\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3/mod.rs\"));\n                            hi = { Types.col = \"13\"; line = \"136\" };\n                            lo = { Types.col = \"59\"; line = \"134\" } };\n                          ty = (Types.Tuple []) };\n                        movability = None;\n                        params =\n                        [{ Types.attributes = []; hir_id = None; pat = None;\n                           self_kind = None;\n                           ty =\n                           (Types.Ref\n                              ({ Types.kind = Types.ReErased },\n                               (Types.Arrow\n                                  { Types.bound_vars = [];\n                                    value =\n                                    { Types.abi = Types.Abi {todo = \"Rust\"};\n                                      c_variadic = false;\n                                      inputs =\n                                      [(Types.RawPtr\n                                          (Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 21556);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs\n                                                     \"ossl_lib_ctx_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []},\n                                           true))\n                                        ];\n                                      output = (Types.Tuple []);\n                                      safety = Types.Safe }\n                                    }),\n                               false));\n                           ty_span = None };\n                          { Types.attributes = [];\n                            hir_id =\n                            (Some { Types.local_id = \"17\";\n                                    owner =\n                                    { Types.index = (0, 543);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"implementation\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"openssl3\");\n                                          disambiguator = 0 };\n                                        { Types.data = Types.Impl;\n                                          disambiguator = 3 };\n                                        { Types.data =\n                                          (Types.ValueNs \"try_new\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    });\n                            pat =\n                            (Some { Types.attributes = [];\n                                    contents =\n                                    Types.Binding {is_primary = true;\n                                      mode =\n                                      { Types.by_ref = Types.No;\n                                        mutability = false };\n                                      subpattern = None;\n                                      ty =\n                                      (Types.RawPtr\n                                         (Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 21556);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs\n                                                    \"ossl_lib_ctx_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []},\n                                          true));\n                                      var =\n                                      { Types.id =\n                                        { Types.local_id = \"18\";\n                                          owner =\n                                          { Types.index = (0, 543);\n                                            krate = \"sandwich\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs \"implementation\");\n                                               disambiguator = 0 };\n                                              { Types.data =\n                                                (Types.TypeNs \"openssl3\");\n                                                disambiguator = 0 };\n                                              { Types.data = Types.Impl;\n                                                disambiguator = 3 };\n                                              { Types.data =\n                                                (Types.ValueNs \"try_new\");\n                                                disambiguator = 0 }\n                                              ]\n                                            }\n                                          };\n                                        name = \"ptr\" }};\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath\n                                            \"rust/implementation/openssl3/mod.rs\"));\n                                      hi = { Types.col = \"57\"; line = \"134\" };\n                                      lo = { Types.col = \"54\"; line = \"134\" }\n                                      };\n                                    ty =\n                                    (Types.RawPtr\n                                       (Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 21556);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs\n                                                  \"ossl_lib_ctx_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []},\n                                        true))\n                                    });\n                            self_kind = None;\n                            ty =\n                            (Types.RawPtr\n                               (Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 21556);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"ossl_lib_ctx_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                true));\n                            ty_span = None }\n                          ];\n                        upvars = []};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3/mod.rs\"));\n                        hi = { Types.col = \"13\"; line = \"136\" };\n                        lo = { Types.col = \"53\"; line = \"134\" } };\n                      ty =\n                      (Types.Arrow\n                         { Types.bound_vars = [];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [(Types.RawPtr\n                                 (Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 21556);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"ossl_lib_ctx_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []},\n                                  true))\n                               ];\n                             output = (Types.Tuple []); safety = Types.Safe }\n                           })\n                      }};\n                  hir_id = (Some (\"543\", \"16\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath \"rust/implementation/openssl3/mod.rs\"));\n                    hi = { Types.col = \"13\"; line = \"136\" };\n                    lo = { Types.col = \"53\"; line = \"134\" } };\n                  ty =\n                  (Types.Arrow\n                     { Types.bound_vars = [];\n                       value =\n                       { Types.abi = Types.Abi {todo = \"Rust\"};\n                         c_variadic = false;\n                         inputs =\n                         [(Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 21556);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data =\n                                     (Types.TypeNs \"ossl_lib_ctx_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true))\n                           ];\n                         output = (Types.Tuple []); safety = Types.Safe }\n                       })\n                  }\n                ];\n              bounds_impls = [];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath \"rust/implementation/openssl3/mod.rs\"));\n                hi = { Types.col = \"14\"; line = \"136\" };\n                lo = { Types.col = \"12\"; line = \"134\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (0, 642); krate = \"sandwich\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"support\");\n                       disambiguator = 0 };\n                      { Types.data = (Types.TypeNs \"pimpl\");\n                        disambiguator = 0 };\n                      { Types.data = Types.Impl; disambiguator = 2 };\n                      { Types.data = (Types.ValueNs \"new\"); disambiguator = 0\n                        }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath \"rust/implementation/openssl3/mod.rs\"));\n                  hi = { Types.col = \"22\"; line = \"134\" };\n                  lo = { Types.col = \"12\"; line = \"134\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"Rust\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           (Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21556);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data =\n                                   (Types.TypeNs \"ossl_lib_ctx_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []},\n                            true));\n                         (Types.Arrow\n                            { Types.bound_vars = [];\n                              value =\n                              { Types.abi = Types.Abi {todo = \"Rust\"};\n                                c_variadic = false;\n                                inputs =\n                                [(Types.RawPtr\n                                    (Types.Adt {\n                                       def_id =\n                                       { Types.index = (27, 21556);\n                                         krate = \"openssl3\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"ossl_lib_ctx_st\");\n                                            disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []; trait_refs = []},\n                                     true))\n                                  ];\n                                output = (Types.Tuple []);\n                                safety = Types.Safe }\n                              })\n                         ];\n                       output =\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (2, 36174); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"option\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Option\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (0, 628); krate = \"sandwich\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"support\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"pimpl\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"Pimpl\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Lifetime\n                                   { Types.kind = Types.ReErased });\n                                 (Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 21556);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"ossl_lib_ctx_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                 ];\n                               trait_refs =\n                               [{ Types.args = [];\n                                  impl =\n                                  Types.Builtin {\n                                    trait =\n                                    { Types.def_id =\n                                      { Types.index = (2, 26413);\n                                        krate = \"core\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"marker\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"Sized\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Type\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 21556);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs\n                                                    \"ossl_lib_ctx_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []})\n                                        ]\n                                      }};\n                                  trait =\n                                  { Types.def_id =\n                                    { Types.index = (2, 26413);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"marker\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Sized\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 21556);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs\n                                                  \"ossl_lib_ctx_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []})\n                                      ]\n                                    }\n                                  }\n                                 ]})\n                           ];\n                         trait_refs =\n                         [{ Types.args = [];\n                            impl =\n                            Types.Builtin {\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (0, 628);\n                                        krate = \"sandwich\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"support\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"pimpl\");\n                                            disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"Pimpl\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Lifetime\n                                          { Types.kind = Types.ReErased });\n                                        (Types.Type\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 21556);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs\n                                                     \"ossl_lib_ctx_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []})\n                                        ];\n                                      trait_refs =\n                                      [{ Types.args = [];\n                                         impl =\n                                         Types.Builtin {\n                                           trait =\n                                           { Types.def_id =\n                                             { Types.index = (2, 26413);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"marker\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"Sized\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args =\n                                             [(Types.Type\n                                                 Types.Adt {\n                                                   def_id =\n                                                   { Types.index =\n                                                     (27, 21556);\n                                                     krate = \"openssl3\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"ossl_lib_ctx_st\");\n                                                        disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = [];\n                                                   trait_refs = []})\n                                               ]\n                                             }};\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 26413);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 21556);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs\n                                                         \"ossl_lib_ctx_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ]\n                                           }\n                                         }\n                                        ]})\n                                  ]\n                                }};\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 26413); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"marker\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Sized\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 628);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"support\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"pimpl\");\n                                          disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Pimpl\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Lifetime\n                                        { Types.kind = Types.ReErased });\n                                      (Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 21556);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs\n                                                   \"ossl_lib_ctx_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []})\n                                      ];\n                                    trait_refs =\n                                    [{ Types.args = [];\n                                       impl =\n                                       Types.Builtin {\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 26413);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 21556);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs\n                                                         \"ossl_lib_ctx_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ]\n                                           }};\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 26413);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 21556);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs\n                                                       \"ossl_lib_ctx_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                           ]\n                                         }\n                                       }\n                                      ]})\n                                ]\n                              }\n                            }\n                           ]};\n                       safety = Types.Unsafe }\n                     })\n                };\n              generic_args =\n              [(Types.Lifetime { Types.kind = Types.ReErased });\n                (Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (27, 21556); krate = \"openssl3\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"ossl_lib_ctx_st\");\n                          disambiguator = 0 }\n                         ]\n                       };\n                     generic_args = []; trait_refs = []})\n                ];\n              trait = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         (Types.Adt {\n                            def_id =\n                            { Types.index = (27, 21556); krate = \"openssl3\";\n                              path =\n                              [{ Types.data =\n                                 (Types.TypeNs \"ossl_lib_ctx_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []},\n                          true));\n                       (Types.Arrow\n                          { Types.bound_vars = [];\n                            value =\n                            { Types.abi = Types.Abi {todo = \"Rust\"};\n                              c_variadic = false;\n                              inputs =\n                              [(Types.RawPtr\n                                  (Types.Adt {\n                                     def_id =\n                                     { Types.index = (27, 21556);\n                                       krate = \"openssl3\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"ossl_lib_ctx_st\");\n                                          disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []},\n                                   true))\n                                ];\n                              output = (Types.Tuple []); safety = Types.Safe\n                              }\n                            })\n                       ];\n                     output =\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (2, 36174); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"option\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"Option\");\n                             disambiguator = 0 }\n                           ]\n                         };\n                       generic_args =\n                       [(Types.Type\n                           Types.Adt {\n                             def_id =\n                             { Types.index = (0, 628); krate = \"sandwich\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"support\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"pimpl\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"Pimpl\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Lifetime { Types.kind = Types.ReErased });\n                               (Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 21556);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"ossl_lib_ctx_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []})\n                               ];\n                             trait_refs =\n                             [{ Types.args = [];\n                                impl =\n                                Types.Builtin {\n                                  trait =\n                                  { Types.def_id =\n                                    { Types.index = (2, 26413);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"marker\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Sized\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type\n                                        Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 21556);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs\n                                                  \"ossl_lib_ctx_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []})\n                                      ]\n                                    }};\n                                trait =\n                                { Types.def_id =\n                                  { Types.index = (2, 26413); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"marker\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Sized\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (27, 21556);\n                                          krate = \"openssl3\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"ossl_lib_ctx_st\");\n                                             disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []; trait_refs = []})\n                                    ]\n                                  }\n                                }\n                               ]})\n                         ];\n                       trait_refs =\n                       [{ Types.args = [];\n                          impl =\n                          Types.Builtin {\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 26413); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"marker\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Sized\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (0, 628);\n                                      krate = \"sandwich\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"support\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"pimpl\");\n                                          disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"Pimpl\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Lifetime\n                                        { Types.kind = Types.ReErased });\n                                      (Types.Type\n                                         Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 21556);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs\n                                                   \"ossl_lib_ctx_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []})\n                                      ];\n                                    trait_refs =\n                                    [{ Types.args = [];\n                                       impl =\n                                       Types.Builtin {\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 26413);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 21556);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs\n                                                         \"ossl_lib_ctx_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ]\n                                           }};\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 26413);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 21556);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs\n                                                       \"ossl_lib_ctx_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                           ]\n                                         }\n                                       }\n                                      ]})\n                                ]\n                              }};\n                          trait =\n                          { Types.def_id =\n                            { Types.index = (2, 26413); krate = \"core\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"marker\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"Sized\");\n                                  disambiguator = 0 }\n                                ]\n                              };\n                            generic_args =\n                            [(Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (0, 628);\n                                    krate = \"sandwich\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"support\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"pimpl\");\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Pimpl\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Lifetime\n                                      { Types.kind = Types.ReErased });\n                                    (Types.Type\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.index = (27, 21556);\n                                           krate = \"openssl3\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"ossl_lib_ctx_st\");\n                                              disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args = []; trait_refs = []})\n                                    ];\n                                  trait_refs =\n                                  [{ Types.args = [];\n                                     impl =\n                                     Types.Builtin {\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 26413);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 21556);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs\n                                                       \"ossl_lib_ctx_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                           ]\n                                         }};\n                                     trait =\n                                     { Types.def_id =\n                                       { Types.index = (2, 26413);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"marker\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"Sized\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args =\n                                       [(Types.Type\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 21556);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs\n                                                     \"ossl_lib_ctx_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []})\n                                         ]\n                                       }\n                                     }\n                                    ]})\n                              ]\n                            }\n                          }\n                         ]};\n                     safety = Types.Unsafe }\n                   })};\n            hir_id = (Some (\"543\", \"6\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 (Types.LocalPath \"rust/implementation/openssl3/mod.rs\"));\n              hi = { Types.col = \"14\"; line = \"136\" };\n              lo = { Types.col = \"12\"; line = \"134\" } };\n            ty =\n            Types.Adt {\n              def_id =\n              { Types.index = (2, 36174); krate = \"core\";\n                path =\n                [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0 };\n                  { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0 }\n                  ]\n                };\n              generic_args =\n              [(Types.Type\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (0, 628); krate = \"sandwich\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"support\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"pimpl\");\n                          disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Pimpl\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Lifetime { Types.kind = Types.ReErased });\n                      (Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (27, 21556); krate = \"openssl3\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"ossl_lib_ctx_st\");\n                                disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []; trait_refs = []})\n                      ];\n                    trait_refs =\n                    [{ Types.args = [];\n                       impl =\n                       Types.Builtin {\n                         trait =\n                         { Types.def_id =\n                           { Types.index = (2, 26413); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"marker\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Sized\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Type\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (27, 21556);\n                                   krate = \"openssl3\";\n                                   path =\n                                   [{ Types.data =\n                                      (Types.TypeNs \"ossl_lib_ctx_st\");\n                                      disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args = []; trait_refs = []})\n                             ]\n                           }};\n                       trait =\n                       { Types.def_id =\n                         { Types.index = (2, 26413); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"marker\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Sized\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (27, 21556);\n                                 krate = \"openssl3\";\n                                 path =\n                                 [{ Types.data =\n                                    (Types.TypeNs \"ossl_lib_ctx_st\");\n                                    disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args = []; trait_refs = []})\n                           ]\n                         }\n                       }\n                      ]})\n                ];\n              trait_refs =\n              [{ Types.args = [];\n                 impl =\n                 Types.Builtin {\n                   trait =\n                   { Types.def_id =\n                     { Types.index = (2, 26413); krate = \"core\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"marker\");\n                          disambiguator = 0 };\n                         { Types.data = (Types.TypeNs \"Sized\");\n                           disambiguator = 0 }\n                         ]\n                       };\n                     generic_args =\n                     [(Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (0, 628); krate = \"sandwich\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"support\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"pimpl\");\n                                 disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Pimpl\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Lifetime { Types.kind = Types.ReErased });\n                             (Types.Type\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 21556);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"ossl_lib_ctx_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []})\n                             ];\n                           trait_refs =\n                           [{ Types.args = [];\n                              impl =\n                              Types.Builtin {\n                                trait =\n                                { Types.def_id =\n                                  { Types.index = (2, 26413); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"marker\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Sized\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (27, 21556);\n                                          krate = \"openssl3\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"ossl_lib_ctx_st\");\n                                             disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []; trait_refs = []})\n                                    ]\n                                  }};\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 21556);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"ossl_lib_ctx_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                  ]\n                                }\n                              }\n                             ]})\n                       ]\n                     }};\n                 trait =\n                 { Types.def_id =\n                   { Types.index = (2, 26413); krate = \"core\";\n                     path =\n                     [{ Types.data = (Types.TypeNs \"marker\");\n                        disambiguator = 0 };\n                       { Types.data = (Types.TypeNs \"Sized\");\n                         disambiguator = 0 }\n                       ]\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (0, 628); krate = \"sandwich\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"support\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"pimpl\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Pimpl\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Lifetime { Types.kind = Types.ReErased });\n                           (Types.Type\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (27, 21556);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data =\n                                     (Types.TypeNs \"ossl_lib_ctx_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []})\n                           ];\n                         trait_refs =\n                         [{ Types.args = [];\n                            impl =\n                            Types.Builtin {\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 21556);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"ossl_lib_ctx_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []})\n                                  ]\n                                }};\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 26413); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"marker\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Sized\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (27, 21556);\n                                      krate = \"openssl3\";\n                                      path =\n                                      [{ Types.data =\n                                         (Types.TypeNs \"ossl_lib_ctx_st\");\n                                         disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args = []; trait_refs = []})\n                                ]\n                              }\n                            }\n                           ]})\n                     ]\n                   }\n                 }\n                ]}\n            });\n    region_scope = { Types.data = Types.Node; id = \"29\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real (Types.LocalPath \"rust/implementation/openssl3/mod.rs\"));\n      hi = { Types.col = \"9\"; line = \"137\" };\n      lo = { Types.col = \"21\"; line = \"133\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"543\", \"5\"));\n  span =\n  { Types.filename =\n    (Types.Real (Types.LocalPath \"rust/implementation/openssl3/mod.rs\"));\n    hi = { Types.col = \"9\"; line = \"137\" };\n    lo = { Types.col = \"21\"; line = \"133\" } };\n  ty =\n  Types.Adt {\n    def_id =\n    { Types.index = (2, 36174); krate = \"core\";\n      path =\n      [{ Types.data = (Types.TypeNs \"option\"); disambiguator = 0 };\n        { Types.data = (Types.TypeNs \"Option\"); disambiguator = 0 }]\n      };\n    generic_args =\n    [(Types.Type\n        Types.Adt {\n          def_id =\n          { Types.index = (0, 628); krate = \"sandwich\";\n            path =\n            [{ Types.data = (Types.TypeNs \"support\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"pimpl\"); disambiguator = 0 };\n              { Types.data = (Types.TypeNs \"Pimpl\"); disambiguator = 0 }]\n            };\n          generic_args =\n          [(Types.Lifetime { Types.kind = Types.ReErased });\n            (Types.Type\n               Types.Adt {\n                 def_id =\n                 { Types.index = (27, 21556); krate = \"openssl3\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"ossl_lib_ctx_st\");\n                      disambiguator = 0 }\n                     ]\n                   };\n                 generic_args = []; trait_refs = []})\n            ];\n          trait_refs =\n          [{ Types.args = [];\n             impl =\n             Types.Builtin {\n               trait =\n               { Types.def_id =\n                 { Types.index = (2, 26413); krate = \"core\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0\n                      };\n                     { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0\n                       }\n                     ]\n                   };\n                 generic_args =\n                 [(Types.Type\n                     Types.Adt {\n                       def_id =\n                       { Types.index = (27, 21556); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"ossl_lib_ctx_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []})\n                   ]\n                 }};\n             trait =\n             { Types.def_id =\n               { Types.index = (2, 26413); krate = \"core\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0 }\n                   ]\n                 };\n               generic_args =\n               [(Types.Type\n                   Types.Adt {\n                     def_id =\n                     { Types.index = (27, 21556); krate = \"openssl3\";\n                       path =\n                       [{ Types.data = (Types.TypeNs \"ossl_lib_ctx_st\");\n                          disambiguator = 0 }\n                         ]\n                       };\n                     generic_args = []; trait_refs = []})\n                 ]\n               }\n             }\n            ]})\n      ];\n    trait_refs =\n    [{ Types.args = [];\n       impl =\n       Types.Builtin {\n         trait =\n         { Types.def_id =\n           { Types.index = (2, 26413); krate = \"core\";\n             path =\n             [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0 };\n               { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0 }]\n             };\n           generic_args =\n           [(Types.Type\n               Types.Adt {\n                 def_id =\n                 { Types.index = (0, 628); krate = \"sandwich\";\n                   path =\n                   [{ Types.data = (Types.TypeNs \"support\");\n                      disambiguator = 0 };\n                     { Types.data = (Types.TypeNs \"pimpl\"); disambiguator = 0\n                       };\n                     { Types.data = (Types.TypeNs \"Pimpl\"); disambiguator = 0\n                       }\n                     ]\n                   };\n                 generic_args =\n                 [(Types.Lifetime { Types.kind = Types.ReErased });\n                   (Types.Type\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (27, 21556); krate = \"openssl3\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ossl_lib_ctx_st\");\n                             disambiguator = 0 }\n                            ]\n                          };\n                        generic_args = []; trait_refs = []})\n                   ];\n                 trait_refs =\n                 [{ Types.args = [];\n                    impl =\n                    Types.Builtin {\n                      trait =\n                      { Types.def_id =\n                        { Types.index = (2, 26413); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"marker\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"Sized\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21556);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data =\n                                   (Types.TypeNs \"ossl_lib_ctx_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []})\n                          ]\n                        }};\n                    trait =\n                    { Types.def_id =\n                      { Types.index = (2, 26413); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"marker\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Sized\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (27, 21556); krate = \"openssl3\";\n                              path =\n                              [{ Types.data =\n                                 (Types.TypeNs \"ossl_lib_ctx_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []})\n                        ]\n                      }\n                    }\n                   ]})\n             ]\n           }};\n       trait =\n       { Types.def_id =\n         { Types.index = (2, 26413); krate = \"core\";\n           path =\n           [{ Types.data = (Types.TypeNs \"marker\"); disambiguator = 0 };\n             { Types.data = (Types.TypeNs \"Sized\"); disambiguator = 0 }]\n           };\n         generic_args =\n         [(Types.Type\n             Types.Adt {\n               def_id =\n               { Types.index = (0, 628); krate = \"sandwich\";\n                 path =\n                 [{ Types.data = (Types.TypeNs \"support\"); disambiguator = 0\n                    };\n                   { Types.data = (Types.TypeNs \"pimpl\"); disambiguator = 0 };\n                   { Types.data = (Types.TypeNs \"Pimpl\"); disambiguator = 0 }\n                   ]\n                 };\n               generic_args =\n               [(Types.Lifetime { Types.kind = Types.ReErased });\n                 (Types.Type\n                    Types.Adt {\n                      def_id =\n                      { Types.index = (27, 21556); krate = \"openssl3\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"ossl_lib_ctx_st\");\n                           disambiguator = 0 }\n                          ]\n                        };\n                      generic_args = []; trait_refs = []})\n                 ];\n               trait_refs =\n               [{ Types.args = [];\n                  impl =\n                  Types.Builtin {\n                    trait =\n                    { Types.def_id =\n                      { Types.index = (2, 26413); krate = \"core\";\n                        path =\n                        [{ Types.data = (Types.TypeNs \"marker\");\n                           disambiguator = 0 };\n                          { Types.data = (Types.TypeNs \"Sized\");\n                            disambiguator = 0 }\n                          ]\n                        };\n                      generic_args =\n                      [(Types.Type\n                          Types.Adt {\n                            def_id =\n                            { Types.index = (27, 21556); krate = \"openssl3\";\n                              path =\n                              [{ Types.data =\n                                 (Types.TypeNs \"ossl_lib_ctx_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []})\n                        ]\n                      }};\n                  trait =\n                  { Types.def_id =\n                    { Types.index = (2, 26413); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"marker\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Sized\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        Types.Adt {\n                          def_id =\n                          { Types.index = (27, 21556); krate = \"openssl3\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"ossl_lib_ctx_st\");\n                               disambiguator = 0 }\n                              ]\n                            };\n                          generic_args = []; trait_refs = []})\n                      ]\n                    }\n                  }\n                 ]})\n           ]\n         }\n       }\n      ]}\n  }"

            <:
            Core.Option.t_Option (Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_ossl_lib_ctx_st))
          ((Sandwich_proto.Errors.SystemError_SYSTEMERROR_MEMORY
              <:
              Sandwich_proto.Errors.t_SystemError),
            "failed to create an OSSL_LIB_CTX"
            <:
            (Sandwich_proto.Errors.t_SystemError & string))
        <:
        Core.Result.t_Result (Sandwich.Support.Pimpl.t_Pimpl Openssl3.t_ossl_lib_ctx_st)
          (Sandwich_proto.Errors.t_SystemError & string)
      with
      | Core.Result.Result_Ok libctx ->
        (match
            impl__ProviderBuilder__build (impl__ProviderBuilder__lib_ctx (Rust_primitives.Hax.failure
                      "(RefMut) Fatal error: something we considered as impossible occurred! \027[1mPlease report this by submitting an issue on GitHub!\027[0m\nDetails: expected an arrow type here"
                      "rust_primitives::hax::failure(\n        \"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\n        \"sandwich::implementation::openssl3::impl__ProviderBuilder__name\",\n    )(\n        sandwich::implementation::openssl3::impl__ProviderBuilder__new(Tuple0),\n        rust_primitives::hax::failure(\n            \"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\n            \"sandwich::implementation::openssl3::v_DEFAULT_PROVIDER_NAME_PTR\",\n        ),\n    )"

                    <:
                    t_ProviderBuilder)
                  (Sandwich.Support.Pimpl.impl_2__as_nonnull #Openssl3.t_ossl_lib_ctx_st libctx
                    <:
                    Core.Ptr.Non_null.t_NonNull Openssl3.t_ossl_lib_ctx_st)
                <:
                t_ProviderBuilder)
            <:
            Core.Result.t_Result t_Provider Sandwich.Error.t_Error
          with
          | Core.Result.Result_Ok default_provider ->
            let _:Prims.unit = Std.Env.set_var #string #string "OQSPROV" "1" in
            let _:Prims.unit = () in
            let! _:Prims.unit =
              if
                (Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed."
                    "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.Call {\n                        args =\n                        [{ Types.attributes = [];\n                           contents =\n                           Types.Borrow {\n                             arg =\n                             { Types.attributes = [];\n                               contents =\n                               Types.VarRef {\n                                 id =\n                                 { Types.id =\n                                   { Types.local_id = \"54\";\n                                     owner =\n                                     { Types.index = (0, 543);\n                                       krate = \"sandwich\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"implementation\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"openssl3\");\n                                           disambiguator = 0 };\n                                         { Types.data = Types.Impl;\n                                           disambiguator = 3 };\n                                         { Types.data =\n                                           (Types.ValueNs \"try_new\");\n                                           disambiguator = 0 }\n                                         ]\n                                       }\n                                     };\n                                   name = \"libctx\" }};\n                               hir_id = None;\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath\n                                       \"rust/implementation/openssl3/mod.rs\"));\n                                 hi = { Types.col = \"22\"; line = \"154\" };\n                                 lo = { Types.col = \"16\"; line = \"154\" } };\n                               ty =\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (0, 628);\n                                   krate = \"sandwich\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"support\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"pimpl\");\n                                       disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"Pimpl\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args =\n                                 [(Types.Lifetime\n                                     { Types.kind = Types.ReErased });\n                                   (Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (27, 21556);\n                                          krate = \"openssl3\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"ossl_lib_ctx_st\");\n                                             disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []; trait_refs = []})\n                                   ];\n                                 trait_refs =\n                                 [{ Types.args = [];\n                                    impl =\n                                    Types.Builtin {\n                                      trait =\n                                      { Types.def_id =\n                                        { Types.index = (2, 26413);\n                                          krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"marker\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Sized\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args =\n                                        [(Types.Type\n                                            Types.Adt {\n                                              def_id =\n                                              { Types.index = (27, 21556);\n                                                krate = \"openssl3\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs\n                                                      \"ossl_lib_ctx_st\");\n                                                   disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = [];\n                                              trait_refs = []})\n                                          ]\n                                        }};\n                                    trait =\n                                    { Types.def_id =\n                                      { Types.index = (2, 26413);\n                                        krate = \"core\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"marker\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"Sized\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Type\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 21556);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs\n                                                    \"ossl_lib_ctx_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []})\n                                        ]\n                                      }\n                                    }\n                                   ]}\n                               };\n                             borrow_kind = Types.Shared};\n                           hir_id = (Some (\"543\", \"115\"));\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath\n                                   \"rust/implementation/openssl3/mod.rs\"));\n                             hi = { Types.col = \"22\"; line = \"154\" };\n                             lo = { Types.col = \"16\"; line = \"154\" } };\n                           ty =\n                           (Types.Ref\n                              ({ Types.kind = Types.ReErased },\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (0, 628);\n                                   krate = \"sandwich\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"support\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"pimpl\");\n                                       disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"Pimpl\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args =\n                                 [(Types.Lifetime\n                                     { Types.kind = Types.ReErased });\n                                   (Types.Type\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (27, 21556);\n                                          krate = \"openssl3\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"ossl_lib_ctx_st\");\n                                             disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args = []; trait_refs = []})\n                                   ];\n                                 trait_refs =\n                                 [{ Types.args = [];\n                                    impl =\n                                    Types.Builtin {\n                                      trait =\n                                      { Types.def_id =\n                                        { Types.index = (2, 26413);\n                                          krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"marker\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Sized\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args =\n                                        [(Types.Type\n                                            Types.Adt {\n                                              def_id =\n                                              { Types.index = (27, 21556);\n                                                krate = \"openssl3\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs\n                                                      \"ossl_lib_ctx_st\");\n                                                   disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = [];\n                                              trait_refs = []})\n                                          ]\n                                        }};\n                                    trait =\n                                    { Types.def_id =\n                                      { Types.index = (2, 26413);\n                                        krate = \"core\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"marker\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"Sized\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Type\n                                          Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 21556);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs\n                                                    \"ossl_lib_ctx_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []})\n                                        ]\n                                      }\n                                    }\n                                   ]},\n                               false))\n                           }\n                          ];\n                        bounds_impls = [];\n                        fn_span =\n                        { Types.filename =\n                          (Types.Real\n                             (Types.LocalPath\n                                \"rust/implementation/openssl3/mod.rs\"));\n                          hi = { Types.col = \"35\"; line = \"154\" };\n                          lo = { Types.col = \"23\"; line = \"154\" } };\n                        from_hir_call = true;\n                        fun' =\n                        { Types.attributes = [];\n                          contents =\n                          Types.GlobalName {\n                            id =\n                            { Types.index = (0, 644); krate = \"sandwich\";\n                              path =\n                              [{ Types.data = (Types.TypeNs \"support\");\n                                 disambiguator = 0 };\n                                { Types.data = (Types.TypeNs \"pimpl\");\n                                  disambiguator = 0 };\n                                { Types.data = Types.Impl; disambiguator = 2\n                                  };\n                                { Types.data = (Types.ValueNs \"as_nonnull\");\n                                  disambiguator = 0 }\n                                ]\n                              }};\n                          hir_id = None;\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"rust/implementation/openssl3/mod.rs\"));\n                            hi = { Types.col = \"33\"; line = \"154\" };\n                            lo = { Types.col = \"23\"; line = \"154\" } };\n                          ty =\n                          (Types.Arrow\n                             { Types.bound_vars =\n                               [(Types.Region\n                                   (Types.BrNamed\n                                      ({ Types.index = (0, 1675);\n                                         krate = \"sandwich\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"support\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"pimpl\");\n                                             disambiguator = 0 };\n                                           { Types.data = Types.Impl;\n                                             disambiguator = 2 };\n                                           { Types.data =\n                                             (Types.ValueNs \"as_nonnull\");\n                                             disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.LifetimeNs \"'_\");\n                                             disambiguator = 0 }\n                                           ]\n                                         },\n                                       \"'_\")))\n                                 ];\n                               value =\n                               { Types.abi = Types.Abi {todo = \"Rust\"};\n                                 c_variadic = false;\n                                 inputs =\n                                 [(Types.Ref\n                                     ({ Types.kind =\n                                        (Types.ReBound\n                                           (\"0\",\n                                            { Types.kind =\n                                              (Types.BrNamed\n                                                 ({ Types.index = (0, 1675);\n                                                    krate = \"sandwich\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs\n                                                          \"support\");\n                                                       disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs \"pimpl\");\n                                                        disambiguator = 0 };\n                                                      { Types.data =\n                                                        Types.Impl;\n                                                        disambiguator = 2 };\n                                                      { Types.data =\n                                                        (Types.ValueNs\n                                                           \"as_nonnull\");\n                                                        disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.LifetimeNs\n                                                           \"'_\");\n                                                        disambiguator = 0 }\n                                                      ]\n                                                    },\n                                                  \"'_\"));\n                                              var = \"0\" }))\n                                        },\n                                      Types.Adt {\n                                        def_id =\n                                        { Types.index = (0, 628);\n                                          krate = \"sandwich\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"support\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"pimpl\");\n                                              disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Pimpl\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args =\n                                        [(Types.Lifetime\n                                            { Types.kind = Types.ReErased });\n                                          (Types.Type\n                                             Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 21556);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs\n                                                       \"ossl_lib_ctx_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []})\n                                          ];\n                                        trait_refs =\n                                        [{ Types.args = [];\n                                           impl =\n                                           Types.Builtin {\n                                             trait =\n                                             { Types.def_id =\n                                               { Types.index = (2, 26413);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"marker\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Sized\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args =\n                                               [(Types.Type\n                                                   Types.Adt {\n                                                     def_id =\n                                                     { Types.index =\n                                                       (27, 21556);\n                                                       krate = \"openssl3\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs\n                                                             \"ossl_lib_ctx_st\");\n                                                          disambiguator = 0 }\n                                                         ]\n                                                       };\n                                                     generic_args = [];\n                                                     trait_refs = []})\n                                                 ]\n                                               }};\n                                           trait =\n                                           { Types.def_id =\n                                             { Types.index = (2, 26413);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"marker\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"Sized\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args =\n                                             [(Types.Type\n                                                 Types.Adt {\n                                                   def_id =\n                                                   { Types.index =\n                                                     (27, 21556);\n                                                     krate = \"openssl3\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"ossl_lib_ctx_st\");\n                                                        disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = [];\n                                                   trait_refs = []})\n                                               ]\n                                             }\n                                           }\n                                          ]},\n                                      false))\n                                   ];\n                                 output =\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.index = (2, 2222); krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"ptr\");\n                                        disambiguator = 0 };\n                                       { Types.data =\n                                         (Types.TypeNs \"non_null\");\n                                         disambiguator = 0 };\n                                       { Types.data =\n                                         (Types.TypeNs \"NonNull\");\n                                         disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args =\n                                   [(Types.Type\n                                       Types.Adt {\n                                         def_id =\n                                         { Types.index = (27, 21556);\n                                           krate = \"openssl3\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"ossl_lib_ctx_st\");\n                                              disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args = []; trait_refs = []})\n                                     ];\n                                   trait_refs = []};\n                                 safety = Types.Safe }\n                               })\n                          };\n                        generic_args =\n                        [(Types.Lifetime { Types.kind = Types.ReErased });\n                          (Types.Type\n                             Types.Adt {\n                               def_id =\n                               { Types.index = (27, 21556);\n                                 krate = \"openssl3\";\n                                 path =\n                                 [{ Types.data =\n                                    (Types.TypeNs \"ossl_lib_ctx_st\");\n                                    disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args = []; trait_refs = []})\n                          ];\n                        trait = None;\n                        ty =\n                        (Types.Arrow\n                           { Types.bound_vars =\n                             [(Types.Region\n                                 (Types.BrNamed\n                                    ({ Types.index = (0, 1675);\n                                       krate = \"sandwich\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"support\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"pimpl\");\n                                           disambiguator = 0 };\n                                         { Types.data = Types.Impl;\n                                           disambiguator = 2 };\n                                         { Types.data =\n                                           (Types.ValueNs \"as_nonnull\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.LifetimeNs \"'_\");\n                                           disambiguator = 0 }\n                                         ]\n                                       },\n                                     \"'_\")))\n                               ];\n                             value =\n                             { Types.abi = Types.Abi {todo = \"Rust\"};\n                               c_variadic = false;\n                               inputs =\n                               [(Types.Ref\n                                   ({ Types.kind =\n                                      (Types.ReBound\n                                         (\"0\",\n                                          { Types.kind =\n                                            (Types.BrNamed\n                                               ({ Types.index = (0, 1675);\n                                                  krate = \"sandwich\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs \"support\");\n                                                     disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"pimpl\");\n                                                      disambiguator = 0 };\n                                                    { Types.data = Types.Impl;\n                                                      disambiguator = 2 };\n                                                    { Types.data =\n                                                      (Types.ValueNs\n                                                         \"as_nonnull\");\n                                                      disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.LifetimeNs \"'_\");\n                                                      disambiguator = 0 }\n                                                    ]\n                                                  },\n                                                \"'_\"));\n                                            var = \"0\" }))\n                                      },\n                                    Types.Adt {\n                                      def_id =\n                                      { Types.index = (0, 628);\n                                        krate = \"sandwich\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs \"support\");\n                                           disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"pimpl\");\n                                            disambiguator = 0 };\n                                          { Types.data =\n                                            (Types.TypeNs \"Pimpl\");\n                                            disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args =\n                                      [(Types.Lifetime\n                                          { Types.kind = Types.ReErased });\n                                        (Types.Type\n                                           Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 21556);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs\n                                                     \"ossl_lib_ctx_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []})\n                                        ];\n                                      trait_refs =\n                                      [{ Types.args = [];\n                                         impl =\n                                         Types.Builtin {\n                                           trait =\n                                           { Types.def_id =\n                                             { Types.index = (2, 26413);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"marker\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"Sized\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args =\n                                             [(Types.Type\n                                                 Types.Adt {\n                                                   def_id =\n                                                   { Types.index =\n                                                     (27, 21556);\n                                                     krate = \"openssl3\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"ossl_lib_ctx_st\");\n                                                        disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = [];\n                                                   trait_refs = []})\n                                               ]\n                                             }};\n                                         trait =\n                                         { Types.def_id =\n                                           { Types.index = (2, 26413);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"marker\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"Sized\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args =\n                                           [(Types.Type\n                                               Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 21556);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs\n                                                         \"ossl_lib_ctx_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []})\n                                             ]\n                                           }\n                                         }\n                                        ]},\n                                    false))\n                                 ];\n                               output =\n                               Types.Adt {\n                                 def_id =\n                                 { Types.index = (2, 2222); krate = \"core\";\n                                   path =\n                                   [{ Types.data = (Types.TypeNs \"ptr\");\n                                      disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"non_null\");\n                                       disambiguator = 0 };\n                                     { Types.data = (Types.TypeNs \"NonNull\");\n                                       disambiguator = 0 }\n                                     ]\n                                   };\n                                 generic_args =\n                                 [(Types.Type\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (27, 21556);\n                                         krate = \"openssl3\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"ossl_lib_ctx_st\");\n                                            disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []; trait_refs = []})\n                                   ];\n                                 trait_refs = []};\n                               safety = Types.Safe }\n                             })};\n                      hir_id = (Some (\"543\", \"113\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath\n                              \"rust/implementation/openssl3/mod.rs\"));\n                        hi = { Types.col = \"35\"; line = \"154\" };\n                        lo = { Types.col = \"16\"; line = \"154\" } };\n                      ty =\n                      Types.Adt {\n                        def_id =\n                        { Types.index = (2, 2222); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"ptr\");\n                             disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"non_null\");\n                              disambiguator = 0 };\n                            { Types.data = (Types.TypeNs \"NonNull\");\n                              disambiguator = 0 }\n                            ]\n                          };\n                        generic_args =\n                        [(Types.Type\n                            Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21556);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data =\n                                   (Types.TypeNs \"ossl_lib_ctx_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []})\n                          ];\n                        trait_refs = []}\n                      }\n                     ];\n                   bounds_impls = [];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real\n                        (Types.LocalPath\n                           \"rust/implementation/openssl3/mod.rs\"));\n                     hi = { Types.col = \"44\"; line = \"154\" };\n                     lo = { Types.col = \"36\"; line = \"154\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (2, 2245); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"ptr\");\n                            disambiguator = 0 };\n                           { Types.data = (Types.TypeNs \"non_null\");\n                             disambiguator = 0 };\n                           { Types.data = Types.Impl; disambiguator = 3 };\n                           { Types.data = (Types.ValueNs \"as_ptr\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real\n                          (Types.LocalPath\n                             \"rust/implementation/openssl3/mod.rs\"));\n                       hi = { Types.col = \"42\"; line = \"154\" };\n                       lo = { Types.col = \"36\"; line = \"154\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars = [];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs =\n                            [Types.Adt {\n                               def_id =\n                               { Types.index = (2, 2222); krate = \"core\";\n                                 path =\n                                 [{ Types.data = (Types.TypeNs \"ptr\");\n                                    disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"non_null\");\n                                     disambiguator = 0 };\n                                   { Types.data = (Types.TypeNs \"NonNull\");\n                                     disambiguator = 0 }\n                                   ]\n                                 };\n                               generic_args =\n                               [(Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (27, 21556);\n                                       krate = \"openssl3\";\n                                       path =\n                                       [{ Types.data =\n                                          (Types.TypeNs \"ossl_lib_ctx_st\");\n                                          disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []; trait_refs = []})\n                                 ];\n                               trait_refs = []}\n                              ];\n                            output =\n                            (Types.RawPtr\n                               (Types.Adt {\n                                  def_id =\n                                  { Types.index = (27, 21556);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data =\n                                       (Types.TypeNs \"ossl_lib_ctx_st\");\n                                       disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args = []; trait_refs = []},\n                                true));\n                            safety = Types.Safe }\n                          })\n                     };\n                   generic_args =\n                   [(Types.Type\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (27, 21556); krate = \"openssl3\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"ossl_lib_ctx_st\");\n                              disambiguator = 0 }\n                             ]\n                           };\n                         generic_args = []; trait_refs = []})\n                     ];\n                   trait = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars = [];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [Types.Adt {\n                             def_id =\n                             { Types.index = (2, 2222); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"ptr\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"non_null\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"NonNull\");\n                                   disambiguator = 0 }\n                                 ]\n                               };\n                             generic_args =\n                             [(Types.Type\n                                 Types.Adt {\n                                   def_id =\n                                   { Types.index = (27, 21556);\n                                     krate = \"openssl3\";\n                                     path =\n                                     [{ Types.data =\n                                        (Types.TypeNs \"ossl_lib_ctx_st\");\n                                        disambiguator = 0 }\n                                       ]\n                                     };\n                                   generic_args = []; trait_refs = []})\n                               ];\n                             trait_refs = []}\n                            ];\n                          output =\n                          (Types.RawPtr\n                             (Types.Adt {\n                                def_id =\n                                { Types.index = (27, 21556);\n                                  krate = \"openssl3\";\n                                  path =\n                                  [{ Types.data =\n                                     (Types.TypeNs \"ossl_lib_ctx_st\");\n                                     disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []; trait_refs = []},\n                              true));\n                          safety = Types.Safe }\n                        })};\n                 hir_id = (Some (\"543\", \"111\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real\n                      (Types.LocalPath \"rust/implementation/openssl3/mod.rs\"));\n                   hi = { Types.col = \"44\"; line = \"154\" };\n                   lo = { Types.col = \"16\"; line = \"154\" } };\n                 ty =\n                 (Types.RawPtr\n                    (Types.Adt {\n                       def_id =\n                       { Types.index = (27, 21556); krate = \"openssl3\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"ossl_lib_ctx_st\");\n                            disambiguator = 0 }\n                           ]\n                         };\n                       generic_args = []; trait_refs = []},\n                     true))\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.NamedConst {args = [];\n                    def_id =\n                    { Types.index = (0, 516); krate = \"sandwich\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"implementation\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"openssl3\");\n                          disambiguator = 0 };\n                        { Types.data =\n                          (Types.ValueNs \"OQS_PROVIDER_NAME_PTR\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    impl = None; user_ty = None};\n                  hir_id = (Some (\"543\", \"117\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath \"rust/implementation/openssl3/mod.rs\"));\n                    hi = { Types.col = \"37\"; line = \"155\" };\n                    lo = { Types.col = \"16\"; line = \"155\" } };\n                  ty = (Types.RawPtr ((Types.Int Types.I8), false)) };\n                { Types.attributes = [];\n                  contents =\n                  (Types.Adt\n                     { Types.base = None;\n                       fields =\n                       [{ Types.field =\n                          { Types.index = (2, 36180); krate = \"core\";\n                            path =\n                            [{ Types.data = (Types.TypeNs \"option\");\n                               disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"Option\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.TypeNs \"Some\");\n                                disambiguator = 0 };\n                              { Types.data = (Types.ValueNs \"0\");\n                                disambiguator = 0 }\n                              ]\n                            };\n                          value =\n                          { Types.attributes = [];\n                            contents =\n                            Types.PointerCoercion {\n                              cast = Types.ReifyFnPointer;\n                              source =\n                              { Types.attributes = [];\n                                contents =\n                                Types.GlobalName {\n                                  id =\n                                  { Types.index = (27, 19955);\n                                    krate = \"openssl3\";\n                                    path =\n                                    [{ Types.data = Types.ForeignMod;\n                                       disambiguator = 4000 };\n                                      { Types.data =\n                                        (Types.ValueNs \"oqs_provider_init\");\n                                        disambiguator = 0 }\n                                      ]\n                                    }};\n                                hir_id = None;\n                                span =\n                                { Types.filename =\n                                  (Types.Real\n                                     (Types.LocalPath\n                                        \"rust/implementation/openssl3/mod.rs\"));\n                                  hi = { Types.col = \"48\"; line = \"156\" };\n                                  lo = { Types.col = \"21\"; line = \"156\" } };\n                                ty =\n                                (Types.Arrow\n                                   { Types.bound_vars = [];\n                                     value =\n                                     { Types.abi =\n                                       Types.Abi {\n                                         todo = \"C { unwind: false }\"};\n                                       c_variadic = false;\n                                       inputs =\n                                       [(Types.RawPtr\n                                           (Types.Adt {\n                                              def_id =\n                                              { Types.index = (27, 21619);\n                                                krate = \"openssl3\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs\n                                                      \"ossl_core_handle_st\");\n                                                   disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = [];\n                                              trait_refs = []},\n                                            false));\n                                         (Types.RawPtr\n                                            (Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 21646);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs\n                                                       \"ossl_dispatch_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []},\n                                             false));\n                                         (Types.RawPtr\n                                            ((Types.RawPtr\n                                                (Types.Adt {\n                                                   def_id =\n                                                   { Types.index =\n                                                     (27, 21646);\n                                                     krate = \"openssl3\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"ossl_dispatch_st\");\n                                                        disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = [];\n                                                   trait_refs = []},\n                                                 false)),\n                                             true));\n                                         (Types.RawPtr\n                                            ((Types.RawPtr\n                                                (Types.Adt {\n                                                   def_id =\n                                                   { Types.index = (2, 5307);\n                                                     krate = \"core\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs \"ffi\");\n                                                        disambiguator = 0 };\n                                                       { Types.data =\n                                                         (Types.TypeNs\n                                                            \"c_void\");\n                                                         disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = [];\n                                                   trait_refs = []},\n                                                 true)),\n                                             true))\n                                         ];\n                                       output = (Types.Int Types.I32);\n                                       safety = Types.Unsafe }\n                                     })\n                                }};\n                            hir_id = (Some (\"543\", \"122\"));\n                            span =\n                            { Types.filename =\n                              (Types.Real\n                                 (Types.LocalPath\n                                    \"rust/implementation/openssl3/mod.rs\"));\n                              hi = { Types.col = \"48\"; line = \"156\" };\n                              lo = { Types.col = \"21\"; line = \"156\" } };\n                            ty =\n                            (Types.Arrow\n                               { Types.bound_vars = [];\n                                 value =\n                                 { Types.abi =\n                                   Types.Abi {todo = \"C { unwind: false }\"};\n                                   c_variadic = false;\n                                   inputs =\n                                   [(Types.RawPtr\n                                       (Types.Adt {\n                                          def_id =\n                                          { Types.index = (27, 21619);\n                                            krate = \"openssl3\";\n                                            path =\n                                            [{ Types.data =\n                                               (Types.TypeNs\n                                                  \"ossl_core_handle_st\");\n                                               disambiguator = 0 }\n                                              ]\n                                            };\n                                          generic_args = []; trait_refs = []},\n                                        false));\n                                     (Types.RawPtr\n                                        (Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 21646);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs\n                                                   \"ossl_dispatch_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []},\n                                         false));\n                                     (Types.RawPtr\n                                        ((Types.RawPtr\n                                            (Types.Adt {\n                                               def_id =\n                                               { Types.index = (27, 21646);\n                                                 krate = \"openssl3\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs\n                                                       \"ossl_dispatch_st\");\n                                                    disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []},\n                                             false)),\n                                         true));\n                                     (Types.RawPtr\n                                        ((Types.RawPtr\n                                            (Types.Adt {\n                                               def_id =\n                                               { Types.index = (2, 5307);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"ffi\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"c_void\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               generic_args = [];\n                                               trait_refs = []},\n                                             true)),\n                                         true))\n                                     ];\n                                   output = (Types.Int Types.I32);\n                                   safety = Types.Unsafe }\n                                 })\n                            }\n                          }\n                         ];\n                       info =\n                       { Types.typ =\n                         { Types.index = (2, 36174); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"option\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Option\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         typ_is_record = false; typ_is_struct = false;\n                         type_namespace =\n                         { Types.index = (2, 36174); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"option\");\n                              disambiguator = 0 }\n                             ]\n                           };\n                         variant =\n                         { Types.index = (2, 36178); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"option\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Option\");\n                               disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Some\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         variant_index = \"1\"; variant_is_record = false };\n                       user_ty = None });\n                  hir_id = (Some (\"543\", \"119\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath \"rust/implementation/openssl3/mod.rs\"));\n                    hi = { Types.col = \"49\"; line = \"156\" };\n                    lo = { Types.col = \"16\"; line = \"156\" } };\n                  ty =\n                  Types.Adt {\n                    def_id =\n                    { Types.index = (2, 36174); krate = \"core\";\n                      path =\n                      [{ Types.data = (Types.TypeNs \"option\");\n                         disambiguator = 0 };\n                        { Types.data = (Types.TypeNs \"Option\");\n                          disambiguator = 0 }\n                        ]\n                      };\n                    generic_args =\n                    [(Types.Type\n                        (Types.Arrow\n                           { Types.bound_vars = [];\n                             value =\n                             { Types.abi =\n                               Types.Abi {todo = \"C { unwind: false }\"};\n                               c_variadic = false;\n                               inputs =\n                               [(Types.RawPtr\n                                   (Types.Adt {\n                                      def_id =\n                                      { Types.index = (27, 21619);\n                                        krate = \"openssl3\";\n                                        path =\n                                        [{ Types.data =\n                                           (Types.TypeNs\n                                              \"ossl_core_handle_st\");\n                                           disambiguator = 0 }\n                                          ]\n                                        };\n                                      generic_args = []; trait_refs = []},\n                                    false));\n                                 (Types.RawPtr\n                                    (Types.Adt {\n                                       def_id =\n                                       { Types.index = (27, 21646);\n                                         krate = \"openssl3\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"ossl_dispatch_st\");\n                                            disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []; trait_refs = []},\n                                     false));\n                                 (Types.RawPtr\n                                    ((Types.RawPtr\n                                        (Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 21646);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs\n                                                   \"ossl_dispatch_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []},\n                                         false)),\n                                     true));\n                                 (Types.RawPtr\n                                    ((Types.RawPtr\n                                        (Types.Adt {\n                                           def_id =\n                                           { Types.index = (2, 5307);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"ffi\");\n                                                disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.TypeNs \"c_void\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []},\n                                         true)),\n                                     true))\n                                 ];\n                               output = (Types.Int Types.I32);\n                               safety = Types.Unsafe }\n                             }))\n                      ];\n                    trait_refs =\n                    [{ Types.args = [];\n                       impl =\n                       Types.Builtin {\n                         trait =\n                         { Types.def_id =\n                           { Types.index = (2, 26413); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"marker\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Sized\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Type\n                               (Types.Arrow\n                                  { Types.bound_vars = [];\n                                    value =\n                                    { Types.abi =\n                                      Types.Abi {todo = \"C { unwind: false }\"};\n                                      c_variadic = false;\n                                      inputs =\n                                      [(Types.RawPtr\n                                          (Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 21619);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs\n                                                     \"ossl_core_handle_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []},\n                                           false));\n                                        (Types.RawPtr\n                                           (Types.Adt {\n                                              def_id =\n                                              { Types.index = (27, 21646);\n                                                krate = \"openssl3\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs\n                                                      \"ossl_dispatch_st\");\n                                                   disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = [];\n                                              trait_refs = []},\n                                            false));\n                                        (Types.RawPtr\n                                           ((Types.RawPtr\n                                               (Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (27, 21646);\n                                                    krate = \"openssl3\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs\n                                                          \"ossl_dispatch_st\");\n                                                       disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = [];\n                                                  trait_refs = []},\n                                                false)),\n                                            true));\n                                        (Types.RawPtr\n                                           ((Types.RawPtr\n                                               (Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (2, 5307);\n                                                    krate = \"core\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"ffi\");\n                                                       disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs\n                                                           \"c_void\");\n                                                        disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = [];\n                                                  trait_refs = []},\n                                                true)),\n                                            true))\n                                        ];\n                                      output = (Types.Int Types.I32);\n                                      safety = Types.Unsafe }\n                                    }))\n                             ]\n                           }};\n                       trait =\n                       { Types.def_id =\n                         { Types.index = (2, 26413); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"marker\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Sized\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             (Types.Arrow\n                                { Types.bound_vars = [];\n                                  value =\n                                  { Types.abi =\n                                    Types.Abi {todo = \"C { unwind: false }\"};\n                                    c_variadic = false;\n                                    inputs =\n                                    [(Types.RawPtr\n                                        (Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 21619);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs\n                                                   \"ossl_core_handle_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []},\n                                         false));\n                                      (Types.RawPtr\n                                         (Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 21646);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs\n                                                    \"ossl_dispatch_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []},\n                                          false));\n                                      (Types.RawPtr\n                                         ((Types.RawPtr\n                                             (Types.Adt {\n                                                def_id =\n                                                { Types.index = (27, 21646);\n                                                  krate = \"openssl3\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs\n                                                        \"ossl_dispatch_st\");\n                                                     disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = [];\n                                                trait_refs = []},\n                                              false)),\n                                          true));\n                                      (Types.RawPtr\n                                         ((Types.RawPtr\n                                             (Types.Adt {\n                                                def_id =\n                                                { Types.index = (2, 5307);\n                                                  krate = \"core\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs \"ffi\");\n                                                     disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"c_void\");\n                                                      disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = [];\n                                                trait_refs = []},\n                                              true)),\n                                          true))\n                                      ];\n                                    output = (Types.Int Types.I32);\n                                    safety = Types.Unsafe }\n                                  }))\n                           ]\n                         }\n                       }\n                      ]}\n                  }\n                ];\n              bounds_impls = [];\n              fn_span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath \"rust/implementation/openssl3/mod.rs\"));\n                hi = { Types.col = \"13\"; line = \"157\" };\n                lo = { Types.col = \"12\"; line = \"153\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (27, 12687); krate = \"openssl3\";\n                    path =\n                    [{ Types.data = Types.ForeignMod; disambiguator = 699 };\n                      { Types.data =\n                        (Types.ValueNs \"OSSL_PROVIDER_add_builtin\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real\n                     (Types.LocalPath \"rust/implementation/openssl3/mod.rs\"));\n                  hi = { Types.col = \"47\"; line = \"153\" };\n                  lo = { Types.col = \"12\"; line = \"153\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           (Types.Adt {\n                              def_id =\n                              { Types.index = (27, 21556);\n                                krate = \"openssl3\";\n                                path =\n                                [{ Types.data =\n                                   (Types.TypeNs \"ossl_lib_ctx_st\");\n                                   disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args = []; trait_refs = []},\n                            true));\n                         (Types.RawPtr ((Types.Int Types.I8), false));\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (2, 36174); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"option\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"Option\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args =\n                           [(Types.Type\n                               (Types.Arrow\n                                  { Types.bound_vars = [];\n                                    value =\n                                    { Types.abi =\n                                      Types.Abi {todo = \"C { unwind: false }\"};\n                                      c_variadic = false;\n                                      inputs =\n                                      [(Types.RawPtr\n                                          (Types.Adt {\n                                             def_id =\n                                             { Types.index = (27, 21619);\n                                               krate = \"openssl3\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs\n                                                     \"ossl_core_handle_st\");\n                                                  disambiguator = 0 }\n                                                 ]\n                                               };\n                                             generic_args = [];\n                                             trait_refs = []},\n                                           false));\n                                        (Types.RawPtr\n                                           (Types.Adt {\n                                              def_id =\n                                              { Types.index = (27, 21646);\n                                                krate = \"openssl3\";\n                                                path =\n                                                [{ Types.data =\n                                                   (Types.TypeNs\n                                                      \"ossl_dispatch_st\");\n                                                   disambiguator = 0 }\n                                                  ]\n                                                };\n                                              generic_args = [];\n                                              trait_refs = []},\n                                            false));\n                                        (Types.RawPtr\n                                           ((Types.RawPtr\n                                               (Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (27, 21646);\n                                                    krate = \"openssl3\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs\n                                                          \"ossl_dispatch_st\");\n                                                       disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = [];\n                                                  trait_refs = []},\n                                                false)),\n                                            true));\n                                        (Types.RawPtr\n                                           ((Types.RawPtr\n                                               (Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (2, 5307);\n                                                    krate = \"core\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs \"ffi\");\n                                                       disambiguator = 0 };\n                                                      { Types.data =\n                                                        (Types.TypeNs\n                                                           \"c_void\");\n                                                        disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = [];\n                                                  trait_refs = []},\n                                                true)),\n                                            true))\n                                        ];\n                                      output = (Types.Int Types.I32);\n                                      safety = Types.Unsafe }\n                                    }))\n                             ];\n                           trait_refs =\n                           [{ Types.args = [];\n                              impl =\n                              Types.Builtin {\n                                trait =\n                                { Types.def_id =\n                                  { Types.index = (2, 26413); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"marker\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Sized\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type\n                                      (Types.Arrow\n                                         { Types.bound_vars = [];\n                                           value =\n                                           { Types.abi =\n                                             Types.Abi {\n                                               todo = \"C { unwind: false }\"};\n                                             c_variadic = false;\n                                             inputs =\n                                             [(Types.RawPtr\n                                                 (Types.Adt {\n                                                    def_id =\n                                                    { Types.index =\n                                                      (27, 21619);\n                                                      krate = \"openssl3\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"ossl_core_handle_st\");\n                                                         disambiguator = 0 }\n                                                        ]\n                                                      };\n                                                    generic_args = [];\n                                                    trait_refs = []},\n                                                  false));\n                                               (Types.RawPtr\n                                                  (Types.Adt {\n                                                     def_id =\n                                                     { Types.index =\n                                                       (27, 21646);\n                                                       krate = \"openssl3\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs\n                                                             \"ossl_dispatch_st\");\n                                                          disambiguator = 0 }\n                                                         ]\n                                                       };\n                                                     generic_args = [];\n                                                     trait_refs = []},\n                                                   false));\n                                               (Types.RawPtr\n                                                  ((Types.RawPtr\n                                                      (Types.Adt {\n                                                         def_id =\n                                                         { Types.index =\n                                                           (27, 21646);\n                                                           krate = \"openssl3\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ossl_dispatch_st\");\n                                                              disambiguator =\n                                                              0 }\n                                                             ]\n                                                           };\n                                                         generic_args = [];\n                                                         trait_refs = []},\n                                                       false)),\n                                                   true));\n                                               (Types.RawPtr\n                                                  ((Types.RawPtr\n                                                      (Types.Adt {\n                                                         def_id =\n                                                         { Types.index =\n                                                           (2, 5307);\n                                                           krate = \"core\";\n                                                           path =\n                                                           [{ Types.data =\n                                                              (Types.TypeNs\n                                                                 \"ffi\");\n                                                              disambiguator =\n                                                              0 };\n                                                             { Types.data =\n                                                               (Types.TypeNs\n                                                                  \"c_void\");\n                                                               disambiguator =\n                                                               0 }\n                                                             ]\n                                                           };\n                                                         generic_args = [];\n                                                         trait_refs = []},\n                                                       true)),\n                                                   true))\n                                               ];\n                                             output = (Types.Int Types.I32);\n                                             safety = Types.Unsafe }\n                                           }))\n                                    ]\n                                  }};\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    (Types.Arrow\n                                       { Types.bound_vars = [];\n                                         value =\n                                         { Types.abi =\n                                           Types.Abi {\n                                             todo = \"C { unwind: false }\"};\n                                           c_variadic = false;\n                                           inputs =\n                                           [(Types.RawPtr\n                                               (Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (27, 21619);\n                                                    krate = \"openssl3\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs\n                                                          \"ossl_core_handle_st\");\n                                                       disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = [];\n                                                  trait_refs = []},\n                                                false));\n                                             (Types.RawPtr\n                                                (Types.Adt {\n                                                   def_id =\n                                                   { Types.index =\n                                                     (27, 21646);\n                                                     krate = \"openssl3\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"ossl_dispatch_st\");\n                                                        disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = [];\n                                                   trait_refs = []},\n                                                 false));\n                                             (Types.RawPtr\n                                                ((Types.RawPtr\n                                                    (Types.Adt {\n                                                       def_id =\n                                                       { Types.index =\n                                                         (27, 21646);\n                                                         krate = \"openssl3\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ossl_dispatch_st\");\n                                                            disambiguator = 0\n                                                            }\n                                                           ]\n                                                         };\n                                                       generic_args = [];\n                                                       trait_refs = []},\n                                                     false)),\n                                                 true));\n                                             (Types.RawPtr\n                                                ((Types.RawPtr\n                                                    (Types.Adt {\n                                                       def_id =\n                                                       { Types.index =\n                                                         (2, 5307);\n                                                         krate = \"core\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ffi\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"c_void\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       generic_args = [];\n                                                       trait_refs = []},\n                                                     true)),\n                                                 true))\n                                             ];\n                                           output = (Types.Int Types.I32);\n                                           safety = Types.Unsafe }\n                                         }))\n                                  ]\n                                }\n                              }\n                             ]}\n                         ];\n                       output = (Types.Int Types.I32); safety = Types.Unsafe\n                       }\n                     })\n                };\n              generic_args = []; trait = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         (Types.Adt {\n                            def_id =\n                            { Types.index = (27, 21556); krate = \"openssl3\";\n                              path =\n                              [{ Types.data =\n                                 (Types.TypeNs \"ossl_lib_ctx_st\");\n                                 disambiguator = 0 }\n                                ]\n                              };\n                            generic_args = []; trait_refs = []},\n                          true));\n                       (Types.RawPtr ((Types.Int Types.I8), false));\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (2, 36174); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"option\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Option\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type\n                             (Types.Arrow\n                                { Types.bound_vars = [];\n                                  value =\n                                  { Types.abi =\n                                    Types.Abi {todo = \"C { unwind: false }\"};\n                                    c_variadic = false;\n                                    inputs =\n                                    [(Types.RawPtr\n                                        (Types.Adt {\n                                           def_id =\n                                           { Types.index = (27, 21619);\n                                             krate = \"openssl3\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs\n                                                   \"ossl_core_handle_st\");\n                                                disambiguator = 0 }\n                                               ]\n                                             };\n                                           generic_args = []; trait_refs = []},\n                                         false));\n                                      (Types.RawPtr\n                                         (Types.Adt {\n                                            def_id =\n                                            { Types.index = (27, 21646);\n                                              krate = \"openssl3\";\n                                              path =\n                                              [{ Types.data =\n                                                 (Types.TypeNs\n                                                    \"ossl_dispatch_st\");\n                                                 disambiguator = 0 }\n                                                ]\n                                              };\n                                            generic_args = [];\n                                            trait_refs = []},\n                                          false));\n                                      (Types.RawPtr\n                                         ((Types.RawPtr\n                                             (Types.Adt {\n                                                def_id =\n                                                { Types.index = (27, 21646);\n                                                  krate = \"openssl3\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs\n                                                        \"ossl_dispatch_st\");\n                                                     disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = [];\n                                                trait_refs = []},\n                                              false)),\n                                          true));\n                                      (Types.RawPtr\n                                         ((Types.RawPtr\n                                             (Types.Adt {\n                                                def_id =\n                                                { Types.index = (2, 5307);\n                                                  krate = \"core\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs \"ffi\");\n                                                     disambiguator = 0 };\n                                                    { Types.data =\n                                                      (Types.TypeNs \"c_void\");\n                                                      disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = [];\n                                                trait_refs = []},\n                                              true)),\n                                          true))\n                                      ];\n                                    output = (Types.Int Types.I32);\n                                    safety = Types.Unsafe }\n                                  }))\n                           ];\n                         trait_refs =\n                         [{ Types.args = [];\n                            impl =\n                            Types.Builtin {\n                              trait =\n                              { Types.def_id =\n                                { Types.index = (2, 26413); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"marker\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Sized\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type\n                                    (Types.Arrow\n                                       { Types.bound_vars = [];\n                                         value =\n                                         { Types.abi =\n                                           Types.Abi {\n                                             todo = \"C { unwind: false }\"};\n                                           c_variadic = false;\n                                           inputs =\n                                           [(Types.RawPtr\n                                               (Types.Adt {\n                                                  def_id =\n                                                  { Types.index = (27, 21619);\n                                                    krate = \"openssl3\";\n                                                    path =\n                                                    [{ Types.data =\n                                                       (Types.TypeNs\n                                                          \"ossl_core_handle_st\");\n                                                       disambiguator = 0 }\n                                                      ]\n                                                    };\n                                                  generic_args = [];\n                                                  trait_refs = []},\n                                                false));\n                                             (Types.RawPtr\n                                                (Types.Adt {\n                                                   def_id =\n                                                   { Types.index =\n                                                     (27, 21646);\n                                                     krate = \"openssl3\";\n                                                     path =\n                                                     [{ Types.data =\n                                                        (Types.TypeNs\n                                                           \"ossl_dispatch_st\");\n                                                        disambiguator = 0 }\n                                                       ]\n                                                     };\n                                                   generic_args = [];\n                                                   trait_refs = []},\n                                                 false));\n                                             (Types.RawPtr\n                                                ((Types.RawPtr\n                                                    (Types.Adt {\n                                                       def_id =\n                                                       { Types.index =\n                                                         (27, 21646);\n                                                         krate = \"openssl3\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ossl_dispatch_st\");\n                                                            disambiguator = 0\n                                                            }\n                                                           ]\n                                                         };\n                                                       generic_args = [];\n                                                       trait_refs = []},\n                                                     false)),\n                                                 true));\n                                             (Types.RawPtr\n                                                ((Types.RawPtr\n                                                    (Types.Adt {\n                                                       def_id =\n                                                       { Types.index =\n                                                         (2, 5307);\n                                                         krate = \"core\";\n                                                         path =\n                                                         [{ Types.data =\n                                                            (Types.TypeNs\n                                                               \"ffi\");\n                                                            disambiguator = 0\n                                                            };\n                                                           { Types.data =\n                                                             (Types.TypeNs\n                                                                \"c_void\");\n                                                             disambiguator =\n                                                             0 }\n                                                           ]\n                                                         };\n                                                       generic_args = [];\n                                                       trait_refs = []},\n                                                     true)),\n                                                 true))\n                                             ];\n                                           output = (Types.Int Types.I32);\n                                           safety = Types.Unsafe }\n                                         }))\n                                  ]\n                                }};\n                            trait =\n                            { Types.def_id =\n                              { Types.index = (2, 26413); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"marker\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Sized\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type\n                                  (Types.Arrow\n                                     { Types.bound_vars = [];\n                                       value =\n                                       { Types.abi =\n                                         Types.Abi {\n                                           todo = \"C { unwind: false }\"};\n                                         c_variadic = false;\n                                         inputs =\n                                         [(Types.RawPtr\n                                             (Types.Adt {\n                                                def_id =\n                                                { Types.index = (27, 21619);\n                                                  krate = \"openssl3\";\n                                                  path =\n                                                  [{ Types.data =\n                                                     (Types.TypeNs\n                                                        \"ossl_core_handle_st\");\n                                                     disambiguator = 0 }\n                                                    ]\n                                                  };\n                                                generic_args = [];\n                                                trait_refs = []},\n                                              false));\n                                           (Types.RawPtr\n                                              (Types.Adt {\n                                                 def_id =\n                                                 { Types.index = (27, 21646);\n                                                   krate = \"openssl3\";\n                                                   path =\n                                                   [{ Types.data =\n                                                      (Types.TypeNs\n                                                         \"ossl_dispatch_st\");\n                                                      disambiguator = 0 }\n                                                     ]\n                                                   };\n                                                 generic_args = [];\n                                                 trait_refs = []},\n                                               false));\n                                           (Types.RawPtr\n                                              ((Types.RawPtr\n                                                  (Types.Adt {\n                                                     def_id =\n                                                     { Types.index =\n                                                       (27, 21646);\n                                                       krate = \"openssl3\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs\n                                                             \"ossl_dispatch_st\");\n                                                          disambiguator = 0 }\n                                                         ]\n                                                       };\n                                                     generic_args = [];\n                                                     trait_refs = []},\n                                                   false)),\n                                               true));\n                                           (Types.RawPtr\n                                              ((Types.RawPtr\n                                                  (Types.Adt {\n                                                     def_id =\n                                                     { Types.index =\n                                                       (2, 5307);\n                                                       krate = \"core\";\n                                                       path =\n                                                       [{ Types.data =\n                                                          (Types.TypeNs \"ffi\");\n                                                          disambiguator = 0 };\n                                                         { Types.data =\n                                                           (Types.TypeNs\n                                                              \"c_void\");\n                                                           disambiguator = 0\n                                                           }\n                                                         ]\n                                                       };\n                                                     generic_args = [];\n                                                     trait_refs = []},\n                                                   true)),\n                                               true))\n                                           ];\n                                         output = (Types.Int Types.I32);\n                                         safety = Types.Unsafe }\n                                       }))\n                                ]\n                              }\n                            }\n                           ]}\n                       ];\n                     output = (Types.Int Types.I32); safety = Types.Unsafe }\n                   })};\n            hir_id = (Some (\"543\", \"107\"));\n            span =\n            { Types.filename =\n              (Types.Real\n                 (Types.LocalPath \"rust/implementation/openssl3/mod.rs\"));\n              hi = { Types.col = \"13\"; line = \"157\" };\n              lo = { Types.col = \"12\"; line = \"153\" } };\n            ty = (Types.Int Types.I32) });\n    region_scope = { Types.data = Types.Node; id = \"125\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename =\n      (Types.Real (Types.LocalPath \"rust/implementation/openssl3/mod.rs\"));\n      hi = { Types.col = \"9\"; line = \"158\" };\n      lo = { Types.col = \"11\"; line = \"152\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"543\", \"106\"));\n  span =\n  { Types.filename =\n    (Types.Real (Types.LocalPath \"rust/implementation/openssl3/mod.rs\"));\n    hi = { Types.col = \"9\"; line = \"158\" };\n    lo = { Types.col = \"11\"; line = \"152\" } };\n  ty = (Types.Int Types.I32) }"

                  <:
                  i32) <>.
                1l
              then
                let res:Alloc.String.t_String =
                  Alloc.Fmt.format (Core.Fmt.impl_2__new_v1 (sz 1)
                        (sz 1)
                        (let list = ["failed to add the oqsprovider: "] in
                          FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 1);
                          Rust_primitives.Hax.array_of_list 1 list)
                        (let list =
                            [
                              Core.Fmt.Rt.impl_1__new_display #Alloc.String.t_String
                                (Sandwich.Implementation.Openssl3.Support.errstr ()
                                  <:
                                  Alloc.String.t_String)
                              <:
                              Core.Fmt.Rt.t_Argument
                            ]
                          in
                          FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 1);
                          Rust_primitives.Hax.array_of_list 1 list)
                      <:
                      Core.Fmt.t_Arguments)
                in
                let! hoist19:Rust_primitives.Hax.t_Never =
                  Core.Ops.Control_flow.ControlFlow_Break
                  (Core.Result.Result_Err
                    (Core.Convert.f_into #(Sandwich_proto.Errors.t_SystemError &
                          Alloc.String.t_String)
                        #Sandwich.Error.t_Error
                        #FStar.Tactics.Typeclasses.solve
                        ((Sandwich_proto.Errors.SystemError_SYSTEMERROR_MEMORY
                            <:
                            Sandwich_proto.Errors.t_SystemError),
                          res
                          <:
                          (Sandwich_proto.Errors.t_SystemError & Alloc.String.t_String)))
                    <:
                    Core.Result.t_Result t_LibCtx Sandwich.Error.t_Error)
                  <:
                  Core.Ops.Control_flow.t_ControlFlow
                    (Core.Result.t_Result t_LibCtx Sandwich.Error.t_Error)
                    Rust_primitives.Hax.t_Never
                in
                Core.Ops.Control_flow.ControlFlow_Continue
                (Rust_primitives.Hax.never_to_any hoist19)
                <:
                Core.Ops.Control_flow.t_ControlFlow
                  (Core.Result.t_Result t_LibCtx Sandwich.Error.t_Error) Prims.unit
              else
                Core.Ops.Control_flow.ControlFlow_Continue ()
                <:
                Core.Ops.Control_flow.t_ControlFlow
                  (Core.Result.t_Result t_LibCtx Sandwich.Error.t_Error) Prims.unit
            in
            Core.Ops.Control_flow.ControlFlow_Continue
            (match
                impl__ProviderBuilder__build (impl__ProviderBuilder__lib_ctx (Rust_primitives.Hax.failure
                          "(RefMut) Fatal error: something we considered as impossible occurred! \027[1mPlease report this by submitting an issue on GitHub!\027[0m\nDetails: expected an arrow type here"
                          "rust_primitives::hax::failure(\n        \"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\n        \"sandwich::implementation::openssl3::impl__ProviderBuilder__name\",\n    )(\n        sandwich::implementation::openssl3::impl__ProviderBuilder__new(Tuple0),\n        rust_primitives::hax::failure(\n            \"(reject_RawOrMutPointer) ExplicitRejection { reason: \\\"a node of kind [Raw_pointer] have been found in the AST\\\" }\",\n            \"sandwich::implementation::openssl3::v_OQS_PROVIDER_NAME_PTR\",\n        ),\n    )"

                        <:
                        t_ProviderBuilder)
                      (Sandwich.Support.Pimpl.impl_2__as_nonnull #Openssl3.t_ossl_lib_ctx_st libctx
                        <:
                        Core.Ptr.Non_null.t_NonNull Openssl3.t_ossl_lib_ctx_st)
                    <:
                    t_ProviderBuilder)
              with
              | Core.Result.Result_Ok oqs_provider ->
                let _:Prims.unit =
                  Rust_primitives.Hax.failure "(reject_RawOrMutPointer) ExplicitRejection { reason: \"a node of kind [Raw_pointer] have been found in the AST\" }"
                    "{\n        let name: raw_pointer!() = {\n            rust_primitives::hax::failure(\n                \"(AST import) Unsafe blocks are not allowed.\",\n                \"{ Types.attributes = [];\\n  contents =\\n  Types.Block {\\n    expr =\\n    (Some { Types.attributes = [];\\n            contents =\\n            Types.Call {\\n              args =\\n              [{ Types.attributes = [];\\n                 contents =\\n                 Types.PointerCoercion {cast = Types.MutToConstPointer;\\n                   source =\\n                   { Types.attributes = [];\\n                     contents =\\n                     Types.Call {\\n                       args =\\n                       [{ Types.attributes = [];\\n                          contents =\\n                          Types.Call {\\n                            args =\\n                            [{ Types.attributes = [];\\n                               contents =\\n                               Types.Borrow {\\n                                 arg =\\n                                 { Types.attributes = [];\\n                                   contents =\\n                                   Types.Field {\\n                                     field =\\n                                     { Types.index = (0, 520);\\n                                       krate = \\\"sandwich\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.TypeNs \\\"implementation\\\");\\n                                          disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"openssl3\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"Provider\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data = (Types.ValueNs \\\"0\\\");\\n                                           disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     lhs =\\n                                     { Types.attributes = [];\\n                                       contents =\\n                                       Types.VarRef {\\n                                         id =\\n                                         { Types.id =\\n                                           { Types.local_id = \\\"212\\\";\\n                                             owner =\\n                                             { Types.index = (0, 543);\\n                                               krate = \\\"sandwich\\\";\\n                                               path =\\n                                               [{ Types.data =\\n                                                  (Types.TypeNs\\n                                                     \\\"implementation\\\");\\n                                                  disambiguator = 0 };\\n                                                 { Types.data =\\n                                                   (Types.TypeNs \\\"openssl3\\\");\\n                                                   disambiguator = 0 };\\n                                                 { Types.data = Types.Impl;\\n                                                   disambiguator = 3 };\\n                                                 { Types.data =\\n                                                   (Types.ValueNs \\\"try_new\\\");\\n                                                   disambiguator = 0 }\\n                                                 ]\\n                                               }\\n                                             };\\n                                           name = \\\"oqs_provider\\\" }};\\n                                       hir_id = (Some (\\\"543\\\", \\\"225\\\"));\\n                                       span =\\n                                       { Types.filename =\\n                                         (Types.Real\\n                                            (Types.LocalPath\\n                                               \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                                         hi =\\n                                         { Types.col = \\\"71\\\"; line = \\\"174\\\" };\\n                                         lo =\\n                                         { Types.col = \\\"59\\\"; line = \\\"174\\\" } };\\n                                       ty =\\n                                       Types.Adt {\\n                                         def_id =\\n                                         { Types.index = (0, 517);\\n                                           krate = \\\"sandwich\\\";\\n                                           path =\\n                                           [{ Types.data =\\n                                              (Types.TypeNs \\\"implementation\\\");\\n                                              disambiguator = 0 };\\n                                             { Types.data =\\n                                               (Types.TypeNs \\\"openssl3\\\");\\n                                               disambiguator = 0 };\\n                                             { Types.data =\\n                                               (Types.TypeNs \\\"Provider\\\");\\n                                               disambiguator = 0 }\\n                                             ]\\n                                           };\\n                                         generic_args =\\n                                         [(Types.Lifetime\\n                                             { Types.kind = Types.ReErased })\\n                                           ];\\n                                         trait_refs = []}\\n                                       }};\\n                                   hir_id = None;\\n                                   span =\\n                                   { Types.filename =\\n                                     (Types.Real\\n                                        (Types.LocalPath\\n                                           \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                                     hi = { Types.col = \\\"73\\\"; line = \\\"174\\\" };\\n                                     lo = { Types.col = \\\"59\\\"; line = \\\"174\\\" }\\n                                     };\\n                                   ty =\\n                                   Types.Adt {\\n                                     def_id =\\n                                     { Types.index = (0, 628);\\n                                       krate = \\\"sandwich\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.TypeNs \\\"support\\\");\\n                                          disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"pimpl\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"Pimpl\\\");\\n                                           disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     generic_args =\\n                                     [(Types.Lifetime\\n                                         { Types.kind = Types.ReErased });\\n                                       (Types.Type\\n                                          Types.Adt {\\n                                            def_id =\\n                                            { Types.index = (27, 20845);\\n                                              krate = \\\"openssl3\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs\\n                                                    \\\"ossl_provider_st\\\");\\n                                                 disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args = [];\\n                                            trait_refs = []})\\n                                       ];\\n                                     trait_refs =\\n                                     [{ Types.args = [];\\n                                        impl =\\n                                        Types.Builtin {\\n                                          trait =\\n                                          { Types.def_id =\\n                                            { Types.index = (2, 26413);\\n                                              krate = \\\"core\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs \\\"marker\\\");\\n                                                 disambiguator = 0 };\\n                                                { Types.data =\\n                                                  (Types.TypeNs \\\"Sized\\\");\\n                                                  disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args =\\n                                            [(Types.Type\\n                                                Types.Adt {\\n                                                  def_id =\\n                                                  { Types.index = (27, 20845);\\n                                                    krate = \\\"openssl3\\\";\\n                                                    path =\\n                                                    [{ Types.data =\\n                                                       (Types.TypeNs\\n                                                          \\\"ossl_provider_st\\\");\\n                                                       disambiguator = 0 }\\n                                                      ]\\n                                                    };\\n                                                  generic_args = [];\\n                                                  trait_refs = []})\\n                                              ]\\n                                            }};\\n                                        trait =\\n                                        { Types.def_id =\\n                                          { Types.index = (2, 26413);\\n                                            krate = \\\"core\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs \\\"marker\\\");\\n                                               disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"Sized\\\");\\n                                                disambiguator = 0 }\\n                                              ]\\n                                            };\\n                                          generic_args =\\n                                          [(Types.Type\\n                                              Types.Adt {\\n                                                def_id =\\n                                                { Types.index = (27, 20845);\\n                                                  krate = \\\"openssl3\\\";\\n                                                  path =\\n                                                  [{ Types.data =\\n                                                     (Types.TypeNs\\n                                                        \\\"ossl_provider_st\\\");\\n                                                     disambiguator = 0 }\\n                                                    ]\\n                                                  };\\n                                                generic_args = [];\\n                                                trait_refs = []})\\n                                            ]\\n                                          }\\n                                        }\\n                                       ]}\\n                                   };\\n                                 borrow_kind = Types.Shared};\\n                               hir_id = (Some (\\\"543\\\", \\\"224\\\"));\\n                               span =\\n                               { Types.filename =\\n                                 (Types.Real\\n                                    (Types.LocalPath\\n                                       \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                                 hi = { Types.col = \\\"73\\\"; line = \\\"174\\\" };\\n                                 lo = { Types.col = \\\"59\\\"; line = \\\"174\\\" } };\\n                               ty =\\n                               (Types.Ref\\n                                  ({ Types.kind = Types.ReErased },\\n                                   Types.Adt {\\n                                     def_id =\\n                                     { Types.index = (0, 628);\\n                                       krate = \\\"sandwich\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.TypeNs \\\"support\\\");\\n                                          disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"pimpl\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"Pimpl\\\");\\n                                           disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     generic_args =\\n                                     [(Types.Lifetime\\n                                         { Types.kind = Types.ReErased });\\n                                       (Types.Type\\n                                          Types.Adt {\\n                                            def_id =\\n                                            { Types.index = (27, 20845);\\n                                              krate = \\\"openssl3\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs\\n                                                    \\\"ossl_provider_st\\\");\\n                                                 disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args = [];\\n                                            trait_refs = []})\\n                                       ];\\n                                     trait_refs =\\n                                     [{ Types.args = [];\\n                                        impl =\\n                                        Types.Builtin {\\n                                          trait =\\n                                          { Types.def_id =\\n                                            { Types.index = (2, 26413);\\n                                              krate = \\\"core\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs \\\"marker\\\");\\n                                                 disambiguator = 0 };\\n                                                { Types.data =\\n                                                  (Types.TypeNs \\\"Sized\\\");\\n                                                  disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args =\\n                                            [(Types.Type\\n                                                Types.Adt {\\n                                                  def_id =\\n                                                  { Types.index = (27, 20845);\\n                                                    krate = \\\"openssl3\\\";\\n                                                    path =\\n                                                    [{ Types.data =\\n                                                       (Types.TypeNs\\n                                                          \\\"ossl_provider_st\\\");\\n                                                       disambiguator = 0 }\\n                                                      ]\\n                                                    };\\n                                                  generic_args = [];\\n                                                  trait_refs = []})\\n                                              ]\\n                                            }};\\n                                        trait =\\n                                        { Types.def_id =\\n                                          { Types.index = (2, 26413);\\n                                            krate = \\\"core\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs \\\"marker\\\");\\n                                               disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"Sized\\\");\\n                                                disambiguator = 0 }\\n                                              ]\\n                                            };\\n                                          generic_args =\\n                                          [(Types.Type\\n                                              Types.Adt {\\n                                                def_id =\\n                                                { Types.index = (27, 20845);\\n                                                  krate = \\\"openssl3\\\";\\n                                                  path =\\n                                                  [{ Types.data =\\n                                                     (Types.TypeNs\\n                                                        \\\"ossl_provider_st\\\");\\n                                                     disambiguator = 0 }\\n                                                    ]\\n                                                  };\\n                                                generic_args = [];\\n                                                trait_refs = []})\\n                                            ]\\n                                          }\\n                                        }\\n                                       ]},\\n                                   false))\\n                               }\\n                              ];\\n                            bounds_impls = [];\\n                            fn_span =\\n                            { Types.filename =\\n                              (Types.Real\\n                                 (Types.LocalPath\\n                                    \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                              hi = { Types.col = \\\"86\\\"; line = \\\"174\\\" };\\n                              lo = { Types.col = \\\"74\\\"; line = \\\"174\\\" } };\\n                            from_hir_call = true;\\n                            fun' =\\n                            { Types.attributes = [];\\n                              contents =\\n                              Types.GlobalName {\\n                                id =\\n                                { Types.index = (0, 644); krate = \\\"sandwich\\\";\\n                                  path =\\n                                  [{ Types.data = (Types.TypeNs \\\"support\\\");\\n                                     disambiguator = 0 };\\n                                    { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                                      disambiguator = 0 };\\n                                    { Types.data = Types.Impl;\\n                                      disambiguator = 2 };\\n                                    { Types.data =\\n                                      (Types.ValueNs \\\"as_nonnull\\\");\\n                                      disambiguator = 0 }\\n                                    ]\\n                                  }};\\n                              hir_id = None;\\n                              span =\\n                              { Types.filename =\\n                                (Types.Real\\n                                   (Types.LocalPath\\n                                      \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                                hi = { Types.col = \\\"84\\\"; line = \\\"174\\\" };\\n                                lo = { Types.col = \\\"74\\\"; line = \\\"174\\\" } };\\n                              ty =\\n                              (Types.Arrow\\n                                 { Types.bound_vars =\\n                                   [(Types.Region\\n                                       (Types.BrNamed\\n                                          ({ Types.index = (0, 1675);\\n                                             krate = \\\"sandwich\\\";\\n                                             path =\\n                                             [{ Types.data =\\n                                                (Types.TypeNs \\\"support\\\");\\n                                                disambiguator = 0 };\\n                                               { Types.data =\\n                                                 (Types.TypeNs \\\"pimpl\\\");\\n                                                 disambiguator = 0 };\\n                                               { Types.data = Types.Impl;\\n                                                 disambiguator = 2 };\\n                                               { Types.data =\\n                                                 (Types.ValueNs \\\"as_nonnull\\\");\\n                                                 disambiguator = 0 };\\n                                               { Types.data =\\n                                                 (Types.LifetimeNs \\\"'_\\\");\\n                                                 disambiguator = 0 }\\n                                               ]\\n                                             },\\n                                           \\\"'_\\\")))\\n                                     ];\\n                                   value =\\n                                   { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                                     c_variadic = false;\\n                                     inputs =\\n                                     [(Types.Ref\\n                                         ({ Types.kind =\\n                                            (Types.ReBound\\n                                               (\\\"0\\\",\\n                                                { Types.kind =\\n                                                  (Types.BrNamed\\n                                                     ({ Types.index =\\n                                                        (0, 1675);\\n                                                        krate = \\\"sandwich\\\";\\n                                                        path =\\n                                                        [{ Types.data =\\n                                                           (Types.TypeNs\\n                                                              \\\"support\\\");\\n                                                           disambiguator = 0\\n                                                           };\\n                                                          { Types.data =\\n                                                            (Types.TypeNs\\n                                                               \\\"pimpl\\\");\\n                                                            disambiguator = 0\\n                                                            };\\n                                                          { Types.data =\\n                                                            Types.Impl;\\n                                                            disambiguator = 2\\n                                                            };\\n                                                          { Types.data =\\n                                                            (Types.ValueNs\\n                                                               \\\"as_nonnull\\\");\\n                                                            disambiguator = 0\\n                                                            };\\n                                                          { Types.data =\\n                                                            (Types.LifetimeNs\\n                                                               \\\"'_\\\");\\n                                                            disambiguator = 0\\n                                                            }\\n                                                          ]\\n                                                        },\\n                                                      \\\"'_\\\"));\\n                                                  var = \\\"0\\\" }))\\n                                            },\\n                                          Types.Adt {\\n                                            def_id =\\n                                            { Types.index = (0, 628);\\n                                              krate = \\\"sandwich\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs \\\"support\\\");\\n                                                 disambiguator = 0 };\\n                                                { Types.data =\\n                                                  (Types.TypeNs \\\"pimpl\\\");\\n                                                  disambiguator = 0 };\\n                                                { Types.data =\\n                                                  (Types.TypeNs \\\"Pimpl\\\");\\n                                                  disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args =\\n                                            [(Types.Lifetime\\n                                                { Types.kind = Types.ReErased\\n                                                  });\\n                                              (Types.Type\\n                                                 Types.Adt {\\n                                                   def_id =\\n                                                   { Types.index =\\n                                                     (27, 20845);\\n                                                     krate = \\\"openssl3\\\";\\n                                                     path =\\n                                                     [{ Types.data =\\n                                                        (Types.TypeNs\\n                                                           \\\"ossl_provider_st\\\");\\n                                                        disambiguator = 0 }\\n                                                       ]\\n                                                     };\\n                                                   generic_args = [];\\n                                                   trait_refs = []})\\n                                              ];\\n                                            trait_refs =\\n                                            [{ Types.args = [];\\n                                               impl =\\n                                               Types.Builtin {\\n                                                 trait =\\n                                                 { Types.def_id =\\n                                                   { Types.index = (2, 26413);\\n                                                     krate = \\\"core\\\";\\n                                                     path =\\n                                                     [{ Types.data =\\n                                                        (Types.TypeNs\\n                                                           \\\"marker\\\");\\n                                                        disambiguator = 0 };\\n                                                       { Types.data =\\n                                                         (Types.TypeNs\\n                                                            \\\"Sized\\\");\\n                                                         disambiguator = 0 }\\n                                                       ]\\n                                                     };\\n                                                   generic_args =\\n                                                   [(Types.Type\\n                                                       Types.Adt {\\n                                                         def_id =\\n                                                         { Types.index =\\n                                                           (27, 20845);\\n                                                           krate = \\\"openssl3\\\";\\n                                                           path =\\n                                                           [{ Types.data =\\n                                                              (Types.TypeNs\\n                                                                 \\\"ossl_provider_st\\\");\\n                                                              disambiguator =\\n                                                              0 }\\n                                                             ]\\n                                                           };\\n                                                         generic_args = [];\\n                                                         trait_refs = []})\\n                                                     ]\\n                                                   }};\\n                                               trait =\\n                                               { Types.def_id =\\n                                                 { Types.index = (2, 26413);\\n                                                   krate = \\\"core\\\";\\n                                                   path =\\n                                                   [{ Types.data =\\n                                                      (Types.TypeNs \\\"marker\\\");\\n                                                      disambiguator = 0 };\\n                                                     { Types.data =\\n                                                       (Types.TypeNs \\\"Sized\\\");\\n                                                       disambiguator = 0 }\\n                                                     ]\\n                                                   };\\n                                                 generic_args =\\n                                                 [(Types.Type\\n                                                     Types.Adt {\\n                                                       def_id =\\n                                                       { Types.index =\\n                                                         (27, 20845);\\n                                                         krate = \\\"openssl3\\\";\\n                                                         path =\\n                                                         [{ Types.data =\\n                                                            (Types.TypeNs\\n                                                               \\\"ossl_provider_st\\\");\\n                                                            disambiguator = 0\\n                                                            }\\n                                                           ]\\n                                                         };\\n                                                       generic_args = [];\\n                                                       trait_refs = []})\\n                                                   ]\\n                                                 }\\n                                               }\\n                                              ]},\\n                                          false))\\n                                       ];\\n                                     output =\\n                                     Types.Adt {\\n                                       def_id =\\n                                       { Types.index = (2, 2222);\\n                                         krate = \\\"core\\\";\\n                                         path =\\n                                         [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                            disambiguator = 0 };\\n                                           { Types.data =\\n                                             (Types.TypeNs \\\"non_null\\\");\\n                                             disambiguator = 0 };\\n                                           { Types.data =\\n                                             (Types.TypeNs \\\"NonNull\\\");\\n                                             disambiguator = 0 }\\n                                           ]\\n                                         };\\n                                       generic_args =\\n                                       [(Types.Type\\n                                           Types.Adt {\\n                                             def_id =\\n                                             { Types.index = (27, 20845);\\n                                               krate = \\\"openssl3\\\";\\n                                               path =\\n                                               [{ Types.data =\\n                                                  (Types.TypeNs\\n                                                     \\\"ossl_provider_st\\\");\\n                                                  disambiguator = 0 }\\n                                                 ]\\n                                               };\\n                                             generic_args = [];\\n                                             trait_refs = []})\\n                                         ];\\n                                       trait_refs = []};\\n                                     safety = Types.Safe }\\n                                   })\\n                              };\\n                            generic_args =\\n                            [(Types.Lifetime { Types.kind = Types.ReErased });\\n                              (Types.Type\\n                                 Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (27, 20845);\\n                                     krate = \\\"openssl3\\\";\\n                                     path =\\n                                     [{ Types.data =\\n                                        (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                        disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args = []; trait_refs = []})\\n                              ];\\n                            trait = None;\\n                            ty =\\n                            (Types.Arrow\\n                               { Types.bound_vars =\\n                                 [(Types.Region\\n                                     (Types.BrNamed\\n                                        ({ Types.index = (0, 1675);\\n                                           krate = \\\"sandwich\\\";\\n                                           path =\\n                                           [{ Types.data =\\n                                              (Types.TypeNs \\\"support\\\");\\n                                              disambiguator = 0 };\\n                                             { Types.data =\\n                                               (Types.TypeNs \\\"pimpl\\\");\\n                                               disambiguator = 0 };\\n                                             { Types.data = Types.Impl;\\n                                               disambiguator = 2 };\\n                                             { Types.data =\\n                                               (Types.ValueNs \\\"as_nonnull\\\");\\n                                               disambiguator = 0 };\\n                                             { Types.data =\\n                                               (Types.LifetimeNs \\\"'_\\\");\\n                                               disambiguator = 0 }\\n                                             ]\\n                                           },\\n                                         \\\"'_\\\")))\\n                                   ];\\n                                 value =\\n                                 { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                                   c_variadic = false;\\n                                   inputs =\\n                                   [(Types.Ref\\n                                       ({ Types.kind =\\n                                          (Types.ReBound\\n                                             (\\\"0\\\",\\n                                              { Types.kind =\\n                                                (Types.BrNamed\\n                                                   ({ Types.index = (0, 1675);\\n                                                      krate = \\\"sandwich\\\";\\n                                                      path =\\n                                                      [{ Types.data =\\n                                                         (Types.TypeNs\\n                                                            \\\"support\\\");\\n                                                         disambiguator = 0 };\\n                                                        { Types.data =\\n                                                          (Types.TypeNs\\n                                                             \\\"pimpl\\\");\\n                                                          disambiguator = 0 };\\n                                                        { Types.data =\\n                                                          Types.Impl;\\n                                                          disambiguator = 2 };\\n                                                        { Types.data =\\n                                                          (Types.ValueNs\\n                                                             \\\"as_nonnull\\\");\\n                                                          disambiguator = 0 };\\n                                                        { Types.data =\\n                                                          (Types.LifetimeNs\\n                                                             \\\"'_\\\");\\n                                                          disambiguator = 0 }\\n                                                        ]\\n                                                      },\\n                                                    \\\"'_\\\"));\\n                                                var = \\\"0\\\" }))\\n                                          },\\n                                        Types.Adt {\\n                                          def_id =\\n                                          { Types.index = (0, 628);\\n                                            krate = \\\"sandwich\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs \\\"support\\\");\\n                                               disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"pimpl\\\");\\n                                                disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"Pimpl\\\");\\n                                                disambiguator = 0 }\\n                                              ]\\n                                            };\\n                                          generic_args =\\n                                          [(Types.Lifetime\\n                                              { Types.kind = Types.ReErased });\\n                                            (Types.Type\\n                                               Types.Adt {\\n                                                 def_id =\\n                                                 { Types.index = (27, 20845);\\n                                                   krate = \\\"openssl3\\\";\\n                                                   path =\\n                                                   [{ Types.data =\\n                                                      (Types.TypeNs\\n                                                         \\\"ossl_provider_st\\\");\\n                                                      disambiguator = 0 }\\n                                                     ]\\n                                                   };\\n                                                 generic_args = [];\\n                                                 trait_refs = []})\\n                                            ];\\n                                          trait_refs =\\n                                          [{ Types.args = [];\\n                                             impl =\\n                                             Types.Builtin {\\n                                               trait =\\n                                               { Types.def_id =\\n                                                 { Types.index = (2, 26413);\\n                                                   krate = \\\"core\\\";\\n                                                   path =\\n                                                   [{ Types.data =\\n                                                      (Types.TypeNs \\\"marker\\\");\\n                                                      disambiguator = 0 };\\n                                                     { Types.data =\\n                                                       (Types.TypeNs \\\"Sized\\\");\\n                                                       disambiguator = 0 }\\n                                                     ]\\n                                                   };\\n                                                 generic_args =\\n                                                 [(Types.Type\\n                                                     Types.Adt {\\n                                                       def_id =\\n                                                       { Types.index =\\n                                                         (27, 20845);\\n                                                         krate = \\\"openssl3\\\";\\n                                                         path =\\n                                                         [{ Types.data =\\n                                                            (Types.TypeNs\\n                                                               \\\"ossl_provider_st\\\");\\n                                                            disambiguator = 0\\n                                                            }\\n                                                           ]\\n                                                         };\\n                                                       generic_args = [];\\n                                                       trait_refs = []})\\n                                                   ]\\n                                                 }};\\n                                             trait =\\n                                             { Types.def_id =\\n                                               { Types.index = (2, 26413);\\n                                                 krate = \\\"core\\\";\\n                                                 path =\\n                                                 [{ Types.data =\\n                                                    (Types.TypeNs \\\"marker\\\");\\n                                                    disambiguator = 0 };\\n                                                   { Types.data =\\n                                                     (Types.TypeNs \\\"Sized\\\");\\n                                                     disambiguator = 0 }\\n                                                   ]\\n                                                 };\\n                                               generic_args =\\n                                               [(Types.Type\\n                                                   Types.Adt {\\n                                                     def_id =\\n                                                     { Types.index =\\n                                                       (27, 20845);\\n                                                       krate = \\\"openssl3\\\";\\n                                                       path =\\n                                                       [{ Types.data =\\n                                                          (Types.TypeNs\\n                                                             \\\"ossl_provider_st\\\");\\n                                                          disambiguator = 0 }\\n                                                         ]\\n                                                       };\\n                                                     generic_args = [];\\n                                                     trait_refs = []})\\n                                                 ]\\n                                               }\\n                                             }\\n                                            ]},\\n                                        false))\\n                                     ];\\n                                   output =\\n                                   Types.Adt {\\n                                     def_id =\\n                                     { Types.index = (2, 2222);\\n                                       krate = \\\"core\\\";\\n                                       path =\\n                                       [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                          disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"non_null\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"NonNull\\\");\\n                                           disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     generic_args =\\n                                     [(Types.Type\\n                                         Types.Adt {\\n                                           def_id =\\n                                           { Types.index = (27, 20845);\\n                                             krate = \\\"openssl3\\\";\\n                                             path =\\n                                             [{ Types.data =\\n                                                (Types.TypeNs\\n                                                   \\\"ossl_provider_st\\\");\\n                                                disambiguator = 0 }\\n                                               ]\\n                                             };\\n                                           generic_args = []; trait_refs = []})\\n                                       ];\\n                                     trait_refs = []};\\n                                   safety = Types.Safe }\\n                                 })};\\n                          hir_id = (Some (\\\"543\\\", \\\"222\\\"));\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath\\n                                  \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                            hi = { Types.col = \\\"86\\\"; line = \\\"174\\\" };\\n                            lo = { Types.col = \\\"59\\\"; line = \\\"174\\\" } };\\n                          ty =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.index = (2, 2222); krate = \\\"core\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                                  disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"NonNull\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args =\\n                            [(Types.Type\\n                                Types.Adt {\\n                                  def_id =\\n                                  { Types.index = (27, 20845);\\n                                    krate = \\\"openssl3\\\";\\n                                    path =\\n                                    [{ Types.data =\\n                                       (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                       disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args = []; trait_refs = []})\\n                              ];\\n                            trait_refs = []}\\n                          }\\n                         ];\\n                       bounds_impls = [];\\n                       fn_span =\\n                       { Types.filename =\\n                         (Types.Real\\n                            (Types.LocalPath\\n                               \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                         hi = { Types.col = \\\"95\\\"; line = \\\"174\\\" };\\n                         lo = { Types.col = \\\"87\\\"; line = \\\"174\\\" } };\\n                       from_hir_call = true;\\n                       fun' =\\n                       { Types.attributes = [];\\n                         contents =\\n                         Types.GlobalName {\\n                           id =\\n                           { Types.index = (2, 2245); krate = \\\"core\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = Types.Impl; disambiguator = 3 };\\n                               { Types.data = (Types.ValueNs \\\"as_ptr\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             }};\\n                         hir_id = None;\\n                         span =\\n                         { Types.filename =\\n                           (Types.Real\\n                              (Types.LocalPath\\n                                 \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                           hi = { Types.col = \\\"93\\\"; line = \\\"174\\\" };\\n                           lo = { Types.col = \\\"87\\\"; line = \\\"174\\\" } };\\n                         ty =\\n                         (Types.Arrow\\n                            { Types.bound_vars = [];\\n                              value =\\n                              { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                                c_variadic = false;\\n                                inputs =\\n                                [Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (2, 2222); krate = \\\"core\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                        disambiguator = 0 };\\n                                       { Types.data =\\n                                         (Types.TypeNs \\\"non_null\\\");\\n                                         disambiguator = 0 };\\n                                       { Types.data =\\n                                         (Types.TypeNs \\\"NonNull\\\");\\n                                         disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args =\\n                                   [(Types.Type\\n                                       Types.Adt {\\n                                         def_id =\\n                                         { Types.index = (27, 20845);\\n                                           krate = \\\"openssl3\\\";\\n                                           path =\\n                                           [{ Types.data =\\n                                              (Types.TypeNs\\n                                                 \\\"ossl_provider_st\\\");\\n                                              disambiguator = 0 }\\n                                             ]\\n                                           };\\n                                         generic_args = []; trait_refs = []})\\n                                     ];\\n                                   trait_refs = []}\\n                                  ];\\n                                output =\\n                                (Types.RawPtr\\n                                   (Types.Adt {\\n                                      def_id =\\n                                      { Types.index = (27, 20845);\\n                                        krate = \\\"openssl3\\\";\\n                                        path =\\n                                        [{ Types.data =\\n                                           (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                           disambiguator = 0 }\\n                                          ]\\n                                        };\\n                                      generic_args = []; trait_refs = []},\\n                                    true));\\n                                safety = Types.Safe }\\n                              })\\n                         };\\n                       generic_args =\\n                       [(Types.Type\\n                           Types.Adt {\\n                             def_id =\\n                             { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                               path =\\n                               [{ Types.data =\\n                                  (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                  disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []; trait_refs = []})\\n                         ];\\n                       trait = None;\\n                       ty =\\n                       (Types.Arrow\\n                          { Types.bound_vars = [];\\n                            value =\\n                            { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                              c_variadic = false;\\n                              inputs =\\n                              [Types.Adt {\\n                                 def_id =\\n                                 { Types.index = (2, 2222); krate = \\\"core\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                                       disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"NonNull\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args =\\n                                 [(Types.Type\\n                                     Types.Adt {\\n                                       def_id =\\n                                       { Types.index = (27, 20845);\\n                                         krate = \\\"openssl3\\\";\\n                                         path =\\n                                         [{ Types.data =\\n                                            (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                            disambiguator = 0 }\\n                                           ]\\n                                         };\\n                                       generic_args = []; trait_refs = []})\\n                                   ];\\n                                 trait_refs = []}\\n                                ];\\n                              output =\\n                              (Types.RawPtr\\n                                 (Types.Adt {\\n                                    def_id =\\n                                    { Types.index = (27, 20845);\\n                                      krate = \\\"openssl3\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                         disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args = []; trait_refs = []},\\n                                  true));\\n                              safety = Types.Safe }\\n                            })};\\n                     hir_id = None;\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath\\n                             \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                       hi = { Types.col = \\\"95\\\"; line = \\\"174\\\" };\\n                       lo = { Types.col = \\\"59\\\"; line = \\\"174\\\" } };\\n                     ty =\\n                     (Types.RawPtr\\n                        (Types.Adt {\\n                           def_id =\\n                           { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                             path =\\n                             [{ Types.data =\\n                                (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []; trait_refs = []},\\n                         true))\\n                     }};\\n                 hir_id = (Some (\\\"543\\\", \\\"220\\\"));\\n                 span =\\n                 { Types.filename =\\n                   (Types.Real\\n                      (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                   hi = { Types.col = \\\"95\\\"; line = \\\"174\\\" };\\n                   lo = { Types.col = \\\"59\\\"; line = \\\"174\\\" } };\\n                 ty =\\n                 (Types.RawPtr\\n                    (Types.Adt {\\n                       def_id =\\n                       { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"ossl_provider_st\\\");\\n                            disambiguator = 0 }\\n                           ]\\n                         };\\n                       generic_args = []; trait_refs = []},\\n                     false))\\n                 }\\n                ];\\n              bounds_impls = [];\\n              fn_span =\\n              { Types.filename =\\n                (Types.Real\\n                   (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                hi = { Types.col = \\\"96\\\"; line = \\\"174\\\" };\\n                lo = { Types.col = \\\"25\\\"; line = \\\"174\\\" } };\\n              from_hir_call = true;\\n              fun' =\\n              { Types.attributes = [];\\n                contents =\\n                Types.GlobalName {\\n                  id =\\n                  { Types.index = (27, 12689); krate = \\\"openssl3\\\";\\n                    path =\\n                    [{ Types.data = Types.ForeignMod; disambiguator = 700 };\\n                      { Types.data =\\n                        (Types.ValueNs \\\"OSSL_PROVIDER_get0_name\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real\\n                     (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                  hi = { Types.col = \\\"58\\\"; line = \\\"174\\\" };\\n                  lo = { Types.col = \\\"25\\\"; line = \\\"174\\\" } };\\n                ty =\\n                (Types.Arrow\\n                   { Types.bound_vars = [];\\n                     value =\\n                     { Types.abi = Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                       c_variadic = false;\\n                       inputs =\\n                       [(Types.RawPtr\\n                           (Types.Adt {\\n                              def_id =\\n                              { Types.index = (27, 20845);\\n                                krate = \\\"openssl3\\\";\\n                                path =\\n                                [{ Types.data =\\n                                   (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                   disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []; trait_refs = []},\\n                            false))\\n                         ];\\n                       output = (Types.RawPtr ((Types.Int Types.I8), false));\\n                       safety = Types.Unsafe }\\n                     })\\n                };\\n              generic_args = []; trait = None;\\n              ty =\\n              (Types.Arrow\\n                 { Types.bound_vars = [];\\n                   value =\\n                   { Types.abi = Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                     c_variadic = false;\\n                     inputs =\\n                     [(Types.RawPtr\\n                         (Types.Adt {\\n                            def_id =\\n                            { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                              path =\\n                              [{ Types.data =\\n                                 (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []; trait_refs = []},\\n                          false))\\n                       ];\\n                     output = (Types.RawPtr ((Types.Int Types.I8), false));\\n                     safety = Types.Unsafe }\\n                   })};\\n            hir_id = (Some (\\\"543\\\", \\\"216\\\"));\\n            span =\\n            { Types.filename =\\n              (Types.Real\\n                 (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n              hi = { Types.col = \\\"96\\\"; line = \\\"174\\\" };\\n              lo = { Types.col = \\\"25\\\"; line = \\\"174\\\" } };\\n            ty = (Types.RawPtr ((Types.Int Types.I8), false)) });\\n    region_scope = { Types.data = Types.Node; id = \\\"227\\\" };\\n    safety_mode = Types.ExplicitUnsafe;\\n    span =\\n    { Types.filename =\\n      (Types.Real (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n      hi = { Types.col = \\\"98\\\"; line = \\\"174\\\" };\\n      lo = { Types.col = \\\"16\\\"; line = \\\"174\\\" } };\\n    stmts = []; targeted_by_break = false};\\n  hir_id = (Some (\\\"543\\\", \\\"215\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n    hi = { Types.col = \\\"98\\\"; line = \\\"174\\\" };\\n    lo = { Types.col = \\\"16\\\"; line = \\\"174\\\" } };\\n  ty = (Types.RawPtr ((Types.Int Types.I8), false)) }\",\n            )\n        };\n        {\n            let _: tuple0 = {\n                (if core::ptr::const_ptr::impl__is_null::<int>(name) {\n                    rust_primitives::hax::never_to_any({\n                        (return core::result::Result_Err(\n                            core::convert::f_into(\n                                Tuple2(\n                                    sandwich_proto::errors::SystemError_SYSTEMERROR_MEMORY(),\n                                    \"provider's name is null\",\n                                ),\n                            ),\n                        ))\n                    })\n                })\n            };\n            {\n                let name: &core::ffi::c_str::t_CStr = {\n                    rust_primitives::hax::failure(\n                        \"(AST import) Unsafe blocks are not allowed.\",\n                        \"{ Types.attributes = [];\\n  contents =\\n  Types.Block {\\n    expr =\\n    (Some { Types.attributes = [];\\n            contents =\\n            Types.Call {\\n              args =\\n              [{ Types.attributes = [];\\n                 contents =\\n                 Types.VarRef {\\n                   id =\\n                   { Types.id =\\n                     { Types.local_id = \\\"229\\\";\\n                       owner =\\n                       { Types.index = (0, 543); krate = \\\"sandwich\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"implementation\\\");\\n                            disambiguator = 0 };\\n                           { Types.data = (Types.TypeNs \\\"openssl3\\\");\\n                             disambiguator = 0 };\\n                           { Types.data = Types.Impl; disambiguator = 3 };\\n                           { Types.data = (Types.ValueNs \\\"try_new\\\");\\n                             disambiguator = 0 }\\n                           ]\\n                         }\\n                       };\\n                     name = \\\"name\\\" }};\\n                 hir_id = (Some (\\\"543\\\", \\\"261\\\"));\\n                 span =\\n                 { Types.filename =\\n                   (Types.Real\\n                      (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                   hi = { Types.col = \\\"61\\\"; line = \\\"182\\\" };\\n                   lo = { Types.col = \\\"57\\\"; line = \\\"182\\\" } };\\n                 ty = (Types.RawPtr ((Types.Int Types.I8), false)) }\\n                ];\\n              bounds_impls = [];\\n              fn_span =\\n              { Types.filename =\\n                (Types.Real\\n                   (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                hi = { Types.col = \\\"62\\\"; line = \\\"182\\\" };\\n                lo = { Types.col = \\\"32\\\"; line = \\\"182\\\" } };\\n              from_hir_call = true;\\n              fun' =\\n              { Types.attributes = [];\\n                contents =\\n                Types.GlobalName {\\n                  id =\\n                  { Types.index = (2, 5259); krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"ffi\\\"); disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"c_str\\\");\\n                        disambiguator = 0 };\\n                      { Types.data = Types.Impl; disambiguator = 6 };\\n                      { Types.data = (Types.ValueNs \\\"from_ptr\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real\\n                     (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                  hi = { Types.col = \\\"56\\\"; line = \\\"182\\\" };\\n                  lo = { Types.col = \\\"32\\\"; line = \\\"182\\\" } };\\n                ty =\\n                (Types.Arrow\\n                   { Types.bound_vars = [];\\n                     value =\\n                     { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                       c_variadic = false;\\n                       inputs =\\n                       [(Types.RawPtr ((Types.Int Types.I8), false))];\\n                       output =\\n                       (Types.Ref\\n                          ({ Types.kind = Types.ReErased },\\n                           Types.Adt {\\n                             def_id =\\n                             { Types.index = (2, 34717); krate = \\\"core\\\";\\n                               path =\\n                               [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                                  disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"c_str\\\");\\n                                   disambiguator = 0 };\\n                                 { Types.data = (Types.TypeNs \\\"CStr\\\");\\n                                   disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []; trait_refs = []},\\n                           false));\\n                       safety = Types.Unsafe }\\n                     })\\n                };\\n              generic_args =\\n              [(Types.Lifetime { Types.kind = Types.ReErased })];\\n              trait = None;\\n              ty =\\n              (Types.Arrow\\n                 { Types.bound_vars = [];\\n                   value =\\n                   { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                     c_variadic = false;\\n                     inputs = [(Types.RawPtr ((Types.Int Types.I8), false))];\\n                     output =\\n                     (Types.Ref\\n                        ({ Types.kind = Types.ReErased },\\n                         Types.Adt {\\n                           def_id =\\n                           { Types.index = (2, 34717); krate = \\\"core\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"ffi\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"c_str\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"CStr\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []; trait_refs = []},\\n                         false));\\n                     safety = Types.Unsafe }\\n                   })};\\n            hir_id = (Some (\\\"543\\\", \\\"254\\\"));\\n            span =\\n            { Types.filename =\\n              (Types.Real\\n                 (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n              hi = { Types.col = \\\"62\\\"; line = \\\"182\\\" };\\n              lo = { Types.col = \\\"32\\\"; line = \\\"182\\\" } };\\n            ty =\\n            (Types.Ref\\n               ({ Types.kind = Types.ReErased },\\n                Types.Adt {\\n                  def_id =\\n                  { Types.index = (2, 34717); krate = \\\"core\\\";\\n                    path =\\n                    [{ Types.data = (Types.TypeNs \\\"ffi\\\"); disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"c_str\\\");\\n                        disambiguator = 0 };\\n                      { Types.data = (Types.TypeNs \\\"CStr\\\"); disambiguator = 0\\n                        }\\n                      ]\\n                    };\\n                  generic_args = []; trait_refs = []},\\n                false))\\n            });\\n    region_scope = { Types.data = Types.Node; id = \\\"263\\\" };\\n    safety_mode = Types.ExplicitUnsafe;\\n    span =\\n    { Types.filename =\\n      (Types.Real (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n      hi = { Types.col = \\\"64\\\"; line = \\\"182\\\" };\\n      lo = { Types.col = \\\"23\\\"; line = \\\"182\\\" } };\\n    stmts = []; targeted_by_break = false};\\n  hir_id = (Some (\\\"543\\\", \\\"253\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n    hi = { Types.col = \\\"64\\\"; line = \\\"182\\\" };\\n    lo = { Types.col = \\\"23\\\"; line = \\\"182\\\" } };\\n  ty =\\n  (Types.Ref\\n     ({ Types.kind = Types.ReErased },\\n      Types.Adt {\\n        def_id =\\n        { Types.index = (2, 34717); krate = \\\"core\\\";\\n          path =\\n          [{ Types.data = (Types.TypeNs \\\"ffi\\\"); disambiguator = 0 };\\n            { Types.data = (Types.TypeNs \\\"c_str\\\"); disambiguator = 0 };\\n            { Types.data = (Types.TypeNs \\\"CStr\\\"); disambiguator = 0 }]\\n          };\\n        generic_args = []; trait_refs = []},\\n      false))\\n  }\",\n                    )\n                };\n                {\n                    let _: tuple0 = {\n                        (if core::cmp::f_ne(\n                            &(core::ffi::c_str::impl__CStr__to_str(&(deref(name)))),\n                            &(core::result::Result_Ok(&(deref(\"oqsprovider\")))),\n                        ) {\n                            rust_primitives::hax::never_to_any({\n                                (return core::result::Result_Err(\n                                    core::convert::f_into(\n                                        Tuple2(\n                                            sandwich_proto::errors::SystemError_SYSTEMERROR_MEMORY(),\n                                            {\n                                                let res: alloc::string::t_String = {\n                                                    alloc::fmt::format(\n                                                        core::fmt::impl_2__new_v1::<\n                                                            lifetime!(something),\n                                                            generic_value!(todo),\n                                                            generic_value!(todo),\n                                                        >(\n                                                            &(deref(\n                                                                &([\"provider's name does not match 'oqsprovider': got \"]),\n                                                            )),\n                                                            &(deref(\n                                                                &([\n                                                                    core::fmt::rt::impl_1__new_debug::<\n                                                                        lifetime!(something),\n                                                                        &core::ffi::c_str::t_CStr,\n                                                                    >(&(deref(&(name)))),\n                                                                ]),\n                                                            )),\n                                                        ),\n                                                    )\n                                                };\n                                                { res }\n                                            },\n                                        ),\n                                    ),\n                                ))\n                            })\n                        })\n                    };\n                    {\n                        (if core::cmp::PartialEq::ne(\n                            rust_primitives::hax::failure(\n                                \"(AST import) Unsafe blocks are not allowed.\",\n                                \"{ Types.attributes = [];\\n  contents =\\n  Types.Block {\\n    expr =\\n    (Some { Types.attributes = [];\\n            contents =\\n            Types.Call {\\n              args =\\n              [{ Types.attributes = [];\\n                 contents =\\n                 Types.PointerCoercion {cast = Types.MutToConstPointer;\\n                   source =\\n                   { Types.attributes = [];\\n                     contents =\\n                     Types.Call {\\n                       args =\\n                       [{ Types.attributes = [];\\n                          contents =\\n                          Types.Call {\\n                            args =\\n                            [{ Types.attributes = [];\\n                               contents =\\n                               Types.Borrow {\\n                                 arg =\\n                                 { Types.attributes = [];\\n                                   contents =\\n                                   Types.Field {\\n                                     field =\\n                                     { Types.index = (0, 520);\\n                                       krate = \\\"sandwich\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.TypeNs \\\"implementation\\\");\\n                                          disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"openssl3\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"Provider\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data = (Types.ValueNs \\\"0\\\");\\n                                           disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     lhs =\\n                                     { Types.attributes = [];\\n                                       contents =\\n                                       Types.VarRef {\\n                                         id =\\n                                         { Types.id =\\n                                           { Types.local_id = \\\"212\\\";\\n                                             owner =\\n                                             { Types.index = (0, 543);\\n                                               krate = \\\"sandwich\\\";\\n                                               path =\\n                                               [{ Types.data =\\n                                                  (Types.TypeNs\\n                                                     \\\"implementation\\\");\\n                                                  disambiguator = 0 };\\n                                                 { Types.data =\\n                                                   (Types.TypeNs \\\"openssl3\\\");\\n                                                   disambiguator = 0 };\\n                                                 { Types.data = Types.Impl;\\n                                                   disambiguator = 3 };\\n                                                 { Types.data =\\n                                                   (Types.ValueNs \\\"try_new\\\");\\n                                                   disambiguator = 0 }\\n                                                 ]\\n                                               }\\n                                             };\\n                                           name = \\\"oqs_provider\\\" }};\\n                                       hir_id = (Some (\\\"543\\\", \\\"334\\\"));\\n                                       span =\\n                                       { Types.filename =\\n                                         (Types.Real\\n                                            (Types.LocalPath\\n                                               \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                                         hi =\\n                                         { Types.col = \\\"70\\\"; line = \\\"190\\\" };\\n                                         lo =\\n                                         { Types.col = \\\"58\\\"; line = \\\"190\\\" } };\\n                                       ty =\\n                                       Types.Adt {\\n                                         def_id =\\n                                         { Types.index = (0, 517);\\n                                           krate = \\\"sandwich\\\";\\n                                           path =\\n                                           [{ Types.data =\\n                                              (Types.TypeNs \\\"implementation\\\");\\n                                              disambiguator = 0 };\\n                                             { Types.data =\\n                                               (Types.TypeNs \\\"openssl3\\\");\\n                                               disambiguator = 0 };\\n                                             { Types.data =\\n                                               (Types.TypeNs \\\"Provider\\\");\\n                                               disambiguator = 0 }\\n                                             ]\\n                                           };\\n                                         generic_args =\\n                                         [(Types.Lifetime\\n                                             { Types.kind = Types.ReErased })\\n                                           ];\\n                                         trait_refs = []}\\n                                       }};\\n                                   hir_id = None;\\n                                   span =\\n                                   { Types.filename =\\n                                     (Types.Real\\n                                        (Types.LocalPath\\n                                           \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                                     hi = { Types.col = \\\"72\\\"; line = \\\"190\\\" };\\n                                     lo = { Types.col = \\\"58\\\"; line = \\\"190\\\" }\\n                                     };\\n                                   ty =\\n                                   Types.Adt {\\n                                     def_id =\\n                                     { Types.index = (0, 628);\\n                                       krate = \\\"sandwich\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.TypeNs \\\"support\\\");\\n                                          disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"pimpl\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"Pimpl\\\");\\n                                           disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     generic_args =\\n                                     [(Types.Lifetime\\n                                         { Types.kind = Types.ReErased });\\n                                       (Types.Type\\n                                          Types.Adt {\\n                                            def_id =\\n                                            { Types.index = (27, 20845);\\n                                              krate = \\\"openssl3\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs\\n                                                    \\\"ossl_provider_st\\\");\\n                                                 disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args = [];\\n                                            trait_refs = []})\\n                                       ];\\n                                     trait_refs =\\n                                     [{ Types.args = [];\\n                                        impl =\\n                                        Types.Builtin {\\n                                          trait =\\n                                          { Types.def_id =\\n                                            { Types.index = (2, 26413);\\n                                              krate = \\\"core\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs \\\"marker\\\");\\n                                                 disambiguator = 0 };\\n                                                { Types.data =\\n                                                  (Types.TypeNs \\\"Sized\\\");\\n                                                  disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args =\\n                                            [(Types.Type\\n                                                Types.Adt {\\n                                                  def_id =\\n                                                  { Types.index = (27, 20845);\\n                                                    krate = \\\"openssl3\\\";\\n                                                    path =\\n                                                    [{ Types.data =\\n                                                       (Types.TypeNs\\n                                                          \\\"ossl_provider_st\\\");\\n                                                       disambiguator = 0 }\\n                                                      ]\\n                                                    };\\n                                                  generic_args = [];\\n                                                  trait_refs = []})\\n                                              ]\\n                                            }};\\n                                        trait =\\n                                        { Types.def_id =\\n                                          { Types.index = (2, 26413);\\n                                            krate = \\\"core\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs \\\"marker\\\");\\n                                               disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"Sized\\\");\\n                                                disambiguator = 0 }\\n                                              ]\\n                                            };\\n                                          generic_args =\\n                                          [(Types.Type\\n                                              Types.Adt {\\n                                                def_id =\\n                                                { Types.index = (27, 20845);\\n                                                  krate = \\\"openssl3\\\";\\n                                                  path =\\n                                                  [{ Types.data =\\n                                                     (Types.TypeNs\\n                                                        \\\"ossl_provider_st\\\");\\n                                                     disambiguator = 0 }\\n                                                    ]\\n                                                  };\\n                                                generic_args = [];\\n                                                trait_refs = []})\\n                                            ]\\n                                          }\\n                                        }\\n                                       ]}\\n                                   };\\n                                 borrow_kind = Types.Shared};\\n                               hir_id = (Some (\\\"543\\\", \\\"333\\\"));\\n                               span =\\n                               { Types.filename =\\n                                 (Types.Real\\n                                    (Types.LocalPath\\n                                       \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                                 hi = { Types.col = \\\"72\\\"; line = \\\"190\\\" };\\n                                 lo = { Types.col = \\\"58\\\"; line = \\\"190\\\" } };\\n                               ty =\\n                               (Types.Ref\\n                                  ({ Types.kind = Types.ReErased },\\n                                   Types.Adt {\\n                                     def_id =\\n                                     { Types.index = (0, 628);\\n                                       krate = \\\"sandwich\\\";\\n                                       path =\\n                                       [{ Types.data =\\n                                          (Types.TypeNs \\\"support\\\");\\n                                          disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"pimpl\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"Pimpl\\\");\\n                                           disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     generic_args =\\n                                     [(Types.Lifetime\\n                                         { Types.kind = Types.ReErased });\\n                                       (Types.Type\\n                                          Types.Adt {\\n                                            def_id =\\n                                            { Types.index = (27, 20845);\\n                                              krate = \\\"openssl3\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs\\n                                                    \\\"ossl_provider_st\\\");\\n                                                 disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args = [];\\n                                            trait_refs = []})\\n                                       ];\\n                                     trait_refs =\\n                                     [{ Types.args = [];\\n                                        impl =\\n                                        Types.Builtin {\\n                                          trait =\\n                                          { Types.def_id =\\n                                            { Types.index = (2, 26413);\\n                                              krate = \\\"core\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs \\\"marker\\\");\\n                                                 disambiguator = 0 };\\n                                                { Types.data =\\n                                                  (Types.TypeNs \\\"Sized\\\");\\n                                                  disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args =\\n                                            [(Types.Type\\n                                                Types.Adt {\\n                                                  def_id =\\n                                                  { Types.index = (27, 20845);\\n                                                    krate = \\\"openssl3\\\";\\n                                                    path =\\n                                                    [{ Types.data =\\n                                                       (Types.TypeNs\\n                                                          \\\"ossl_provider_st\\\");\\n                                                       disambiguator = 0 }\\n                                                      ]\\n                                                    };\\n                                                  generic_args = [];\\n                                                  trait_refs = []})\\n                                              ]\\n                                            }};\\n                                        trait =\\n                                        { Types.def_id =\\n                                          { Types.index = (2, 26413);\\n                                            krate = \\\"core\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs \\\"marker\\\");\\n                                               disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"Sized\\\");\\n                                                disambiguator = 0 }\\n                                              ]\\n                                            };\\n                                          generic_args =\\n                                          [(Types.Type\\n                                              Types.Adt {\\n                                                def_id =\\n                                                { Types.index = (27, 20845);\\n                                                  krate = \\\"openssl3\\\";\\n                                                  path =\\n                                                  [{ Types.data =\\n                                                     (Types.TypeNs\\n                                                        \\\"ossl_provider_st\\\");\\n                                                     disambiguator = 0 }\\n                                                    ]\\n                                                  };\\n                                                generic_args = [];\\n                                                trait_refs = []})\\n                                            ]\\n                                          }\\n                                        }\\n                                       ]},\\n                                   false))\\n                               }\\n                              ];\\n                            bounds_impls = [];\\n                            fn_span =\\n                            { Types.filename =\\n                              (Types.Real\\n                                 (Types.LocalPath\\n                                    \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                              hi = { Types.col = \\\"85\\\"; line = \\\"190\\\" };\\n                              lo = { Types.col = \\\"73\\\"; line = \\\"190\\\" } };\\n                            from_hir_call = true;\\n                            fun' =\\n                            { Types.attributes = [];\\n                              contents =\\n                              Types.GlobalName {\\n                                id =\\n                                { Types.index = (0, 644); krate = \\\"sandwich\\\";\\n                                  path =\\n                                  [{ Types.data = (Types.TypeNs \\\"support\\\");\\n                                     disambiguator = 0 };\\n                                    { Types.data = (Types.TypeNs \\\"pimpl\\\");\\n                                      disambiguator = 0 };\\n                                    { Types.data = Types.Impl;\\n                                      disambiguator = 2 };\\n                                    { Types.data =\\n                                      (Types.ValueNs \\\"as_nonnull\\\");\\n                                      disambiguator = 0 }\\n                                    ]\\n                                  }};\\n                              hir_id = None;\\n                              span =\\n                              { Types.filename =\\n                                (Types.Real\\n                                   (Types.LocalPath\\n                                      \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                                hi = { Types.col = \\\"83\\\"; line = \\\"190\\\" };\\n                                lo = { Types.col = \\\"73\\\"; line = \\\"190\\\" } };\\n                              ty =\\n                              (Types.Arrow\\n                                 { Types.bound_vars =\\n                                   [(Types.Region\\n                                       (Types.BrNamed\\n                                          ({ Types.index = (0, 1675);\\n                                             krate = \\\"sandwich\\\";\\n                                             path =\\n                                             [{ Types.data =\\n                                                (Types.TypeNs \\\"support\\\");\\n                                                disambiguator = 0 };\\n                                               { Types.data =\\n                                                 (Types.TypeNs \\\"pimpl\\\");\\n                                                 disambiguator = 0 };\\n                                               { Types.data = Types.Impl;\\n                                                 disambiguator = 2 };\\n                                               { Types.data =\\n                                                 (Types.ValueNs \\\"as_nonnull\\\");\\n                                                 disambiguator = 0 };\\n                                               { Types.data =\\n                                                 (Types.LifetimeNs \\\"'_\\\");\\n                                                 disambiguator = 0 }\\n                                               ]\\n                                             },\\n                                           \\\"'_\\\")))\\n                                     ];\\n                                   value =\\n                                   { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                                     c_variadic = false;\\n                                     inputs =\\n                                     [(Types.Ref\\n                                         ({ Types.kind =\\n                                            (Types.ReBound\\n                                               (\\\"0\\\",\\n                                                { Types.kind =\\n                                                  (Types.BrNamed\\n                                                     ({ Types.index =\\n                                                        (0, 1675);\\n                                                        krate = \\\"sandwich\\\";\\n                                                        path =\\n                                                        [{ Types.data =\\n                                                           (Types.TypeNs\\n                                                              \\\"support\\\");\\n                                                           disambiguator = 0\\n                                                           };\\n                                                          { Types.data =\\n                                                            (Types.TypeNs\\n                                                               \\\"pimpl\\\");\\n                                                            disambiguator = 0\\n                                                            };\\n                                                          { Types.data =\\n                                                            Types.Impl;\\n                                                            disambiguator = 2\\n                                                            };\\n                                                          { Types.data =\\n                                                            (Types.ValueNs\\n                                                               \\\"as_nonnull\\\");\\n                                                            disambiguator = 0\\n                                                            };\\n                                                          { Types.data =\\n                                                            (Types.LifetimeNs\\n                                                               \\\"'_\\\");\\n                                                            disambiguator = 0\\n                                                            }\\n                                                          ]\\n                                                        },\\n                                                      \\\"'_\\\"));\\n                                                  var = \\\"0\\\" }))\\n                                            },\\n                                          Types.Adt {\\n                                            def_id =\\n                                            { Types.index = (0, 628);\\n                                              krate = \\\"sandwich\\\";\\n                                              path =\\n                                              [{ Types.data =\\n                                                 (Types.TypeNs \\\"support\\\");\\n                                                 disambiguator = 0 };\\n                                                { Types.data =\\n                                                  (Types.TypeNs \\\"pimpl\\\");\\n                                                  disambiguator = 0 };\\n                                                { Types.data =\\n                                                  (Types.TypeNs \\\"Pimpl\\\");\\n                                                  disambiguator = 0 }\\n                                                ]\\n                                              };\\n                                            generic_args =\\n                                            [(Types.Lifetime\\n                                                { Types.kind = Types.ReErased\\n                                                  });\\n                                              (Types.Type\\n                                                 Types.Adt {\\n                                                   def_id =\\n                                                   { Types.index =\\n                                                     (27, 20845);\\n                                                     krate = \\\"openssl3\\\";\\n                                                     path =\\n                                                     [{ Types.data =\\n                                                        (Types.TypeNs\\n                                                           \\\"ossl_provider_st\\\");\\n                                                        disambiguator = 0 }\\n                                                       ]\\n                                                     };\\n                                                   generic_args = [];\\n                                                   trait_refs = []})\\n                                              ];\\n                                            trait_refs =\\n                                            [{ Types.args = [];\\n                                               impl =\\n                                               Types.Builtin {\\n                                                 trait =\\n                                                 { Types.def_id =\\n                                                   { Types.index = (2, 26413);\\n                                                     krate = \\\"core\\\";\\n                                                     path =\\n                                                     [{ Types.data =\\n                                                        (Types.TypeNs\\n                                                           \\\"marker\\\");\\n                                                        disambiguator = 0 };\\n                                                       { Types.data =\\n                                                         (Types.TypeNs\\n                                                            \\\"Sized\\\");\\n                                                         disambiguator = 0 }\\n                                                       ]\\n                                                     };\\n                                                   generic_args =\\n                                                   [(Types.Type\\n                                                       Types.Adt {\\n                                                         def_id =\\n                                                         { Types.index =\\n                                                           (27, 20845);\\n                                                           krate = \\\"openssl3\\\";\\n                                                           path =\\n                                                           [{ Types.data =\\n                                                              (Types.TypeNs\\n                                                                 \\\"ossl_provider_st\\\");\\n                                                              disambiguator =\\n                                                              0 }\\n                                                             ]\\n                                                           };\\n                                                         generic_args = [];\\n                                                         trait_refs = []})\\n                                                     ]\\n                                                   }};\\n                                               trait =\\n                                               { Types.def_id =\\n                                                 { Types.index = (2, 26413);\\n                                                   krate = \\\"core\\\";\\n                                                   path =\\n                                                   [{ Types.data =\\n                                                      (Types.TypeNs \\\"marker\\\");\\n                                                      disambiguator = 0 };\\n                                                     { Types.data =\\n                                                       (Types.TypeNs \\\"Sized\\\");\\n                                                       disambiguator = 0 }\\n                                                     ]\\n                                                   };\\n                                                 generic_args =\\n                                                 [(Types.Type\\n                                                     Types.Adt {\\n                                                       def_id =\\n                                                       { Types.index =\\n                                                         (27, 20845);\\n                                                         krate = \\\"openssl3\\\";\\n                                                         path =\\n                                                         [{ Types.data =\\n                                                            (Types.TypeNs\\n                                                               \\\"ossl_provider_st\\\");\\n                                                            disambiguator = 0\\n                                                            }\\n                                                           ]\\n                                                         };\\n                                                       generic_args = [];\\n                                                       trait_refs = []})\\n                                                   ]\\n                                                 }\\n                                               }\\n                                              ]},\\n                                          false))\\n                                       ];\\n                                     output =\\n                                     Types.Adt {\\n                                       def_id =\\n                                       { Types.index = (2, 2222);\\n                                         krate = \\\"core\\\";\\n                                         path =\\n                                         [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                            disambiguator = 0 };\\n                                           { Types.data =\\n                                             (Types.TypeNs \\\"non_null\\\");\\n                                             disambiguator = 0 };\\n                                           { Types.data =\\n                                             (Types.TypeNs \\\"NonNull\\\");\\n                                             disambiguator = 0 }\\n                                           ]\\n                                         };\\n                                       generic_args =\\n                                       [(Types.Type\\n                                           Types.Adt {\\n                                             def_id =\\n                                             { Types.index = (27, 20845);\\n                                               krate = \\\"openssl3\\\";\\n                                               path =\\n                                               [{ Types.data =\\n                                                  (Types.TypeNs\\n                                                     \\\"ossl_provider_st\\\");\\n                                                  disambiguator = 0 }\\n                                                 ]\\n                                               };\\n                                             generic_args = [];\\n                                             trait_refs = []})\\n                                         ];\\n                                       trait_refs = []};\\n                                     safety = Types.Safe }\\n                                   })\\n                              };\\n                            generic_args =\\n                            [(Types.Lifetime { Types.kind = Types.ReErased });\\n                              (Types.Type\\n                                 Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (27, 20845);\\n                                     krate = \\\"openssl3\\\";\\n                                     path =\\n                                     [{ Types.data =\\n                                        (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                        disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args = []; trait_refs = []})\\n                              ];\\n                            trait = None;\\n                            ty =\\n                            (Types.Arrow\\n                               { Types.bound_vars =\\n                                 [(Types.Region\\n                                     (Types.BrNamed\\n                                        ({ Types.index = (0, 1675);\\n                                           krate = \\\"sandwich\\\";\\n                                           path =\\n                                           [{ Types.data =\\n                                              (Types.TypeNs \\\"support\\\");\\n                                              disambiguator = 0 };\\n                                             { Types.data =\\n                                               (Types.TypeNs \\\"pimpl\\\");\\n                                               disambiguator = 0 };\\n                                             { Types.data = Types.Impl;\\n                                               disambiguator = 2 };\\n                                             { Types.data =\\n                                               (Types.ValueNs \\\"as_nonnull\\\");\\n                                               disambiguator = 0 };\\n                                             { Types.data =\\n                                               (Types.LifetimeNs \\\"'_\\\");\\n                                               disambiguator = 0 }\\n                                             ]\\n                                           },\\n                                         \\\"'_\\\")))\\n                                   ];\\n                                 value =\\n                                 { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                                   c_variadic = false;\\n                                   inputs =\\n                                   [(Types.Ref\\n                                       ({ Types.kind =\\n                                          (Types.ReBound\\n                                             (\\\"0\\\",\\n                                              { Types.kind =\\n                                                (Types.BrNamed\\n                                                   ({ Types.index = (0, 1675);\\n                                                      krate = \\\"sandwich\\\";\\n                                                      path =\\n                                                      [{ Types.data =\\n                                                         (Types.TypeNs\\n                                                            \\\"support\\\");\\n                                                         disambiguator = 0 };\\n                                                        { Types.data =\\n                                                          (Types.TypeNs\\n                                                             \\\"pimpl\\\");\\n                                                          disambiguator = 0 };\\n                                                        { Types.data =\\n                                                          Types.Impl;\\n                                                          disambiguator = 2 };\\n                                                        { Types.data =\\n                                                          (Types.ValueNs\\n                                                             \\\"as_nonnull\\\");\\n                                                          disambiguator = 0 };\\n                                                        { Types.data =\\n                                                          (Types.LifetimeNs\\n                                                             \\\"'_\\\");\\n                                                          disambiguator = 0 }\\n                                                        ]\\n                                                      },\\n                                                    \\\"'_\\\"));\\n                                                var = \\\"0\\\" }))\\n                                          },\\n                                        Types.Adt {\\n                                          def_id =\\n                                          { Types.index = (0, 628);\\n                                            krate = \\\"sandwich\\\";\\n                                            path =\\n                                            [{ Types.data =\\n                                               (Types.TypeNs \\\"support\\\");\\n                                               disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"pimpl\\\");\\n                                                disambiguator = 0 };\\n                                              { Types.data =\\n                                                (Types.TypeNs \\\"Pimpl\\\");\\n                                                disambiguator = 0 }\\n                                              ]\\n                                            };\\n                                          generic_args =\\n                                          [(Types.Lifetime\\n                                              { Types.kind = Types.ReErased });\\n                                            (Types.Type\\n                                               Types.Adt {\\n                                                 def_id =\\n                                                 { Types.index = (27, 20845);\\n                                                   krate = \\\"openssl3\\\";\\n                                                   path =\\n                                                   [{ Types.data =\\n                                                      (Types.TypeNs\\n                                                         \\\"ossl_provider_st\\\");\\n                                                      disambiguator = 0 }\\n                                                     ]\\n                                                   };\\n                                                 generic_args = [];\\n                                                 trait_refs = []})\\n                                            ];\\n                                          trait_refs =\\n                                          [{ Types.args = [];\\n                                             impl =\\n                                             Types.Builtin {\\n                                               trait =\\n                                               { Types.def_id =\\n                                                 { Types.index = (2, 26413);\\n                                                   krate = \\\"core\\\";\\n                                                   path =\\n                                                   [{ Types.data =\\n                                                      (Types.TypeNs \\\"marker\\\");\\n                                                      disambiguator = 0 };\\n                                                     { Types.data =\\n                                                       (Types.TypeNs \\\"Sized\\\");\\n                                                       disambiguator = 0 }\\n                                                     ]\\n                                                   };\\n                                                 generic_args =\\n                                                 [(Types.Type\\n                                                     Types.Adt {\\n                                                       def_id =\\n                                                       { Types.index =\\n                                                         (27, 20845);\\n                                                         krate = \\\"openssl3\\\";\\n                                                         path =\\n                                                         [{ Types.data =\\n                                                            (Types.TypeNs\\n                                                               \\\"ossl_provider_st\\\");\\n                                                            disambiguator = 0\\n                                                            }\\n                                                           ]\\n                                                         };\\n                                                       generic_args = [];\\n                                                       trait_refs = []})\\n                                                   ]\\n                                                 }};\\n                                             trait =\\n                                             { Types.def_id =\\n                                               { Types.index = (2, 26413);\\n                                                 krate = \\\"core\\\";\\n                                                 path =\\n                                                 [{ Types.data =\\n                                                    (Types.TypeNs \\\"marker\\\");\\n                                                    disambiguator = 0 };\\n                                                   { Types.data =\\n                                                     (Types.TypeNs \\\"Sized\\\");\\n                                                     disambiguator = 0 }\\n                                                   ]\\n                                                 };\\n                                               generic_args =\\n                                               [(Types.Type\\n                                                   Types.Adt {\\n                                                     def_id =\\n                                                     { Types.index =\\n                                                       (27, 20845);\\n                                                       krate = \\\"openssl3\\\";\\n                                                       path =\\n                                                       [{ Types.data =\\n                                                          (Types.TypeNs\\n                                                             \\\"ossl_provider_st\\\");\\n                                                          disambiguator = 0 }\\n                                                         ]\\n                                                       };\\n                                                     generic_args = [];\\n                                                     trait_refs = []})\\n                                                 ]\\n                                               }\\n                                             }\\n                                            ]},\\n                                        false))\\n                                     ];\\n                                   output =\\n                                   Types.Adt {\\n                                     def_id =\\n                                     { Types.index = (2, 2222);\\n                                       krate = \\\"core\\\";\\n                                       path =\\n                                       [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                          disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"non_null\\\");\\n                                           disambiguator = 0 };\\n                                         { Types.data =\\n                                           (Types.TypeNs \\\"NonNull\\\");\\n                                           disambiguator = 0 }\\n                                         ]\\n                                       };\\n                                     generic_args =\\n                                     [(Types.Type\\n                                         Types.Adt {\\n                                           def_id =\\n                                           { Types.index = (27, 20845);\\n                                             krate = \\\"openssl3\\\";\\n                                             path =\\n                                             [{ Types.data =\\n                                                (Types.TypeNs\\n                                                   \\\"ossl_provider_st\\\");\\n                                                disambiguator = 0 }\\n                                               ]\\n                                             };\\n                                           generic_args = []; trait_refs = []})\\n                                       ];\\n                                     trait_refs = []};\\n                                   safety = Types.Safe }\\n                                 })};\\n                          hir_id = (Some (\\\"543\\\", \\\"331\\\"));\\n                          span =\\n                          { Types.filename =\\n                            (Types.Real\\n                               (Types.LocalPath\\n                                  \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                            hi = { Types.col = \\\"85\\\"; line = \\\"190\\\" };\\n                            lo = { Types.col = \\\"58\\\"; line = \\\"190\\\" } };\\n                          ty =\\n                          Types.Adt {\\n                            def_id =\\n                            { Types.index = (2, 2222); krate = \\\"core\\\";\\n                              path =\\n                              [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                 disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                                  disambiguator = 0 };\\n                                { Types.data = (Types.TypeNs \\\"NonNull\\\");\\n                                  disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args =\\n                            [(Types.Type\\n                                Types.Adt {\\n                                  def_id =\\n                                  { Types.index = (27, 20845);\\n                                    krate = \\\"openssl3\\\";\\n                                    path =\\n                                    [{ Types.data =\\n                                       (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                       disambiguator = 0 }\\n                                      ]\\n                                    };\\n                                  generic_args = []; trait_refs = []})\\n                              ];\\n                            trait_refs = []}\\n                          }\\n                         ];\\n                       bounds_impls = [];\\n                       fn_span =\\n                       { Types.filename =\\n                         (Types.Real\\n                            (Types.LocalPath\\n                               \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                         hi = { Types.col = \\\"94\\\"; line = \\\"190\\\" };\\n                         lo = { Types.col = \\\"86\\\"; line = \\\"190\\\" } };\\n                       from_hir_call = true;\\n                       fun' =\\n                       { Types.attributes = [];\\n                         contents =\\n                         Types.GlobalName {\\n                           id =\\n                           { Types.index = (2, 2245); krate = \\\"core\\\";\\n                             path =\\n                             [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                disambiguator = 0 };\\n                               { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                                 disambiguator = 0 };\\n                               { Types.data = Types.Impl; disambiguator = 3 };\\n                               { Types.data = (Types.ValueNs \\\"as_ptr\\\");\\n                                 disambiguator = 0 }\\n                               ]\\n                             }};\\n                         hir_id = None;\\n                         span =\\n                         { Types.filename =\\n                           (Types.Real\\n                              (Types.LocalPath\\n                                 \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                           hi = { Types.col = \\\"92\\\"; line = \\\"190\\\" };\\n                           lo = { Types.col = \\\"86\\\"; line = \\\"190\\\" } };\\n                         ty =\\n                         (Types.Arrow\\n                            { Types.bound_vars = [];\\n                              value =\\n                              { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                                c_variadic = false;\\n                                inputs =\\n                                [Types.Adt {\\n                                   def_id =\\n                                   { Types.index = (2, 2222); krate = \\\"core\\\";\\n                                     path =\\n                                     [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                        disambiguator = 0 };\\n                                       { Types.data =\\n                                         (Types.TypeNs \\\"non_null\\\");\\n                                         disambiguator = 0 };\\n                                       { Types.data =\\n                                         (Types.TypeNs \\\"NonNull\\\");\\n                                         disambiguator = 0 }\\n                                       ]\\n                                     };\\n                                   generic_args =\\n                                   [(Types.Type\\n                                       Types.Adt {\\n                                         def_id =\\n                                         { Types.index = (27, 20845);\\n                                           krate = \\\"openssl3\\\";\\n                                           path =\\n                                           [{ Types.data =\\n                                              (Types.TypeNs\\n                                                 \\\"ossl_provider_st\\\");\\n                                              disambiguator = 0 }\\n                                             ]\\n                                           };\\n                                         generic_args = []; trait_refs = []})\\n                                     ];\\n                                   trait_refs = []}\\n                                  ];\\n                                output =\\n                                (Types.RawPtr\\n                                   (Types.Adt {\\n                                      def_id =\\n                                      { Types.index = (27, 20845);\\n                                        krate = \\\"openssl3\\\";\\n                                        path =\\n                                        [{ Types.data =\\n                                           (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                           disambiguator = 0 }\\n                                          ]\\n                                        };\\n                                      generic_args = []; trait_refs = []},\\n                                    true));\\n                                safety = Types.Safe }\\n                              })\\n                         };\\n                       generic_args =\\n                       [(Types.Type\\n                           Types.Adt {\\n                             def_id =\\n                             { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                               path =\\n                               [{ Types.data =\\n                                  (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                  disambiguator = 0 }\\n                                 ]\\n                               };\\n                             generic_args = []; trait_refs = []})\\n                         ];\\n                       trait = None;\\n                       ty =\\n                       (Types.Arrow\\n                          { Types.bound_vars = [];\\n                            value =\\n                            { Types.abi = Types.Abi {todo = \\\"Rust\\\"};\\n                              c_variadic = false;\\n                              inputs =\\n                              [Types.Adt {\\n                                 def_id =\\n                                 { Types.index = (2, 2222); krate = \\\"core\\\";\\n                                   path =\\n                                   [{ Types.data = (Types.TypeNs \\\"ptr\\\");\\n                                      disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"non_null\\\");\\n                                       disambiguator = 0 };\\n                                     { Types.data = (Types.TypeNs \\\"NonNull\\\");\\n                                       disambiguator = 0 }\\n                                     ]\\n                                   };\\n                                 generic_args =\\n                                 [(Types.Type\\n                                     Types.Adt {\\n                                       def_id =\\n                                       { Types.index = (27, 20845);\\n                                         krate = \\\"openssl3\\\";\\n                                         path =\\n                                         [{ Types.data =\\n                                            (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                            disambiguator = 0 }\\n                                           ]\\n                                         };\\n                                       generic_args = []; trait_refs = []})\\n                                   ];\\n                                 trait_refs = []}\\n                                ];\\n                              output =\\n                              (Types.RawPtr\\n                                 (Types.Adt {\\n                                    def_id =\\n                                    { Types.index = (27, 20845);\\n                                      krate = \\\"openssl3\\\";\\n                                      path =\\n                                      [{ Types.data =\\n                                         (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                         disambiguator = 0 }\\n                                        ]\\n                                      };\\n                                    generic_args = []; trait_refs = []},\\n                                  true));\\n                              safety = Types.Safe }\\n                            })};\\n                     hir_id = None;\\n                     span =\\n                     { Types.filename =\\n                       (Types.Real\\n                          (Types.LocalPath\\n                             \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                       hi = { Types.col = \\\"94\\\"; line = \\\"190\\\" };\\n                       lo = { Types.col = \\\"58\\\"; line = \\\"190\\\" } };\\n                     ty =\\n                     (Types.RawPtr\\n                        (Types.Adt {\\n                           def_id =\\n                           { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                             path =\\n                             [{ Types.data =\\n                                (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                disambiguator = 0 }\\n                               ]\\n                             };\\n                           generic_args = []; trait_refs = []},\\n                         true))\\n                     }};\\n                 hir_id = (Some (\\\"543\\\", \\\"329\\\"));\\n                 span =\\n                 { Types.filename =\\n                   (Types.Real\\n                      (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                   hi = { Types.col = \\\"94\\\"; line = \\\"190\\\" };\\n                   lo = { Types.col = \\\"58\\\"; line = \\\"190\\\" } };\\n                 ty =\\n                 (Types.RawPtr\\n                    (Types.Adt {\\n                       def_id =\\n                       { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                         path =\\n                         [{ Types.data = (Types.TypeNs \\\"ossl_provider_st\\\");\\n                            disambiguator = 0 }\\n                           ]\\n                         };\\n                       generic_args = []; trait_refs = []},\\n                     false))\\n                 }\\n                ];\\n              bounds_impls = [];\\n              fn_span =\\n              { Types.filename =\\n                (Types.Real\\n                   (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                hi = { Types.col = \\\"95\\\"; line = \\\"190\\\" };\\n                lo = { Types.col = \\\"24\\\"; line = \\\"190\\\" } };\\n              from_hir_call = true;\\n              fun' =\\n              { Types.attributes = [];\\n                contents =\\n                Types.GlobalName {\\n                  id =\\n                  { Types.index = (27, 12675); krate = \\\"openssl3\\\";\\n                    path =\\n                    [{ Types.data = Types.ForeignMod; disambiguator = 693 };\\n                      { Types.data =\\n                        (Types.ValueNs \\\"OSSL_PROVIDER_self_test\\\");\\n                        disambiguator = 0 }\\n                      ]\\n                    }};\\n                hir_id = None;\\n                span =\\n                { Types.filename =\\n                  (Types.Real\\n                     (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n                  hi = { Types.col = \\\"57\\\"; line = \\\"190\\\" };\\n                  lo = { Types.col = \\\"24\\\"; line = \\\"190\\\" } };\\n                ty =\\n                (Types.Arrow\\n                   { Types.bound_vars = [];\\n                     value =\\n                     { Types.abi = Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                       c_variadic = false;\\n                       inputs =\\n                       [(Types.RawPtr\\n                           (Types.Adt {\\n                              def_id =\\n                              { Types.index = (27, 20845);\\n                                krate = \\\"openssl3\\\";\\n                                path =\\n                                [{ Types.data =\\n                                   (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                   disambiguator = 0 }\\n                                  ]\\n                                };\\n                              generic_args = []; trait_refs = []},\\n                            false))\\n                         ];\\n                       output = (Types.Int Types.I32); safety = Types.Unsafe\\n                       }\\n                     })\\n                };\\n              generic_args = []; trait = None;\\n              ty =\\n              (Types.Arrow\\n                 { Types.bound_vars = [];\\n                   value =\\n                   { Types.abi = Types.Abi {todo = \\\"C { unwind: false }\\\"};\\n                     c_variadic = false;\\n                     inputs =\\n                     [(Types.RawPtr\\n                         (Types.Adt {\\n                            def_id =\\n                            { Types.index = (27, 20845); krate = \\\"openssl3\\\";\\n                              path =\\n                              [{ Types.data =\\n                                 (Types.TypeNs \\\"ossl_provider_st\\\");\\n                                 disambiguator = 0 }\\n                                ]\\n                              };\\n                            generic_args = []; trait_refs = []},\\n                          false))\\n                       ];\\n                     output = (Types.Int Types.I32); safety = Types.Unsafe }\\n                   })};\\n            hir_id = (Some (\\\"543\\\", \\\"325\\\"));\\n            span =\\n            { Types.filename =\\n              (Types.Real\\n                 (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n              hi = { Types.col = \\\"95\\\"; line = \\\"190\\\" };\\n              lo = { Types.col = \\\"24\\\"; line = \\\"190\\\" } };\\n            ty = (Types.Int Types.I32) });\\n    region_scope = { Types.data = Types.Node; id = \\\"336\\\" };\\n    safety_mode = Types.ExplicitUnsafe;\\n    span =\\n    { Types.filename =\\n      (Types.Real (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n      hi = { Types.col = \\\"97\\\"; line = \\\"190\\\" };\\n      lo = { Types.col = \\\"15\\\"; line = \\\"190\\\" } };\\n    stmts = []; targeted_by_break = false};\\n  hir_id = (Some (\\\"543\\\", \\\"324\\\"));\\n  span =\\n  { Types.filename =\\n    (Types.Real (Types.LocalPath \\\"rust/implementation/openssl3/mod.rs\\\"));\\n    hi = { Types.col = \\\"97\\\"; line = \\\"190\\\" };\\n    lo = { Types.col = \\\"15\\\"; line = \\\"190\\\" } };\\n  ty = (Types.Int Types.I32) }\",\n                            ),\n                            1,\n                        ) {\n                            rust_primitives::hax::never_to_any({\n                                (return core::result::Result_Err(\n                                    core::convert::f_into(\n                                        Tuple2(\n                                            sandwich_proto::errors::SystemError_SYSTEMERROR_MEMORY(),\n                                            \"provider's self-test failed\",\n                                        ),\n                                    ),\n                                ))\n                            })\n                        })\n                    }\n                }\n            }\n        }\n    }"

                in
                Core.Result.Result_Ok
                ({
                    f_lib_ctx = libctx;
                    f__default_provider = default_provider;
                    f__oqs_provider = oqs_provider
                  }
                  <:
                  t_LibCtx)
                <:
                Core.Result.t_Result t_LibCtx Sandwich.Error.t_Error
              | Core.Result.Result_Err err ->
                Core.Result.Result_Err err <: Core.Result.t_Result t_LibCtx Sandwich.Error.t_Error)
            <:
            Core.Ops.Control_flow.t_ControlFlow
              (Core.Result.t_Result t_LibCtx Sandwich.Error.t_Error)
              (Core.Result.t_Result t_LibCtx Sandwich.Error.t_Error)
          | Core.Result.Result_Err err ->
            Core.Ops.Control_flow.ControlFlow_Continue
            (Core.Result.Result_Err err <: Core.Result.t_Result t_LibCtx Sandwich.Error.t_Error)
            <:
            Core.Ops.Control_flow.t_ControlFlow
              (Core.Result.t_Result t_LibCtx Sandwich.Error.t_Error)
              (Core.Result.t_Result t_LibCtx Sandwich.Error.t_Error))
      | Core.Result.Result_Err err ->
        Core.Ops.Control_flow.ControlFlow_Continue
        (Core.Result.Result_Err
          (Core.Convert.f_from #FStar.Tactics.Typeclasses.solve err
            <:
            (Sandwich_proto.Errors.t_SystemError & string) -> Sandwich.Error.t_Error)
          <:
          Core.Result.t_Result t_LibCtx Sandwich.Error.t_Error)
        <:
        Core.Ops.Control_flow.t_ControlFlow (Core.Result.t_Result t_LibCtx Sandwich.Error.t_Error)
          (Core.Result.t_Result t_LibCtx Sandwich.Error.t_Error))
